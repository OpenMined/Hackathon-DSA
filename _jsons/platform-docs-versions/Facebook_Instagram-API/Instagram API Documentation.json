{
    "0": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api\n",
        "line_start": 0,
        "line_end": 1
    },
    "1": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tInstagram Graph API\n\nContent: \n# Instagram Graph API  \nThe Instagram Graph API allows [Instagram Professionals](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F502981923235522&h=AT3B3sMOiVW_S86mIFvILQZEYOVOs1TQtRK7Phvlthq0dOBrfGlRFKFTxK-nlURn2os-2LPesF0viSz3fJiJUJvwB7Sx1RsTfwsJ1yZwgtZRGtLBD7rjp__fj9e9Wen3VaPEW-oOb7QtzC2wx-Gr9Q) \u2014 Businesses and Creators \u2014 to use your app to manage their presence on Instagram. The API can be used to get and publish their media, manage and reply to comments on their media, identify media where they have been @mentioned by other Instagram users, find hashtagged media, and get basic metadata and metrics about other Instagram Businesses and Creators.  \nThe API is intended for Instagram Businesses and Creators who need insight into, and full control over, all of their social media interactions. If you are building an app for consumers or you only need to get an app user's basic profile information, photos, and videos, consider the [Instagram Basic Display API](https://developers.facebook.com/docs/instagram-basic-display-api) instead.  \nThe API is built on the Facebook Graph API. If you are unfamiliar with the Facebook Graph API, please read our [Facebook Graph API documentation](https://developers.facebook.com/docs/graph-api/) to learn how it works before proceeding.\n",
        "line_start": 1,
        "line_end": 5
    },
    "2": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tInstagram Graph API\n\tCommon Uses\n\nContent: \n## Common Uses  \n* [Getting](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#get-media) and [managing](https://developers.facebook.com/docs/instagram-api/reference/ig-media) published photos, videos, and stories\n* [Getting basic data about other Instagram Business and Creator accounts](https://developers.facebook.com/docs/instagram-api/guides/business-discovery)\n* [Moderating comments and their replies](https://developers.facebook.com/docs/instagram-api/guides/comment-moderation)\n* [Measuring media and profile interaction](https://developers.facebook.com/docs/instagram-api/guides/insights)\n* [Discovering hashtagged media](https://developers.facebook.com/docs/instagram-api/guides/hashtag-search)\n* [Discovering @mentions](https://developers.facebook.com/docs/instagram-api/guides/mentions)\n* [Publishing photos and videos](https://developers.facebook.com/docs/instagram-api/guides/content-publishing)  \n[](#)\n",
        "line_start": 9,
        "line_end": 18
    },
    "3": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tInstagram Graph API\n\tLimitations\n\nContent: \n## Limitations  \n* The API cannot access Instagram consumer accounts (i.e., non-Business or non-Creator Instagram accounts). If you are building an app for consumer users, use the [Instagram Basic Display API](https://developers.facebook.com/docs/instagram-basic-display-api) instead.\n* [Content Publishing](https://developers.facebook.com/docs/instagram-api/guides/content-publishing) is available to all Instagram Professional accounts, except Stories, which are only available to business accounts.\n* [Ordering results](https://developers.facebook.com/docs/graph-api/using-graph-api#ordering) is not supported\n* All endpoints support cursor-based [pagination](https://developers.facebook.com/docs/graph-api/using-graph-api#paging), but the [User Insights](https://developers.facebook.com/docs/instagram-api/reference/ig-user/insights) edge is the only endpoint that supports time-based pagination  \n[](#)\n",
        "line_start": 21,
        "line_end": 27
    },
    "4": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tInstagram Graph API\n\tDocumentation Contents\n\nContent: \n## Documentation Contents  \n|     |     |\n| --- | --- |\n| ### [Overview](https://developers.facebook.com/docs/instagram-api/overview)<br><br>Explanations of core concepts and usage requirements. | ### [Get Started](https://developers.facebook.com/docs/instagram-api/getting-started)<br><br>A short tutorial to get you up and running. |\n| ### [Guides](https://developers.facebook.com/docs/instagram-api/guides)<br><br>Use case based guides to help you perform specific actions. | ### [Reference](https://developers.facebook.com/docs/instagram-api/reference)<br><br>Component and endpoint references. |  \n[](#)\n",
        "line_start": 30,
        "line_end": 36
    },
    "5": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tInstagram Graph API\n\tSee Also\n\nContent: \n## See Also  \n* [Facebook Graph API](https://developers.facebook.com/docs/graph-api/)\n* [Instagram Basic Display API](https://developers.facebook.com/docs/instagram-basic-display-api)\n* [Instagram Professional accounts](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F502981923235522&h=AT1RbyExKrDiBbZ81fvhO4EIbnNVyA8ZvyjHOn5MMh-hVeU-5uQfsrbV0AH40VwAy2yjEFhKOBpS-nRlxkxCYoEiAWq4F6694L8ri-8jWhhTG6Wjln7hODqQlQ8WA5sKn28X5TshasyJp7G9YybXjA)\n* [Set Up a Professional Account on Instagram](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F502981923235522&h=AT0ivYhy8rWg84yniLLWNlOVqrzD3vk-s9ebE0RksBgdnfb_SaV2-BF4LR-V3OpykABWlU8vwC7HKPbVYHL89jVszvw7VTGJ1uGkW9wwXjdygR7LCm0a0FzehSwBLkc7GPooDj6fUVUXg1KIyzC8Gw)\n* [Instagram Messaging with Messenger Platform](https://developers.facebook.com/docs/messenger-platform/instagram)  \n[](#)  \n[](#)\n",
        "line_start": 39,
        "line_end": 47
    },
    "6": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api/overview\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api/overview\n",
        "line_start": 51,
        "line_end": 52
    },
    "7": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\nContent: \n# Overview  \nThe Instagram Graph API is a collection of Facebook Graph API endpoints that allow apps to access data in [Instagram Professional accounts](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F502981923235522&h=AT0frtnvT6ee8vwu7kSGN3CZSVokxbtHqlIBTs8nAX0lKVX-1TVDC1MVl1xVubinZmr8hSGgfz2LftZk6WBMhAJtggfZRUGig8ojJ-vncYTte_DBQGSqmNh70QcAA_FOFiuwG0IxQKpiHAH2DS08gA) (both Business and Creator accounts). If you are unfamiliar with the Facebook Graph API, please read our [Graph API documentation](https://developers.facebook.com/docs/graph-api/) before proceeding.\n",
        "line_start": 52,
        "line_end": 54
    },
    "8": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tBase URL\n\nContent: \n## Base URL  \nAll endpoints can be accessed via the `graph.facebook.com` host.  \n[](#)\n",
        "line_start": 56,
        "line_end": 59
    },
    "9": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tApp Users\n\nContent: \n## App Users  \nInstagram Professional accounts are accessed indirectly through Facebook accounts so your app users must have a Facebook account and use it when signing into your app. In addition, the Facebook account must be able to perform admin-equivalent [Tasks](#tasks) on a Facebook Page that has been [connected to the Instagram account](#pages) they are trying to access.  \nThese requirements apply to all app users, even those who have a Role on your app or a Role on a Business that has claimed your app.  \n[](#)\n",
        "line_start": 62,
        "line_end": 66
    },
    "10": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tAuthentication\n\nContent: \n## Authentication  \nApp user authentication is handled through access tokens. Instagram Professional accounts are accessed indirectly through Facebook accounts, so all API requests must include your app users's Facebook [User access token](https://developers.facebook.com/docs/facebook-login/access-tokens/#usertokens). You can get tokens from app users by implementing [Facebook Login](https://developers.facebook.com/docs/facebook-login). Note that Facebook Login does not support Instagram credentials so app users must sign in using a Facebook account.  \n[](#)\n",
        "line_start": 70,
        "line_end": 73
    },
    "11": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tAuthorization\n\nContent: \n## Authorization  \nEndpoint authorization is handled through [permissions](https://developers.facebook.com/docs/permissions/reference) and [features](https://developers.facebook.com/docs/apps/features-reference). Before your app can use an endpoint to access an app user's Instagram data, you must first request all permissions required by those endpoints from the app user. The app user must then grant those permissions to your app. Once granted, you can query the endpoints to access the user's data.  \nNote that a permission only allows access to data created by the user who granted the permission. There are a few endpoints that allow apps to access data not created by the app user, but the accessible data is limited and public.  \nYou can request permissions from app users by implementing [Facebook Login](https://developers.facebook.com/docs/facebook-login). App users who have a [role](https://developers.facebook.com/docs/development/build-and-test/app-roles) on your app can grant any requested permissions. App users who do not have a role on your app can only grant permissions and features that have been approved through the [App Review](#app-review) process.  \nThe API uses the following permissions and features:  \n* [`instagram_basic`](https://developers.facebook.com/docs/permissions/reference/instagram_basic)\n* [`instagram_content_publish`](https://developers.facebook.com/docs/permissions/reference/instagram_content_publish)\n* [`instagram_manage_comments`](https://developers.facebook.com/docs/permissions/reference/instagram_manage_comments)\n* [`instagram_manage_insights`](https://developers.facebook.com/docs/permissions/reference/instagram_manage_insights)\n* [`instagram_shopping_tag_products`](https://developers.facebook.com/docs/permissions/reference/instagram_shopping_tag_products)\n* [`pages_show_list`](https://developers.facebook.com/docs/permissions/reference/pages_show_list)\n* [`pages_read_engagement`](https://developers.facebook.com/docs/permissions/reference/pages_read_engagement)\n* [Instagram Public Content Access](https://developers.facebook.com/docs/features-reference/instagram-public-content-access)  \nRefer to our [endpoint reference](https://developers.facebook.com/docs/instagram-api/reference) to determine which permission and features your app will need to request from app users.\n",
        "line_start": 76,
        "line_end": 90
    },
    "12": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tAuthorization\n\tInstagram Messaging\n\nContent: \n### Instagram Messaging  \nIf you plan to implement Instagram Messaging from Messenger Platform, you will need to include the `instagram_manage_messages` permission. [Learn more about Instagram Messaging. ![](https://scontent-cdg4-1.xx.fbcdn.net/v/t39.2365-6/276034258_1045248339390233_3876773921429146148_n.png?_nc_cat=110&ccb=1-7&_nc_sid=e280be&_nc_ohc=WPfL2rhRbykAX8aThOd&_nc_ht=scontent-cdg4-1.xx&oh=00_AfAeKtIuTWG4LWvhf60z5-EUNIsbizHHpLc-3l8mqFhnLw&oe=65D587B5)](https://developers.facebook.com/docs/messenger-platform/overview#permissions)  \n[](#)\n",
        "line_start": 97,
        "line_end": 100
    },
    "13": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tCollaborators\n\nContent: \n## Collaborators  \nThe [Instagram Collab](https://www.facebook.com/help/instagram/291200585956732) feature allows Instagram app users to co-author content (i.e. publish media) with other accounts (collaborators).  \nWith a few exceptions, data on or about co-authored media can only be accessed through the API by the user who published the media; collaborators are unable to access this data via the API. The only exceptions are when searching for top performing media or recently published media that has been tagged with a specific hashtag. See [Hashtag Search](https://developers.facebook.com/docs/instagram-api/guides/hashtag-search).  \n[](#)\n",
        "line_start": 103,
        "line_end": 107
    },
    "14": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tPages\n\nContent: \n## Pages  \n[Instagram Professional accounts](#instagram-professional-accounts) must be connected to a [Facebook Page](https://www.facebook.com/business/pages) before their data can be accessed through the API. Once connected, any Facebook User who is able to perform [Tasks](#tasks) on that Page can grant your app an access token, which can then be used in API requests.  \nOur [Add or change the Facebook Page connected to your Instagram professional account](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F570895513091465&h=AT2HEcHWcyPZeVpermcRPxII_5_Lhg6_FK-6BEqM4qrHoWAkEjFaED9m1alRYYvTeMPMBTMQPFaRHYHfWZ4F09OZu9_wyzZyWTLazkBksP4SUS0AJMcyxEvAZn9AGgJC59nRwARq6k8yByM6W5zV2Q) help article explains how to connect to a Facebook Page to an Instagram Professional account.  \n[](#)\n",
        "line_start": 111,
        "line_end": 115
    },
    "15": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tTasks\n\nContent: \n## Tasks  \nIn order for an app user to grant your app permissions, the app user must be able to perform [tasks](https://developers.facebook.com/docs/pages/access-tokens#page-tasks) on the Facebook Page connected to the Instagram account they are attempting to access. App users may grant your app permissions based on tasks they are able to perform as follows:  \n| Permission | `MANAGE` | `CREATE_CONTENT` | `MODERATE` | `ADVERTISE` | `ANALYZE` |\n| --- | --- | --- | --- | --- | --- |\n| instagram\\_basic | \u2714   | \u2714   | \u2714   | \u2714   | \u2714   |\n| instagram\\_content\\_publish | \u2714   | \u2714   |     |     |     |\n| instagram\\_manage\\_comments | \u2714   | \u2714   | \u2714   |     |     |\n| instagram\\_manage\\_insights | \u2714   | \u2714   | \u2714   | \u2714   | \u2714   |  \nYou can determine which tasks an app user is able to perform on a Page by querying the [`GET /me/accounts`](https://developers.facebook.com/docs/graph-api/reference/user/accounts#Reading) endpoint with the app user's User access token. The endpoint will return a list of Pages that the app user is able to perform tasks on, and indicate which tasks the user can perform on each of them.  \nRefer to the [reference documentation](https://developers.facebook.com/docs/instagram-api/reference/) to see which permissions each endpoint requires. The API does not support [Business Manager System Users](https://developers.facebook.com/docs/marketing-api/system-users), or app users who have the Live Contributor role.\n",
        "line_start": 119,
        "line_end": 129
    },
    "16": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tTasks\n\tReferring to tasks\n\nContent: \n### Referring to tasks  \nIf you need to inform your app users about tasks (and which ones are required to use your app properly), here's how tasks are referred to in our various UIs.  \n#### Classic Pages  \n[Classic Pages](https://www.facebook.com/help/135275340210354) refer to tasks as **roles**. App users with an Admin role on a Page can grant your app any permission. App users with other roles can grant permissions as follows:  \n| Role | Grantable Permissions |\n| --- | --- |\n| Editor | instagram\\_basic  <br>instagram\\_content\\_publish |\n| Moderator | instagram\\_basic  <br>instagram\\_manage\\_comments  <br>instagram\\_manage\\_insights |\n| Advertiser | instagram\\_basic  <br>instagram\\_manage\\_insights |\n| Analyst | instagram\\_basic  <br>instagram\\_manage\\_insights |  \n#### New Experience Pages  \n[New Experience Pages](https://www.facebook.com/business/help/782660422528806) refer to tasks as either Facebook Access or Task Access. App users with Facebook Access on a Page can grant your app any permission. App users with Task Access can grant permissions as follows:  \n| Task Access | Grantable Permissions |\n| --- | --- |\n| Ads | instagram\\_basic |\n| Content | instagram\\_basic  <br>instagram\\_content\\_publish |\n| Insights | instagram\\_basic  <br>instagram\\_manage\\_insights |\n| Messages & Community Activity | instagram\\_basic  <br>instagram\\_manage\\_comments |  \nTo determine if a Page is using the new experience, request its [`has_transitioned_to_new_page_experience`](https://developers.facebook.com/docs/graph-api/reference/page/#Reading) field. This value return `true` if the Page uses the new experience.  \n[](#)\n",
        "line_start": 134,
        "line_end": 154
    },
    "17": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tApp Review\n\nContent: \n## App Review  \nYour app must complete [App Review](https://developers.facebook.com/docs/app-review) before it can be used by [app users](#app-users) who do not have a [Role](https://developers.facebook.com/docs/apps#roles) on your app or a [Role](https://www.facebook.com/business/help/623924618023072?id=2190812977867143) on a Business that has claimed your app. If your app will only be used by app users who have a Role on your app or Business, you do not need to complete App Review.  \nYour App Review submission does not need to include any [Facebook test user](https://developers.facebook.com/docs/apps/test-users) credentials if you have implemented [Facebook Login](https://developers.facebook.com/docs/facebook-login) and your app is publicly available. However, if our reviewers need to sign into a non-Facebook account in order to trigger your implementation of Facebook Login, you must include the non-Facebook account credentials in your submission.\n",
        "line_start": 164,
        "line_end": 167
    },
    "18": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tApp Review\n\tPrivate Apps\n\nContent: \n### Private Apps  \nIf our reviewers are unable to test your app because it is behind a private intranet, has no user interface, or has not implemented Facebook Login, you may only request approval for these Permissions:  \n* [instagram\\_basic](https://developers.facebook.com/docs/permissions/reference/instagram_basic)\n* [instagram\\_manage\\_comments](https://developers.facebook.com/docs/permissions/reference/instagram_manage_comments)  \n[](#)\n",
        "line_start": 170,
        "line_end": 175
    },
    "19": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tBusiness Verification\n\nContent: \n## Business Verification  \nYou must complete [Business Verification](https://developers.facebook.com/docs/apps#business-verification) if your app will be used by app users who do not have a Role on the app itself, or a Role in a Business that has claimed the app.  \n[](#)\n",
        "line_start": 179,
        "line_end": 182
    },
    "20": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tRate Limiting\n\nContent: \n## Rate Limiting  \nAll endpoints are subject to [Instagram Business Use Case rate limiting](https://developers.facebook.com/docs/graph-api/overview/rate-limiting#instagram-graph-api) except for [Business Discovery](https://developers.facebook.com/docs/instagram-api/guides/business-discovery) and [Hashtag Search](https://developers.facebook.com/docs/instagram-api/guides/hashtag-search) endpoints, which are subject to [Platform Rate limiting](https://developers.facebook.com/docs/graph-api/overview/rate-limiting#platform-rate-limits).  \n[](#)\n",
        "line_start": 185,
        "line_end": 188
    },
    "21": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tWebhooks\n\nContent: \n## Webhooks  \nYou can use Webhooks to have notifications sent to you whenever someone comments on your app users' media objects or when any of their stories expire. Refer to our [Webhooks documentation](https://developers.facebook.com/docs/graph-api/webhooks) to learn how to use Webhooks, then set up a webhook for the `Instagram` topic and subscribe to its `comments` and `story_insights` fields.  \n[](#)\n",
        "line_start": 191,
        "line_end": 194
    },
    "22": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tOverview\n\tInstagram Messaging\n\nContent: \n## Instagram Messaging  \nSeveral Instagram Graph API endpoints are used in conjunction with the Messenger Platform endpoints to allow your app users to interact with direct messages sent to their Instagram Professional accounts. Refer to the Messenger Platform's [Instagram Messaging](https://developers.facebook.com/docs/messenger-platform/instagram) documentation to learn how to access messages in Instagram Business accounts.  \n[](#)  \n[](#)\n",
        "line_start": 197,
        "line_end": 201
    },
    "23": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api/getting-started\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api/getting-started\n",
        "line_start": 205,
        "line_end": 206
    },
    "24": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGetting Started\n\nContent: \n# Getting Started  \nThis document explains how to successfully call the Instagram Graph API with your app and get an Instagram Business or Creator Account's media objects. It assumes you are familiar with the [Graph API](https://developers.facebook.com/docs/graph-api) and [Facebook Login](https://developers.facebook.com/docs/facebook-login), and know how to perform REST API calls. If you do not have an app yet, you can use the [Graph API Explorer](https://developers.facebook.com/tools/explorer) instead and skip steps 1 and 2.\n",
        "line_start": 206,
        "line_end": 208
    },
    "25": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGetting Started\n\tBefore You Start\n\nContent: \n## Before You Start  \nYou will need access to the following:  \n* An [Instagram Business Account](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F502981923235522&h=AT3WpEyPfxmyxB3Cl2zk58Ev0lYrWEwKD_lq9izP3RDglw8JfU-sWdwTWiz8aOSmJD7nrcvsjHHIfiA5UZAw7iSHLprrUqxMu2m4PIG2v5_L1fekchwA3ye0yZ6Xm8qXgk8ENIAXCA_NEs1JSpn1QQ) or [Instagram Creator Account](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F1158274571010880&h=AT2ifRHWu2A0LcdNqvwshZdzpujkaIVj8lx4C_ffFac59Zf6Ts3W5R4gkmXlCuuvuTqESFFsyU1K6zHcJN6_WKSEeFtEMCOV4ZZjI3yxK_234-8qoZU_Xa0bebpT5JhG86Qlrl07-DgXOiNYt7OVjQ)\n* A [Facebook Page connected to that account](https://developers.facebook.com/docs/instagram-api/overview#pages)\n* A Facebook Developer account that can perform [Tasks on that Page](https://developers.facebook.com/docs/instagram-api/overview#tasks)\n* A [registered Facebook App](https://developers.facebook.com/docs/development/register) with **Basic** settings configured  \n[](#)\n",
        "line_start": 210,
        "line_end": 217
    },
    "26": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGetting Started\n\t1\\. Configure Facebook Login\n\nContent: \n## 1\\. Configure Facebook Login  \nAdd the Facebook Login product to your app in the App Dashboard.  \n![](https://scontent-cdg4-3.xx.fbcdn.net/v/t39.2365-6/57313411_166141971002334_3488307145718366208_n.png?_nc_cat=104&ccb=1-7&_nc_sid=e280be&_nc_ohc=PjvWWxrQZiUAX-niDZy&_nc_ht=scontent-cdg4-3.xx&oh=00_AfAlAnR-EqxctBkNjQsiKw-AJ5w9hzqIIYxjBdgEdxshjg&oe=65D57EC6)  \nYou can leave all settings on their defaults. If you are implementing Facebook Login manually (which we don't recommend), enter your `redirect_uri` in the **Valid OAuth redirect URIs** field. If you will be using one of our SDKs, you can leave it blank.  \n[](#)\n",
        "line_start": 221,
        "line_end": 226
    },
    "27": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGetting Started\n\t2\\. Implement Facebook Login\n\nContent: \n## 2\\. Implement Facebook Login  \nFollow our [Facebook Login documentation](https://developers.facebook.com/docs/facebook-login) for your platform and implement Facebook Login into your app. Set up your implementation to request these permissions:  \n* [`instagram_basic`](https://developers.facebook.com/docs/apps/review/login-permissions#instagram-basic)\n* [`pages_show_list`](https://developers.facebook.com/docs/apps/review/login-permissions#pages-show-list)  \n[](#)\n",
        "line_start": 231,
        "line_end": 236
    },
    "28": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGetting Started\n\t3\\. Get a User Access Token\n\nContent: \n## 3\\. Get a User Access Token  \nOnce you've implemented Facebook Login, make sure you are signed into your Facebook Developer account, then access your app and trigger the Facebook Login modal. Remember, your Facebook Developer account must be able to perform [Tasks](https://developers.facebook.com/docs/instagram-api/overview#tasks) on the [Facebook Page](https://developers.facebook.com/docs/instagram-api/overview#pages) connected to the Instagram account you want to query.  \n![](https://scontent-cdg4-2.xx.fbcdn.net/v/t39.2365-6/57343078_287134128874563_1329098073791528960_n.png?_nc_cat=109&ccb=1-7&_nc_sid=e280be&_nc_ohc=SXKqtpgjOXUAX-DKTg5&_nc_ht=scontent-cdg4-2.xx&oh=00_AfCpG6WFDSl_A_30lpI6kBhBeiEsfJLa6MGVOsqPlNLnLA&oe=65D576B9)  \nOnce you have triggered the modal, click **OK** to grant your app the `instagram_basic` and `pages_show_list` permissions.  \nThe API should return a User access token. Capture the token so your app can use it in the next few queries. If you are using the Graph API Explorer, it will be captured automatically and displayed in the **Access Token** field for reference:  \n![](https://scontent-cdg4-1.xx.fbcdn.net/v/t39.2365-6/57308062_276123556625959_4652658984229011456_n.png?_nc_cat=110&ccb=1-7&_nc_sid=e280be&_nc_ohc=GSL2E_feeZcAX90FAt9&_nc_ht=scontent-cdg4-1.xx&oh=00_AfClWFOu8mhz-uUY70lzoDYELYgHDnjY5I6tKMh28xYv2w&oe=65D5899F)  \n[](#)\n",
        "line_start": 240,
        "line_end": 247
    },
    "29": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGetting Started\n\t4\\. Get the User's Pages\n\nContent: \n## 4\\. Get the User's Pages  \nQuery the `GET /me/accounts` endpoint (this translates to `GET /{user-id}/accounts`, which perform a `GET` on the Facebook [User](https://developers.facebook.com/docs/graph-api/reference/user) node, based on your access token).  \ncurl \\-i \\-X GET \\\\\n\"https://graph.facebook.com/`v19.0`/me/accounts?access\\_token={access-token}\"  \nThis should return a collection of Facebook Pages that the current Facebook User can perform the `MANAGE`, `CREATE_CONTENT`, `MODERATE`, or `ADVERTISE` tasks on:  \n{\n\"data\": \\[\n{\n\"access\\_token\": \"EAAJjmJ...\",\n\"category\": \"App Page\",\n\"category\\_list\": \\[\n{\n\"id\": \"2301\",\n\"name\": \"App Page\"\n}\n\\],\n\"name\": \"Metricsaurus\",\n\"id\": \"134895793791914\",  // capture the Page ID\n\"tasks\": \\[\n\"ANALYZE\",\n\"ADVERTISE\",\n\"MODERATE\",\n\"CREATE\\_CONTENT\",\n\"MANAGE\"\n\\]\n}\n\\]\n}  \nCapture the ID of the Facebook Page that's connected to the Instagram account that you want to query. Keep in mind that your app users may be able to perform tasks on multiple pages, so you eventually will have to introduce logic that can determine the correct Page ID to capture (or devise a UI where your app users can identify the correct Page for you).  \n![](https://scontent-cdg4-3.xx.fbcdn.net/v/t39.2365-6/57437240_2085096038272793_3947769475595501568_n.png?_nc_cat=106&ccb=1-7&_nc_sid=e280be&_nc_ohc=syxNAwtOUmgAX8YeajH&_nc_ht=scontent-cdg4-3.xx&oh=00_AfAR7-LLxyEG-7gY7TKri-Mp85WPsGUvL1oZMpJH6JiATg&oe=65D578C6)  \n[](#)\n",
        "line_start": 254,
        "line_end": 285
    },
    "30": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGetting Started\n\t5\\. Get the Page's Instagram Business Account\n\nContent: \n## 5\\. Get the Page's Instagram Business Account  \nUse the Page ID you captured to query the `GET /{page-id}?fields=instagram_business_account` endpoint:  \ncurl \\-i \\-X GET \\\\\n\"https://graph.facebook.com/`v19.0`/134895793791914?fields=instagram\\_business\\_account&access\\_token={access-token}\"  \nThis should return the [IG User](https://developers.facebook.com/docs/instagram-api/reference/ig-user) \u2014 an Instagram Business or Creator Account \u2014 that's connected to the Facebook Page.  \n{\n\"instagram\\_business\\_account\": {\n\"id\": \"17841405822304914\"  // Connected IG User ID\n},\n\"id\": \"134895793791914\"  // Facebook Page ID\n}  \nCapture the [IG User](https://developers.facebook.com/docs/instagram-api/reference/ig-user) ID.  \n![](https://scontent-cdg4-2.xx.fbcdn.net/v/t39.2365-6/57462471_316665542380805_102061440998834176_n.png?_nc_cat=107&ccb=1-7&_nc_sid=e280be&_nc_ohc=-0po3oJgQLYAX_bVgvd&_nc_ht=scontent-cdg4-2.xx&oh=00_AfCUqjzi9SLILJ1KSjr9sElo26T32mS5QdExGMlWQOqVUw&oe=65D55DF9)  \n[](#)\n",
        "line_start": 293,
        "line_end": 307
    },
    "31": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGetting Started\n\t6\\. Get the Instagram Business Account's Media Objects\n\nContent: \n## 6\\. Get the Instagram Business Account's Media Objects  \nUse the [IG User](https://developers.facebook.com/docs/instagram-api/reference/ig-user) ID you captured to query the `GET /{ig-user-id}/media` endpoint:  \ncurl \\-i \\-X GET \\\\\n\"https://graph.facebook.com/`v19.0`/17841405822304914/media?access\\_token={access-token}\"  \nThis should return the IDs of all the [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media) objects on the [IG User](https://developers.facebook.com/docs/instagram-api/reference/ig-user):  \n{\n\"data\": \\[\n{\n\"id\": \"17918195224117851\"\n},\n{\n\"id\": \"17895695668004550\"\n},\n{\n\"id\": \"17899305451014820\"\n},\n{\n\"id\": \"17896450804038745\"\n},\n{\n\"id\": \"17881042411086627\"\n},\n{\n\"id\": \"17869102915168123\"\n}\n\\],\n\"paging\": {\n\"cursors\": {\n\"before\": \"QVFIUkdGRXA2eHNNTUs4T1ZAXNGFxQTAtd3U4QjBLd1B2NXRMM1NkcnhqRFdBcEUzSDVJZATFoLWtXMWZAGU2VrRTk2RHVtTVlDckI2NjN0UERFa2JrUk4yMW13\",\n\"after\": \"QVFIUmlwbnFsM3N2cV9lZAFdCa0hDeV9qMVliT0VuMmJyNENxZA180c0t6VjFQVEJaTE9XV085aU92OUFLNFB6Szd2amo5aV9rTlVBcnNlWmEtMzYxcE1HSFR3\"\n}\n}\n}  \n![](https://scontent-cdg4-1.xx.fbcdn.net/v/t39.2365-6/57261700_588761411631102_2933352179429277696_n.png?_nc_cat=110&ccb=1-7&_nc_sid=e280be&_nc_ohc=nHGXEwU5TDoAX8B2Mf3&_nc_ht=scontent-cdg4-1.xx&oh=00_AfBWAWnpCmu9Qt3sak82sUiRRXOTcCsRdHYTxjz4yIiPSg&oe=65D555FD)  \nIf you are able to perform this final query successfully, you should be able to perform queries using any of the Instagram Graph API endpoints \u2014 just refer to our various guides and references to learn what each endpoint can do and what permissions they require.  \n[](#)\n",
        "line_start": 315,
        "line_end": 351
    },
    "32": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGetting Started\n\tNext Steps\n\nContent: \n## Next Steps  \n* Develop your app further so it can successfully use any other endpoints it needs, and keep track of the permissions each endpoint requires\n* If you plan to implement [Instagram Messaging from Messenger Platform](https://developers.facebook.com/docs/messenger-platform//instagram) you will need additional permissions\n* Complete the [App Review](https://developers.facebook.com/docs/instagram-api/overview#app-review) process and request approval for all of the permissions your app will need so your app users can grant them while your app is in [Live Mode](https://developers.facebook.com/docs/development/build-and-test/app-modes#live-mode)\n* Switch your app to Live Mode and market it to potential users  \nOnce your app is in Live Mode, any Facebook User who you've made your app available to can access an Instagram Business or Creator Account's data, as long as they have a Facebook User account that can perform Tasks on the Page connected to that Instagram Business or Creator Account.  \n[](#)  \n[](#)\n",
        "line_start": 359,
        "line_end": 367
    },
    "33": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api/guides\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api/guides\n",
        "line_start": 372,
        "line_end": 373
    },
    "34": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGuides\n\tBusiness Discovery\n\nContent: \n# Guides  \n## Business Discovery  \nThe [Business Discovery](https://developers.facebook.com/docs/instagram-api/guides/business-discovery) guide explains how to get basic metadata and metrics about other Instagram Business [IG Users](https://developers.facebook.com/docs/instagram-api/reference/ig-user).  \n[](#)\n",
        "line_start": 373,
        "line_end": 377
    },
    "35": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGuides\n\tComment Moderation\n\nContent: \n## Comment Moderation  \nThe [Comment Moderation](https://developers.facebook.com/docs/instagram-api/guides/comment-moderation) guide explains how to reply to comments, delete comments, hide/unhide comments, and disable/enable comments on [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media) objects owned by [IG Users](https://developers.facebook.com/docs/instagram-api/reference/ig-user).  \n[](#)\n",
        "line_start": 381,
        "line_end": 384
    },
    "36": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGuides\n\tContent Publishing\n\nContent: \n## Content Publishing  \nThe [Content Publishing](https://developers.facebook.com/docs/instagram-api/guides/content-publishing) guide explains how to publish [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media) objects on Instagram Business [IG Users](https://developers.facebook.com/docs/instagram-api/reference/ig-user).  \n[](#)\n",
        "line_start": 387,
        "line_end": 390
    },
    "37": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGuides\n\tHashtag Search\n\nContent: \n## Hashtag Search  \nThe [Hashtag Search](https://developers.facebook.com/docs/instagram-api/guides/hashtag-search) guide explains how to find public photos and videos that have been tagged with specific hashtags.  \n[](#)\n",
        "line_start": 393,
        "line_end": 396
    },
    "38": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGuides\n\tInsights\n\nContent: \n## Insights  \nThe [Insights](https://developers.facebook.com/docs/instagram-api/guides/insights) guide explains how to get social interaction metrics for [IG Users](https://developers.facebook.com/docs/instagram-api/reference/ig-user) and their [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media) objects.  \n[](#)\n",
        "line_start": 399,
        "line_end": 402
    },
    "39": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGuides\n\tMentions\n\nContent: \n## Mentions  \nThe [Mentions](https://developers.facebook.com/docs/instagram-api/guides/mentions) guide explains how to identify [IG Comments](https://developers.facebook.com/docs/instagram-api/reference/ig-comment) and [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media) in which an [IG User](https://developers.facebook.com/docs/instagram-api/reference/ig-user) has been tagged or @mentioned.  \n[](#)\n",
        "line_start": 405,
        "line_end": 408
    },
    "40": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tGuides\n\tWebhooks\n\nContent: \n## Webhooks  \nThe [Webhooks](https://developers.facebook.com/docs/instagram-api/guides/webhooks) guide explains how to get real-time notifications whenever Instagram users comment on any of an [IG User's](https://developers.facebook.com/docs/instagram-api/reference/ig-user) [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media) objects, @mention an [IG User](https://developers.facebook.com/docs/instagram-api/reference/ig-user) on other Instagram users' [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media) objects, or when an [IG User's](https://developers.facebook.com/docs/instagram-api/reference/ig-user) stories expire.  \n[](#)  \n[](#)\n",
        "line_start": 191,
        "line_end": 195
    },
    "41": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api/guides/business-discovery\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api/guides/business-discovery\n",
        "line_start": 419,
        "line_end": 420
    },
    "42": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tBusiness Discovery\n\nContent: \n# Business Discovery  \nYou can use the Instagram Graph API to get basic metadata and metrics about other Instagram Business and Creator Accounts.\n",
        "line_start": 420,
        "line_end": 422
    },
    "43": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tBusiness Discovery\n\tLimitations\n\nContent: \n## Limitations  \nData about age-gated Instagram Business Accounts will not be returned.  \n[](#)\n",
        "line_start": 21,
        "line_end": 24
    },
    "44": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tBusiness Discovery\n\tEndpoints\n\nContent: \n## Endpoints  \nThe API consists of the following endpoints. Refer to the endpoint's reference documentation for parameter and permission requirements.  \n* [`GET /{ig-user-id}/business_discovery`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/business_discovery)  \n[](#)\n",
        "line_start": 430,
        "line_end": 434
    },
    "45": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tBusiness Discovery\n\tExamples\n\tGetting an Account's Follower & Media Count\n\nContent: \n## Examples  \n### Getting an Account's Follower & Media Count  \nThis sample query shows how to get the number of followers and number of published media objects on the [Blue Bottle Coffee](https://l.facebook.com/l.php?u=https%3A%2F%2Fwww.instagram.com%2Fbluebottle%2F&h=AT0BNjG7hU5gOy-Tzgy0td9fc3lz87NbqE4gcwOgWCDwj4VwzmJLV5_AhO4tlfO6r6qWTLmvVG3C9tnpT6MdwGvZ55JJGrXums4vrtLU9NKrGM4qaOOAb2oSdh0TaUQYTrflmQq_g3NUyq2kVyekFQ) Instagram Business Account. Notice that business discovery queries are performed on the Instagram Business or Creator Account's ID (in this case, `17841405309211844`), not the username of the Instagram Business or Creator Account that you are attempting to get data about (`bluebottle` in this example).  \n#### Sample Request  \ncurl \\-i \\-X GET \\\\\n\"https://graph.facebook.com/v3.2/17841405309211844?fields=business\\_discovery.username(bluebottle){followers\\_count,media\\_count}&access\\_token={access-token}\"  \n#### Sample Response  \n{\n\"business\\_discovery\": {\n\"followers\\_count\": 267793,\n\"media\\_count\": 1205,\n\"id\": \"17841401441775531\" // Blue Bottle's Instagram Account ID\n},\n\"id\": \"17841405309211844\"  // ID of the Instagram account performing the query\n}\n",
        "line_start": 438,
        "line_end": 453
    },
    "46": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tBusiness Discovery\n\tExamples\n\tGetting Media\n\nContent: \n### Getting Media  \nSince you can make nested requests by specifying an edge via the `fields` parameter, you can request the targeted Business or Creator Account's `media` edge to get all of its published media objects:  \n#### Sample Request  \ncurl \\-i \\-X GET \\\\\n\"https://graph.facebook.com/v3.2/17841405309211844?fields=business\\_discovery.username(bluebottle){followers\\_count,media\\_count,media}&access\\_token={access-token}\"  \n#### Sample Response  \n{\n\"business\\_discovery\": {\n\"followers\\_count\": 267793,\n\"media\\_count\": 1205,\n\"media\": {\n\"data\": \\[\n{\n\"id\": \"17858843269216389\"\n},\n{\n\"id\": \"17894036119131554\"\n},\n{\n\"id\": \"17894449363137701\"\n},\n{\n\"id\": \"17844278716241265\"\n},\n... // results truncated for brevity\n\\],\n\"id\": \"17841401441775531\"\n},\n},\n\"id\": \"17841405309211844\"\n}\n",
        "line_start": 460,
        "line_end": 491
    },
    "47": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tBusiness Discovery\n\tExamples\n\tGetting Basic Metrics on Media\n\nContent: \n### Getting Basic Metrics on Media  \nYou can use both nested requests and field expansion to get public fields for a Business or Creator Account's media objects. Note that this does not grant you permission to access media objects directly \u2014 performing a `GET` on any returned [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media) will fail due to insufficient permissions.  \nFor example, here's how to get the number of comments and likes for each of the media objects published by Blue Bottle Coffee:  \n#### Sample Request  \ncurl \\-i \\-X GET \\\\\n\"https://graph.facebook.com/v3.2/17841405309211844?fields=business\\_discovery.username(bluebottle){followers\\_count,media\\_count,media{comments\\_count,like\\_count}}&access\\_token={access-token}\"  \n#### Sample Response  \n{\n\"business\\_discovery\": {\n\"followers\\_count\": 267793,\n\"media\\_count\": 1205,\n\"media\": {\n\"data\": \\[\n{\n\"comments\\_count\": 50,\n\"like\\_count\": 5841,\n\"id\": \"17858843269216389\"\n},\n{\n\"comments\\_count\": 11,\n\"like\\_count\": 2998,\n\"id\": \"17894036119131554\"\n},\n{\n\"comments\\_count\": 28,\n\"like\\_count\": 3644,\n\"id\": \"17894449363137701\"\n},\n{\n\"comments\\_count\": 43,\n\"like\\_count\": 4943,\n\"id\": \"17844278716241265\"\n},\n{\n\"comments\\_count\": 60,\n\"like\\_count\": 9347,\n\"id\": \"17899363132086521\"\n},\n{\n\"comments\\_count\": 63,\n\"like\\_count\": 6913,\n\"id\": \"17893114378137541\"\n},\n{\n\"comments\\_count\": 16,\n\"like\\_count\": 2791,\n\"id\": \"17886057709171561\"\n},\n{\n\"comments\\_count\": 15,\n\"like\\_count\": 3895,\n\"id\": \"17856337633208377\"\n},\n\\],\n},\n\"id\": \"17841401441775531\"\n},\n\"id\": \"17841405976406927\"\n}  \n[](#)  \n[](#)\n",
        "line_start": 497,
        "line_end": 558
    },
    "48": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api/guides/content-publishing\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api/guides/content-publishing\n",
        "line_start": 567,
        "line_end": 568
    },
    "49": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\nContent: \n# Content Publishing  \nYou can use the Instagram Graph API to publish single images, videos, reels (i.e., single media posts), or posts containing multiple images and videos (carousel posts) on Instagram Professional accounts.  \nBeginning July 1, 2023, all single feed videos published through the Instagram Content Publishing API will be shared as reels.\n",
        "line_start": 568,
        "line_end": 571
    },
    "50": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tRequirements\n\tAccess Tokens\n\nContent: \n## Requirements  \n### Access Tokens  \nAll requests must include the app user's [User](https://developers.facebook.com/docs/facebook-login/access-tokens/#usertokens) access token.\n",
        "line_start": 574,
        "line_end": 577
    },
    "51": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tRequirements\n\tPermissions\n\nContent: \n### Permissions  \nPublishing relies on a combination of the following permissions. The exact combination depends on which [endpoints](#endpoints) your app uses. Refer to our [endpoint](#endpoints) references to determine which permissions each endpoint requires.  \n* [ads\\_management](https://developers.facebook.com/docs/permissions/reference/ads_management)\n* [business\\_management](https://developers.facebook.com/docs/permissions/reference/business_management)\n* [instagram\\_basic](https://developers.facebook.com/docs/permissions/reference/instagram_basic)\n* [instagram\\_content\\_publish](https://developers.facebook.com/docs/permissions/reference/instagram_content_publish)\n* [pages\\_read\\_engagement](https://developers.facebook.com/docs/permissions/reference/pages_read_engagement)  \nIf your app will be used by app users who do not have a [role](https://developers.facebook.com/docs/development/build-and-test/app-roles) on your app or a role in a [Business](https://www.facebook.com/business/help/442345745885606?id=180505742745347) that has claimed your app, you must request approval for each permission via [App Review](https://developers.facebook.com/docs/app-review) before non-role app users can grant them to your app.\n",
        "line_start": 580,
        "line_end": 588
    },
    "52": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tRequirements\n\tPublic Server\n\nContent: \n### Public Server  \nWe cURL media used in publishing attempts so the media must be hosted on a publicly accessible server at the time of the attempt.\n",
        "line_start": 592,
        "line_end": 594
    },
    "53": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tRequirements\n\tPage Publishing Authorization\n\nContent: \n### Page Publishing Authorization  \nInstagram Professional accounts connected to a [Page](https://developers.facebook.com/docs/instagram-api/overview#pages) that requires [Page Publishing Authorization](https://www.facebook.com/business/m/one-sheeters/page-publishing-authorization) (PPA) cannot be published to until PPA has been completed.  \nIt's possible that an app user may be able to perform [Tasks](https://developers.facebook.com/docs/instagram-api/overview#tasks) on a Page that initially does not require PPA but later requires it. In this scenario, the app user would not be able to publish content to their Instagram Professional account until completing PPA. Since there's no way for you to determine if an app user's Page requires PPA, we recommend that you advise app users to preemptively complete PPA.\n",
        "line_start": 596,
        "line_end": 599
    },
    "54": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tRequirements\n\tLimitations\n\nContent: \n### Limitations  \n* JPEG is the only image format supported. Extended JPEG formats such as MPO and JPS are not supported.\n* Shopping tags are not supported.\n* Branded content tags are not supported.\n* Filters are not supported.\n* Publishing to Instagram TV is not supported.  \nFor additional limitations, refer to each [endpoint's](#endpoints) reference.\n",
        "line_start": 602,
        "line_end": 609
    },
    "55": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tRequirements\n\tRate Limit\n\nContent: \n### Rate Limit  \nInstagram accounts are limited to 50 API-published posts within a 24-hour moving period. Carousels count as a single post. This limit is enforced on the [`POST /{ig-user-id}/media_publish`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media_publish) endpoint when attempting to publish a media container. We recommend that your app also enforce the publishing rate limit, especially if your app allows app users to schedule posts to be published in the future.  \nTo check an Instagram Professional account's current rate limit usage, query the [`GET /{ig-user-id}/content_publishing_limit`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/content_publishing_limit) endpoint.\n",
        "line_start": 612,
        "line_end": 615
    },
    "56": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tEndpoints\n\nContent: \n## Endpoints  \nThe API consists of the following endpoints. Refer to each endpoint's reference document for usage requirements.  \n* [`POST /{ig-user-id}/media`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#creating) \u2014 upload media and create media containers.\n* [`POST /{ig-user-id}/media_publish`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media_publish#creating) \u2014 publish uploaded media using their media containers.\n* [`GET /{ig-container-id}?fields=status_code`](https://developers.facebook.com/docs/instagram-api/reference/ig-container#reading) \u2014 check media container publishing eligibility and status.\n* [`GET /{ig-user-id}/content_publishing_limit`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/content_publishing_limit) \u2014 check app user's current publishing rate limit usage.  \n[](#)\n",
        "line_start": 430,
        "line_end": 437
    },
    "57": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tSingle Media Posts\n\nContent: \n## Single Media Posts  \nPublishing single image, video, story or reel is a two-step process:  \n1. Use the [`POST /{ig-user-id}/media`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#creating) endpoint to create a container from an image or video hosted on your public server.\n2. Use the [`POST /{ig-user-id}/media_publish`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media_publish#creating) endpoint to publish the container.  \nStep 1 of 2: Create Container  \nLet's say you have an image at...  \nhttps://www.example.com/images/bronz-fonz.jpg  \n... that you want to publish with the hashtag \"#BronzFonz\" as its caption. Send a request to the [`POST /{ig-user-id}/media`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#creating) endpoint:  \n#### Sample Request  \nPOST https://graph.facebook.com/`v19.0`/17841400008460056/media\n?image\\_url\\=https://www.example.com/images/bronz-fonz.jpg\n&caption\\=#BronzFonz  \nThis returns a container ID for the image.  \n#### Sample Response  \n{\n\"id\": \"17889455560051444\"  // IG Container ID\n}  \nStep 2 of 2: Publish Container  \nUse the `POST /{ig-user-id}/media_publish` endpoint to publish the container ID returned in the previous step.  \n#### Sample Request  \nPOST https://graph.facebook.com/`v19.0`/17841400008460056/media\\_publish\n?creation\\_id=17889455560051444  \n#### Sample Response  \n{\n\"id\": \"17920238422030506\" // IG Media ID\n}  \n[](#)\n",
        "line_start": 629,
        "line_end": 656
    },
    "58": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tCarousel Posts\n\nContent: \n## Carousel Posts  \nYou may publish up to 10 images, videos, or a mix of the two in a single post (a carousel post). Publishing carousels is a three step process:  \n1. Use the [`POST /{ig-user-id}/media`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#creating) endpoint to create individual item containers for each image and video that will appear in the carousel.\n2. Use the [`POST /{ig-user-id}/media`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#creating) endpoint again to create a single carousel container for the items.\n3. Use the [`POST /{ig-user-id}/media_publish`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media_publish#creating) endpoint to publish the carousel container.  \nCarousel posts count as a single post against the account's [rate limit](#rate-limit).  \nLimitations  \n* Carousels cannot be boosted.\n* Carousels are limited to 10 images, videos, or a mix of the two.\n* Carousel images are all cropped based on the first image in the carousel, with the default being a 1:1 aspect ratio.  \nStep 1 of 3: Create item container  \nUse the [`POST /{ig-user-id}/media`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#creating) endpoint to create an item container for the image or video that will appear in a carousel. Carousels may have up to 10 total images, videos, or a mix of the two.  \nPOST /{ig\\-user\\-id}/media  \n#### Parameters  \nThe following parameters are **required**. Refer to the [`POST /{ig-user-id}/media`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#creating) endpoint reference for additional supported parameters.  \n* `is_carousel_item` \u2014 Set to `true`. Indicates image or video will appear in a carousel.\n* `image_url` \u2014 (images only) The path to the image. We will cURL your image using the passed in URL so it must be on a public server.\n* `media_type` \u2014 (videos only) Set to `VIDEO`. Indicates media is a video.\n* `video_url` \u2014 (videos only) Path to the video. We will cURL your video using the passed in URL so it must be on a public server.  \nIf the operation is successful, the API will return an item container ID which can be used when creating the carousel container.  \nRepeat this process for each image or video that should appear in the carousel.  \n#### Sample Request  \ncurl \\-i \\-X POST \\\\  \n\"https://graph.facebook.com/`v19.0`/90010177253934/media?image\\_url=https%3A%2F%2Fsol...&is\\_carousel\\_item=true&access\\_token=EAAOc...\"  \n#### Sample Response  \n{\n\"id\": \"17899506308402767\"\n}  \nStep 2 of 3: Create carousel container  \nUse the [`POST /{ig-user-id}/media`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#creating) endpoint to create a carousel container.  \nPOST /{ig\\-user\\-id}/media  \n#### Parameters  \nThe following parameters are **required**. Refer to the [`POST /{ig-user-id}/media`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#creating) endpoint reference for additional supported parameters.  \n* `media_type` \u2014 Set to `CAROUSEL`. Indicates container is for a carousel.\n* `children` \u2014 An array of up to 10 container IDs of each image and video that should appear in the published carousel. Carousels can have up to 10 total images, videos, or a mix of the two.  \n#### Sample Request  \ncurl \\-i \\-X POST \\\\  \n\"https://graph.facebook.com/`v19.0`/90010177253934/media?caption=Fruit%20candies&media\\_type=CAROUSEL&children=17899506308402767%2C18193870522147812%2C17853844403701904&access\\_token=EAAOc...\"  \n#### Sample Response  \n{\n\"id\": \"18000748627392977\"\n}  \nStep 3 of 3: Publish carousel container  \nUse the [`POST /{ig-user-id}/media_publish`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media_publish#creating) endpoint to publish a carousel container (a carousel post). Accounts are limited to 50 published posts within a 24-hour period. Publishing a carousel counts as a single post.  \nPOST /{ig\\-user\\-id}/media\\_publish  \n#### Parameters  \nThe following parameters are required.  \n* `creation_id` \u2014 The carousel container ID.  \nIf the operation is successful the API will return a carousel album [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media) ID.  \n#### Sample Request  \ncurl \\-i \\-X POST \\\\  \n\"https://graph.facebook.com/`v19.0`/90010177253934/media\\_publish?creation\\_id=18000748627392977&access\\_token=EAAOc...\"  \n#### Sample Response  \n{\n\"id\": \"90010778390276\"\n}  \n[](#)\n",
        "line_start": 675,
        "line_end": 732
    },
    "59": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tReels Posts\n\nContent: \n## Reels Posts  \nReels are short-form videos that are eligible to appear in the **Reels** tab of the Instagram app if they meet certain [specifications](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#reel-specifications) and are selected by our algorithm. To publish a reel, follow the steps for publishing a [single media post](#single-media-posts) and include the `media_type=REELS` parameter along with the path to the video using the `video_url` parameter.  \nReels are not a new media type, even though you set `media_type=REELS` when you publish a reel. If you publish a reel and then request its `media_type` field, the value returned is `VIDEO`. To determine if a published video has been designated as a reel, request its `media_product_type` field instead.  \nYou can use the [code sample on GitHub (insta\\_reels\\_publishing\\_api\\_sample)](https://l.facebook.com/l.php?u=https%3A%2F%2Fgithub.com%2Ffbsamples%2Freels_publishing_apis%2Ftree%2Fmain%2Finsta_reels_publishing_api_sample&h=AT3EZ6hzCKzB-Edyukmi5cAVtNo9vcpnHXzDjk1leIAIzZIFeaavQAQyB9jo9lwS2teLBVQlU6hXfBovH4gcwnKLCevDWfLDHtDG7H1NbPZf-nzynViLXQ1NXXzFdh7jAGxw7oxSp1xRt5Ge6B-6HQ) to learn how to publish Reels to Instagram.  \nTo make it more convenient for developers, Meta has published the full set of Graph API calls for Instagram Reels on the Postman API Platform. For more information, see [Postman Collections for Facebook Reels and Instagram Reels](https://developers.facebook.com/docs/reels/postman).  \nFor more information about Reels, see [Reels Developer Documentation](https://developers.facebook.com/docs/reels).  \n[](#)\n",
        "line_start": 775,
        "line_end": 782
    },
    "60": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tStory Posts\n\nContent: \n## Story Posts  \nOnly business accounts can publish stories with the Content Publising API at this time.  \nStories are videos and images that are posted as IG stories on Instagram. To publish a story, follow the same steps for publishing a single media post and include the `media_type=STORIES` parameter along with the path to the image/video using the `image_url` or `video_url` parameter.  \n**Note:** Stories are not a new media type even though you are setting `media_type=STORIES` when publishing a story. If you publish a story and then request its `media_type` field, the value will be returned as `IMAGE/VIDEO`. To determine if a published image/video has been designated as a story, request its `media_product_type` field instead.  \n[](#)\n",
        "line_start": 789,
        "line_end": 794
    },
    "61": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tCollaborator Tags\n\nContent: \n## Collaborator Tags  \nYou can add public Instagram users in an image, carousel and reel as a collaborators and they will receive an invite to be a collaborator for that particular media. To tag users in an image, follow the Single Media Posts steps above, but when creating the media container, include the collaborators parameter and an array of strings indicating the Instagram usernames of users whom you want to invite as a collaborator on the media.  \n#### Sample Requeset  \nPOST graph.facebook.com/17841400008460056/media\n?image\\_url\\=https://www.example.com/images/bronzed-fonzes.jpg\n&caption\\=#BronzedFonzes!\n&collaborators\\= \\[\u2018username1\u2019,\u2019username2\u2019\\]  \n#### Notes  \n* The collaborators value must be an array of strings.\n* You can only tag users with public Instagram accounts.\n* No more than 3 collaborators can be added to a media.\n* Collaborators cannot be added to Story media.  \n[](#)\n",
        "line_start": 799,
        "line_end": 812
    },
    "62": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tLocation Tags\n\nContent: \n## Location Tags  \nYou can use the [Pages Search API ![](https://scontent-cdg4-2.xx.fbcdn.net/v/t39.2365-6/310307727_3347317042262105_1088877051262827250_n.png?_nc_cat=107&ccb=1-7&_nc_sid=e280be&_nc_ohc=6zzb9-5bY8QAX_nY52g&_nc_ht=scontent-cdg4-2.xx&oh=00_AfBRGSoDbMfUe1dC6xxUblU-wz3raGSpfpjPYKA-ck1AaA&oe=65D572A2)](https://developers.facebook.com/docs/pages/searching) , be sure to include the \\`location\\` field in your query, to search for Pages whose names match a search string. Then, parse the results to identify any Pages that have been created for a physical location. If you include a Page's ID when publishing an image or video, it will be tagged with the location associated with that Page.  \n#### Limitations  \nTo be eligible for tagging, a Page must have latitude and longitude location data.  \nVerify that the Page you want to use has latitude and longitude data in the response. Attempting to create a container using a Page that has no location data will fail with coded exception `INSTAGRAM_PLATFORM_API__INVALID_LOCATION_ID`.  \nOnce you have the Page ID, assign it to the `location_id` parameter when publishing [single media](#single-media-posts) or [carousel](#carousel-posts) item containers.  \n[](#)\n",
        "line_start": 819,
        "line_end": 826
    },
    "63": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tProduct Tags\n\nContent: \n## Product Tags  \nYou can publish both single media posts and carousel posts tagged with [Instagram Shopping](https://www.facebook.com/help/instagram/1187859655048322) products. Refer to the [Product Tagging](https://developers.facebook.com/docs/instagram-api/guides/product-tagging) guide to learn how.  \n[](#)\n",
        "line_start": 833,
        "line_end": 836
    },
    "64": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tUser Tags\n\nContent: \n## User Tags  \nYou can tag public Instagram users in an image and they will receive a notification that they have been tagged.  \nTo tag users in an image, follow the [Single Media Posts](#single-media-posts) steps above, but when creating the media container, include the `user_tags` parameter and an array of objects indicating the Instagram users in the image as well as their x/y coordinates within the image itself.  \n#### Sample Request  \nPOST graph.facebook.com/17841400008460056/media\n?image\\_url=https://www.example.com/images/bronzed-fonzes.jpg\n&caption=#BronzedFonzes!\n&user\\_tags=\n\\[\n{\nusername:'kevinhart4real',\nx: 0.5,\ny: 0.8\n},\n{\nusername:'therock',\nx: 0.3,\ny: 0.2\n}\n\\]  \nThis returns a container ID which you then publish using the [IG User Media Publish](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media_publish#creating) endpoint.  \n#### Notes  \n* The `user_tags` value must be an array of objects formatted with JSON.\n* You can only tag users with public Instagram accounts.\n* The object must contain all three properties (`username`, `x`, and `y`) for each user.\n* `x` and `y` values must be `float` numbers that originate from the top-left of the image, with a range of `0.0`\u2013`1.0`.\n* User tags can be used with images in carousels.  \n[](#)\n",
        "line_start": 839,
        "line_end": 867
    },
    "65": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tTroubleshooting\n\nContent: \n## Troubleshooting  \nIf you are able to create a container for a video but the [`POST /{ig-user-id}/media_publish`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media_publish#creating) endpoint does not return the published media ID, you can get the container's publishing status by querying the `GET /{ig-container-id}?fields=status_code` endpoint. This endpoint will return one of the following:  \n* `EXPIRED` \u2014 The container was not published within 24 hours and has expired.\n* `ERROR` \u2014 The container failed to complete the publishing process.\n* `FINISHED` \u2014 The container and its media object are ready to be published.\n* `IN_PROGRESS` \u2014 The container is still in the publishing process.\n* `PUBLISHED` \u2014 The container's media object has been published.  \nWe recommend querying a container's status once per minute, for no more than 5 minutes.  \n[](#)\n",
        "line_start": 876,
        "line_end": 885
    },
    "66": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tContent Publishing\n\tErrors\n\nContent: \n## Errors  \nSee the [Error Codes](https://developers.facebook.com/docs/instagram-api/reference/error-codes) reference.  \n[](#)  \n[](#)\n",
        "line_start": 890,
        "line_end": 894
    },
    "67": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api/guides/comment-moderation\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api/guides/comment-moderation\n",
        "line_start": 898,
        "line_end": 899
    },
    "68": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tComment Moderation\n\nContent: \n# Comment Moderation  \nYou can use the Instagram Graph API to get comments, reply to comments, delete comments, hide/unhide comments, and disable/enable comments on IG Media owned by your app users.  \nYou can use the [Instagram Messaging API](https://developers.facebook.com/docs/messenger-platform/instagram) to send private replies (direct messages) to users who have commented on your app users' live video IG Media. Refer to the Instagram Messaging's [private replies](https://developers.facebook.com/docs/messenger-platform/instagram/features/private-replies) documentation to learn how.\n",
        "line_start": 899,
        "line_end": 902
    },
    "69": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tComment Moderation\n\tEndpoints\n\nContent: \n## Endpoints  \nThe API consists of the following endpoints. Refer to each endpoint's reference documentation for parameter and permission requirements.  \n* [`GET /{ig-media-id}/comments`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/comments#reading) \u2014 Get comments on an IG Media.\n* [`GET /{ig-comment-id}/replies`](https://developers.facebook.com/docs/instagram-api/reference/ig-comment/replies#read) \u2014 Get replies on an IG Comment.\n* [`POST /{ig-comment-id}/replies`](https://developers.facebook.com/docs/instagram-api/reference/ig-comment/replies#create) \u2014 Reply to an IG Comment.\n* [`POST /{ig-comment-id}`](https://developers.facebook.com/docs/instagram-api/reference/ig-comment#update) \u2014 Hide/unhide an IG Comment.\n* [`POST /{ig-media-id}`](https://developers.facebook.com/docs/instagram-api/reference/ig-media#update) \u2014 Disable/enable comments on an IG Media.\n* [`DELETE /{ig-comment-id}`](https://developers.facebook.com/docs/instagram-api/reference/ig-comment#delete) \u2014 Delete an IG Comment.  \n[](#)\n",
        "line_start": 430,
        "line_end": 439
    },
    "70": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tComment Moderation\n\tExamples\n\tGetting & Replying to Comments\n\nContent: \n## Examples  \n### Getting & Replying to Comments  \nYou can get all of the comments on a media object, analyze and filter the returned data set against specific criteria, then reply to any comments that match your criteria.  \nFirst, query the [`GET /{ig-media-id}/comments`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/comments#read) endpoint to get all of the comments and their IDs on the media object:  \n#### Sample Request  \nGET graph.facebook.com\n/17895695668004550/comments  \n#### Sample Response  \n{\n\"data\": \\[\n{\n\"timestamp\": \"2017-08-31T18:10:30+0000\",\n\"text\": \"I love this!\",\n\"id\": \"17873440459141021\"\n},\n{\n\"timestamp\": \"2017-08-31T19:16:02+0000\",\n\"text\": \"This is awesome!\",\n\"id\": \"17870913679156914\"\n},\n... // results truncated for brevity\n\\]\n}  \nNext, parse the returned results for comments that match whatever criteria you are using and use the matching comments to [reply in the comment thread to the Instagram users](https://developers.facebook.com/docs/instagram-api/reference/ig-comment/replies#replying) who made the comments:  \n#### Sample Request  \nPOST graph.facebook.com\n/17870913679156914/replies?message\\=Thanks%20for%20sharing!  \n#### Sample Response  \n{\n\"id\": \"17873440459141029\"\n}  \nIf you have a lot of comments that you want to reply to, you could [batch the replies into a single request](https://developers.facebook.com/docs/graph-api/making-multiple-requests/).  \n[](#)  \n[](#)\n",
        "line_start": 438,
        "line_end": 472
    },
    "71": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api/copyright-detection\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api/copyright-detection\n",
        "line_start": 968,
        "line_end": 969
    },
    "72": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tCopyright Detection\n\nContent: \n# Copyright Detection  \nThis guide shows you how to detect copyright violations for a video uploaded or published to Instagram using the Instagram Graph API.\n",
        "line_start": 969,
        "line_end": 971
    },
    "73": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tCopyright Detection\n\tBefore you start\n\nContent: \n## Before you start  \nBefore you start you will need the following:  \n* All requirements and limitations for accessing the Instagram Container and Instagram Media endpoints apply\n",
        "line_start": 973,
        "line_end": 976
    },
    "74": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tCopyright Detection\n\tBefore you start\n\tBest practices\n\nContent: \n### Best practices  \nWhen testing an API call, you can include the `access_token` parameter set to your access token. However, when making secure calls from your app, use the [access token class.](https://developers.facebook.com/docs/facebook-login/guides/access-tokens#portabletokens)\n",
        "line_start": 979,
        "line_end": 981
    },
    "75": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tCopyright Detection\n\tCheck an uploaded video\n\nContent: \n## Check an uploaded video  \nTo check the copyright status for a video that have been uploaded, but not yet published, send a `GET` request to the `/{ig-containter-id}` endpoint with the `fields` parameter set to `copyright_check_status`.\n",
        "line_start": 983,
        "line_end": 985
    },
    "76": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tCopyright Detection\n\tCheck an uploaded video\n\tSample Request\n\nContent: \n### Sample Request  \ncurl \\-i \\-X GET \"https://graph.facebook.com/`v19.0`/{ig-containter-id}?fields=copyright\\_check\\_status\"  \nOn success, your app receives a JSON response with a `copyright_check_status` object with the following key-value pairs:  \n* `status` set to `completed`, `error`, `in_progress`, or `not_started`\n* `matches_found` set to:\n* `false` if none are detected\n* `true` if violations are detected and `author`, `content_title`, `matched_segments`, and `owner_copyright_policy` values\n",
        "line_start": 987,
        "line_end": 994
    },
    "77": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tCopyright Detection\n\tCheck an uploaded video\n\tSample Responses\n\nContent: \n### Sample Responses  \n|     |     |\n| --- | --- |\n| #### Violation found<br><br>{<br>  \"copyright\\_check\\_status\": {<br>    \"status\": \"complete\",<br>    \"matches\\_found\": true<br>  },<br>  \"id\": \"{ig-containter-id}\"<br>} | #### No violation found<br><br>{<br>  \"copyright\\_check\\_status\": {<br>      \"status\": \"in\\_progress\",<br>      \"matches\\_found\": false<br>  }<br>} |  \n[](#)\n",
        "line_start": 999,
        "line_end": 1004
    },
    "78": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tCopyright Detection\n\tCheck a published video\n\nContent: \n## Check a published video  \nTo check the copyright status for a video that has been published, send a `GET` request to the `/{ig-media-id}` endpoint with the `fields` parameter set to `copyright_check_information`.\n",
        "line_start": 1007,
        "line_end": 1009
    },
    "79": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tCopyright Detection\n\tCheck a published video\n\tSample Request\n\nContent: \n### Sample Request  \ncurl \\-i \\-X GET \"https://graph.facebook.com/`v19.0`/{ig-media-id}?fields=copyright\\_check\\_information\"  \nOn success, your app receives a JSON response with the `id` set to the video being checked and the `copyright_check_information` object with the following:  \n* `status` set to a `status` object set to `completed`, `error`, `in_progress`, or `not_started`\n* `copyright_matches` set to:\n* `false` \u2013 Returned when no copyright violations are detected\n* `true` \u2013 Returned when copyright violations are detected and includes the `copyright_check_information` object that contains information about the copyright owner, policy, mitigation steps, and sections of the media that violated the copyright.\n",
        "line_start": 987,
        "line_end": 994
    },
    "80": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tCopyright Detection\n\tCheck a published video\n\tSample Responses\n\nContent: \n### Sample Responses  \n|     |     |\n| --- | --- |\n| #### Violation found<br><br>{<br>  \"copyright\\_check\\_information\": {<br>     \"status\": {<br>       \"status\": \"complete\",<br>       \"matches\\_found\": true<br>     },<br>     \"copyright\\_matches\": \\[<br>       {<br>         \"content\\_title\": \"In My Feelings\",<br>         \"author\": \"Drake\",<br>         \"owner\\_copyright\\_policy\": {<br>           \"name\": \"UMG\",<br>           \"actions\": \\[<br>             {<br>               \"action\": \"BLOCK\",<br>               \"territories\": \"3\",<br>               \"geos\": \\[<br>                 \"Canada\",<br>                 \"India\",<br>                 \"United States of America\"<br>               \\]<br>             },<br>             {<br>               \"action\": \"MUTE\",<br>               \"territories\": \"4\",<br>               \"geos\": \\[<br>                 \"Taiwan\",<br>                 \"Tanzania\",<br>                 \"Saudi Arabia\",<br>                 \"United Kingdom of Great Britain and Northern Ireland\"<br>               \\]<br>             }<br>           \\]<br>         },<br>         \"matched\\_segments\": \\[<br>          {<br>            \"start\\_time\\_in\\_seconds\": 2.4,<br>            \"duration\\_in\\_seconds\": 5.1,<br>            \"segment\\_type\": \"AUDIO\"<br>          },<br>          {<br>            \"start\\_time\\_in\\_seconds\": 10.2,<br>            \"duration\\_in\\_seconds\": 4.5,<br>            \"segment\\_type\": \"VIDEO\"<br>          }<br>        \\]<br>      }<br>    \\]<br>  },<br>  \"id\": \"90012800291314\"<br>} | #### No violation found<br><br>{<br>  \"copyright\\_check\\_information\": {<br>    \"status\": {<br>      \"status\": \"complete\",<br>      \"matches\\_found\": false<br>    }<br>  },<br>  \"id\": \"{ig-media-id}\"<br>} |  \n[](#)\n",
        "line_start": 999,
        "line_end": 1004
    },
    "81": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tCopyright Detection\n\tSee also\n\nContent: \n## See also  \n* [Instagram Container Reference ![](https://scontent-cdg4-2.xx.fbcdn.net/v/t39.2365-6/310307727_3347317042262105_1088877051262827250_n.png?_nc_cat=107&ccb=1-7&_nc_sid=e280be&_nc_ohc=6zzb9-5bY8QAX_nY52g&_nc_ht=scontent-cdg4-2.xx&oh=00_AfBRGSoDbMfUe1dC6xxUblU-wz3raGSpfpjPYKA-ck1AaA&oe=65D572A2)](https://developers.facebook.com/docs/instagram-api/reference/ig-container)  \n* [Instagram Media Reference ![](https://scontent-cdg4-2.xx.fbcdn.net/v/t39.2365-6/310307727_3347317042262105_1088877051262827250_n.png?_nc_cat=107&ccb=1-7&_nc_sid=e280be&_nc_ohc=6zzb9-5bY8QAX_nY52g&_nc_ht=scontent-cdg4-2.xx&oh=00_AfBRGSoDbMfUe1dC6xxUblU-wz3raGSpfpjPYKA-ck1AaA&oe=65D572A2)](https://developers.facebook.com/docs/instagram-api/reference/ig-media)  \n[](#)  \n[](#)\n",
        "line_start": 1031,
        "line_end": 1036
    },
    "82": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api/guides/hashtag-search\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api/guides/hashtag-search\n",
        "line_start": 1042,
        "line_end": 1043
    },
    "83": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tHashtag Search\n\nContent: \n# Hashtag Search  \nFind public IG Media that has been tagged with specific hashtags.\n",
        "line_start": 1043,
        "line_end": 1045
    },
    "84": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tHashtag Search\n\tLimitations\n\nContent: \n## Limitations  \n* You can query a maximum of 30 unique hashtags on behalf of an Instagram Business or Creator Account within a rolling, 7 day period. Once you query a hashtag, it will [count against this limit](https://developers.facebook.com/docs/instagram-api/reference/ig-user/recently_searched_hashtags) for 7 days. Subsequent queries on the same hashtag within this time frame will not count against your limit, and will not reset its initial query 7 day timer.\n* You cannot comment on hashtagged media objects discovered through the API.\n* Hashtags on Stories are not supported.\n* Emojis in hashtag queries are not supported.\n* The API will return a generic error for any requests that include hashtags that we have deemed sensitive or offensive.  \n[](#)\n",
        "line_start": 21,
        "line_end": 28
    },
    "85": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tHashtag Search\n\tRequirements\n\nContent: \n## Requirements  \nIn order to use this API, you must undergo [App Review](https://developers.facebook.com/docs/apps/review) and request approval for:  \n* the [`Instagram Public Content Access`](https://developers.facebook.com/docs/apps/review/feature#reference-INSTAGRAM_PUBLIC_CONTENT_ACCESS) feature\n* the [`instagram_basic`](https://developers.facebook.com/docs/facebook-login/permissions#reference-instagram_basic) permission  \n[](#)\n",
        "line_start": 574,
        "line_end": 579
    },
    "86": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tHashtag Search\n\tEndpoints\n\nContent: \n## Endpoints  \nThe Hashtag Search API consists of the following nodes and edges:  \n* [`GET /ig_hashtag_search`](https://developers.facebook.com/docs/instagram-api/reference/ig-hashtag-search#reading) \u2014 to get a specific hashtag's node ID\n* [`GET /{ig-hashtag-id}`](https://developers.facebook.com/docs/instagram-api/reference/ig-hashtag#reading) \u2014 to get data about a hashtag\n* [`GET /{ig-hashtag-id}/top_media`](https://developers.facebook.com/docs/instagram-api/reference/ig-hashtag/top-media#reading) \u2014 to get the most popular photos and videos that have a specific hashtag\n* [`GET /{ig-hashtag-id}/recent_media`](https://developers.facebook.com/docs/instagram-api/reference/ig-hashtag/recent-media#reading) \u2014 to get the most recently published photos and videos that have a specific hashtag\n* [`GET /{ig-user-id}/recently_searched_hashtags`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/recently_searched_hashtags) \u2014 to determine the unique hashtags an Instagram Business or Creator Account has searched for in the current week  \nRefer to each endpoint's reference documentation for supported fields, parameters, and usage requirements.  \n[](#)\n",
        "line_start": 430,
        "line_end": 439
    },
    "87": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tHashtag Search\n\tCommon Uses\n\tGetting Media Tagged With A Hashtag\n\nContent: \n## Common Uses  \n### Getting Media Tagged With A Hashtag  \nTo get all of the photos and videos that have a specific hashtag, first use the `/ig_hashtag_search` endpoint and include the hashtag and ID of the Instagram Business or Creator Account making the query. For example, if the query is being made on behalf of the Instagram Business Account with the ID `17841405309211844`, you could get the ID for the \"#coke\" hashtag by performing the following query:  \nGET graph.facebook.com/ig\\_hashtag\\_search\n?user\\_id\\=17841405309211844\n&q\\=coke  \nThis will return the ID for the \u201c#Coke\u201d hashtag node:  \n{\n\"id\" : \"17873440459141021\"\n}  \nNow that you have the hashtag ID (`17873440459141021`), you can query its `/top_media` or `/recent_media` edge and include the Business Account ID to get a collection of media objects that have the \u201c#coke\u201d hashtag. For example:  \nGET graph.facebook.com/17873440459141021/recent\\_media\n?user\\_id\\=17841405309211844  \nThis would return a response that looks like this:  \n{\n\"data\": \\[\n{\n\"id\": \"17880997618081620\"\n},\n{\n\"id\": \"17871527143187462\"\n},\n{\n\"id\": \"17896450804038745\"\n}\n\\]\n}  \n[](#)  \n[](#)\n",
        "line_start": 9,
        "line_end": 38
    },
    "88": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api/guides/insights\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api/guides/insights\n",
        "line_start": 1121,
        "line_end": 1122
    },
    "89": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tInsights\n\nContent: \n# Insights  \nYou can use the Instagram Graph API to get social interaction metrics for [IG Users](https://developers.facebook.com/docs/instagram-api/reference/ig-user) and their [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media) objects. Amounts for each metric are calculated upon API request.  \nDue to privacy rules, messaging-related Story IG Media interactions performed by users in some regions will no longer be included in some metric calculations. These regions include: Europe starting December 1, 2020 and Japan starting April 14, 2021.  \n* For Stories created by users in affected regions, the [`replies`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/insights#metrics) metric will now return a value of `0`.\n* For Stories created by users outside affected regions, the [`replies`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/insights#metrics) metric will return the number of replies, but replies made by users in affected regions will not be included in the calculation.\n",
        "line_start": 1122,
        "line_end": 1127
    },
    "90": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tInsights\n\tLimitations\n\nContent: \n## Limitations  \n* Some metrics are [not available](https://developers.facebook.com/docs/instagram-api/reference/ig-user/insights#limitations) on IG Users with fewer than 100 followers.\n* The API only reports organic interaction metrics; interactions on ads containing a media object are not counted.\n* Metrics data is stored for 2 years.\n* You can only get insights for a single user at a time.\n* You cannot get insights for Facebook Pages.\n* Stories insights are only available for 24 hours, even if the stories are archived or highlighted. If you want to get the latest insights for a story before it expires, set up a [Webhook](https://developers.facebook.com/docs/instagram-api/guides/webhooks) for the [`Instagram`](https://developers.facebook.com/docs/graph-api/webhooks/reference/instagram/) topic and subscribe to the [`story_insights`](https://developers.facebook.com/docs/graph-api/webhooks/reference/instagram/#story_insights) field.\n* Insights on album child IG Media is not supported.\n* If insights data you are requesting does not exist or is currently unavailable the API will return an empty data set instead of `0` for individual metrics.  \n[](#)\n",
        "line_start": 21,
        "line_end": 31
    },
    "91": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tInsights\n\tUTC\n\nContent: \n## UTC  \nTimestamps in API responses use UTC with zero offset and are formatted using ISO-8601. For example: `2019-04-05T07:56:32+0000`  \n[](#)\n",
        "line_start": 1144,
        "line_end": 1147
    },
    "92": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tInsights\n\tEndpoints\n\nContent: \n## Endpoints  \nThe API consists of the following endpoints:  \n* [`GET /{ig-media-id}/insights`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/insights) \u2014 gets metrics on a media object\n* [`GET /{ig-user-id}/insights`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/insights) \u2014 gets metrics on an Instagram Business Account or Instagram Creator account.  \nRefer to each endpoint's reference documentation for available metrics, parameters, and permission requirements.  \n[](#)\n",
        "line_start": 430,
        "line_end": 436
    },
    "93": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tInsights\n\tExamples\n\tGetting Account Metrics\n\nContent: \n## Examples  \n### Getting Account Metrics  \nTo get metrics on an Instagram Business or Creator Account, query the [`GET /{ig-user-id}/insights`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/insights) edge and specify the metrics you want returned.  \n#### Sample Request  \nGET graph.facebook.com/17841405822304914/insights\n?metric\\=impressions,reach,profile\\_views\n&period\\=day  \n#### Sample Response  \n{\n\"data\": \\[\n{\n\"name\": \"impressions\",\n\"period\": \"day\",\n\"values\": \\[\n{\n\"value\": 32,\n\"end\\_time\": \"2018-01-11T08:00:00+0000\"\n},\n{\n\"value\": 32,\n\"end\\_time\": \"2018-01-12T08:00:00+0000\"\n}\n\\],\n\"title\": \"Impressions\",\n\"description\": \"Total number of times the Business Account's media objects have been viewed\",\n\"id\": \"instagram\\_business\\_account\\_id/insights/impressions/day\"\n},\n{\n\"name\": \"reach\",\n\"period\": \"day\",\n\"values\": \\[\n{\n\"value\": 12,\n\"end\\_time\": \"2018-01-11T08:00:00+0000\"\n},\n{\n\"value\": 12,\n\"end\\_time\": \"2018-01-12T08:00:00+0000\"\n}\n\\],\n\"title\": \"Reach\",\n\"description\": \"Total number of times the Business Account's media objects have been uniquely viewed\",\n\"id\": \"instagram\\_business\\_account\\_id/insights/reach/day\"\n},\n{\n\"name\": \"profile\\_views\",\n\"period\": \"day\",\n\"values\": \\[\n{\n\"value\": 15,\n\"end\\_time\": \"2018-01-11T08:00:00+0000\"\n},\n{\n\"value\": 15,\n\"end\\_time\": \"2018-01-12T08:00:00+0000\"\n}\n\\],\n\"title\": \"Profile Views\",\n\"description\": \"Total number of users who have viewed the Business Account's profile within the specified period\",\n\"id\": \"instagram\\_business\\_account\\_id/insights/profile\\_views/day\"\n}\n\\]\n}\n",
        "line_start": 438,
        "line_end": 501
    },
    "94": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tInsights\n\tExamples\n\tGetting Media Metrics\n\nContent: \n### Getting Media Metrics  \nTo get metrics on a media object, query the [`GET /{ig-media-id}/insights`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/insights) edge and specify the metrics you want returned.  \n#### Sample Request  \nGET graph.facebook.com/{media\\-id}/insights\n?metric\\=engagement,impressions,reach  \n#### Sample Response  \n{\n\"data\": \\[\n{\n\"name\": \"engagement\",\n\"period\": \"lifetime\",\n\"values\": \\[\n{\n\"value\": 8\n}\n\\],\n\"title\": \"Engagement\",\n\"description\": \"Total number of likes and comments on the media object\",\n\"id\": \"media\\_id/insights/engagement/lifetime\"\n},\n{\n\"name\": \"impressions\",\n\"period\": \"lifetime\",\n\"values\": \\[\n{\n\"value\": 13\n}\n\\],\n\"title\": \"Impressions\",\n\"description\": \"Total number of times the media object has been seen\",\n\"id\": \"media\\_id/insights/impressions/lifetime\"\n},\n{\n\"name\": \"reach\",\n\"period\": \"lifetime\",\n\"values\": \\[\n{\n\"value\": 13\n}\n\\],\n\"title\": \"Reach\",\n\"description\": \"Total number of unique accounts that have seen the media object\",\n\"id\": \"media\\_id/insights/reach/lifetime\"\n}\n\\]\n}  \n[](#)  \n[](#)\n",
        "line_start": 1231,
        "line_end": 1279
    },
    "95": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api/guides/mentions\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api/guides/mentions\n",
        "line_start": 1287,
        "line_end": 1288
    },
    "96": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tMentions\n\nContent: \n# Mentions  \nIdentify captions, comments, and IG Media in which an Instagram Business or Creator's alias has been tagged or @mentioned.\n",
        "line_start": 1288,
        "line_end": 1290
    },
    "97": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tMentions\n\tLimitations\n\nContent: \n## Limitations  \n* Mentions on Stories are not supported.\n* Commenting on photos in which you were tagged is not supported.\n* [Webhooks](#webhooks) will not be sent if the Media upon which the comment or @mention appears was created by an account that is set to [private](https://www.facebook.com/help/instagram/448523408565555).  \n[](#)\n",
        "line_start": 21,
        "line_end": 26
    },
    "98": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tMentions\n\tEndpoints\n\nContent: \n## Endpoints  \nThe API consists of the following endpoints:  \n* [`GET /{ig-user-id}/tags`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/tags) \u2014 to get the media objects in which a Business or Creator Account has been tagged\n* [`GET /{ig-user-id}?fields=mentioned_comment`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/mentioned_comment#reading) \u2014 to get data about a comment that an Business or Creator Account has been @mentioned in\n* [`GET /{ig-user-id}?fields=mentioned_media`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/mentioned_media#reading) \u2014 to get data about a media object on which a Business or Creator Account has been @mentioned in a caption\n* [`POST /{ig-user-id}/mentions`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/mentions#creating) \u2014 to reply to a comment or media object caption that a Business or Creator Account has been @mentioned in by another Instagram user  \nRefer to each endpoint reference document for usage instructions.  \n[](#)\n",
        "line_start": 430,
        "line_end": 438
    },
    "99": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tMentions\n\tWebhooks\n\nContent: \n## Webhooks  \nSubscribe to the `mentions` field to recieve [Instagram Webhooks](https://developers.facebook.com/docs/instagram-api/guides/webhooks) notifications whenever an Instagram user mentions an Instagram Business or Creator Account. Note that we do not store Webhooks notification data, so if you set up a Webhook that listens for mentions, you should store any received data if you plan on using it later.  \n[](#)\n",
        "line_start": 191,
        "line_end": 194
    },
    "100": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tMentions\n\tExamples\n\tListening for and Replying to Comment @Mentions\n\nContent: \n## Examples  \n### Listening for and Replying to Comment @Mentions  \nYou can listen for comment @mentions and reply to any that meet your criteria:  \n1. Set up an [Instagram webhook](https://developers.facebook.com/docs/instagram-api/guides/webhooks) that's subscribed to the `mentions` field.\n2. Set up a script that can parse the Webhooks notifications and identify comment IDs.\n3. Use the IDs to query the `GET /{ig-user-id}/mentioned_comment` endpoint to get more information about each comment.\n4. Analyze the returned results to identify any comments that meet your criteria.\n5. Use the `POST /{ig-user-id}/mentions` endpoint to [reply to those comments](https://developers.facebook.com/docs/instagram-api/reference/ig-user/mentions#creating).  \nThe reply will appear as a sub-thread comment on the comment in which the Business or Creator Account was mentioned.\n",
        "line_start": 438,
        "line_end": 447
    },
    "101": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tMentions\n\tExamples\n\tListening for and Replying to Caption @Mentions\n\nContent: \n### Listening for and Replying to Caption @Mentions  \nYou can listen for caption @mentions and reply to any that meet your criteria:  \n1. Set up an [Instagram webhook](https://developers.facebook.com/docs/instagram-api/guides/webhooks) that's subscribed to the `mentions` field.\n2. Set up a script that can parse the Webhooks notifications and identify media IDs.\n3. Use the IDs to query the `GET /{ig-user-id}/mentioned_media` endpoint to get more information about each media object.\n4. Analyze the returned results to identify media objects with captions that meet your criteria.\n5. Use the `POST /{ig-user-id}/mentions` endpoint to [comment on those media objects](https://developers.facebook.com/docs/instagram-api/reference/ig-user/mentions#creating).  \n[](#)  \n[](#)\n",
        "line_start": 1333,
        "line_end": 1342
    },
    "102": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api/guides/product-tagging\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api/guides/product-tagging\n",
        "line_start": 1347,
        "line_end": 1348
    },
    "103": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\nContent: \n# Product Tagging  \nYou can use the Instagram Graph API to create and manage [Instagram Shopping Product Tags](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F2022466637835789&h=AT0NwQiQqa0DLoyq9B3kinW2XzvDF19nRRukH5PVOzl6Ulkqk9uFhz9rRaCNVxDyD-0z_0AvdW5R5iSv2c4oL09_CnJUJpaboAScOoLhWHzEnZlLWdDoCZL6GmujeTrmARI2GUlkZ18OiX5TglkFwQ) on an Instagram Business's [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media/).  \n**Note:** Beginning August 10, 2023, some businesses without checkout-enabled Shops will no longer be able to tag their products using the Content Publishing API. This will impact both API and native interfaces, and will remove tags to products from previous posts.Customers will still be able to tag products from Shops with checkout enabled on Facebook and Instagram. You can still refer to `shopping_product_tag_eligibility` field to check if an Instagram account is eligible to tag their products using Content Publishing API.  \nThe general flow for tagging products is:  \n1. Check if the Instagram Business is [eligible for product tagging](#get-eligibility).\n2. If the Instagram Business is eligible, [get its product catalogs](#get-available-catalogs).\n3. [Search each catalog for products](#get-catalog-products) that are eligible for tagging.\n4. [Create a tagged media container](#post-media).\n5. [Publish the tagged media container](#post-media-publish).\n",
        "line_start": 1348,
        "line_end": 1357
    },
    "104": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tLimitations\n\nContent: \n## Limitations  \n* All [content publishing limitations](https://developers.facebook.com/docs/instagram-api/guides/content-publishing#limitations) apply to product tagging.\n* Product tagging is not supported for Stories and Live.\n* Product tagging is not supported for Instagram Creator accounts.\n* Accounts are limited to 25 tagged media posts within a 24 hour period. Carousel albums count as a single post.  \n[](#)\n",
        "line_start": 21,
        "line_end": 27
    },
    "105": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tRequirements\n\nContent: \n## Requirements  \n* Refer to each endpoint's reference document to determine which permissions, features, and [User](https://developers.facebook.com/docs/facebook-login/access-tokens/#usertokens) access tokens are required for each operation.\n* The Instagram Business account (IG User) that owns the IG Media (to be tagged) must have an approved [Instagram Shop](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F1187859655048322%2F&h=AT2wUtxcrJ99eIerp7ryBDpR4QXqsjvS_r4ZZzECVgtE3wh0Om3_TVsDzj_LmPiGVTnRwp9-gzGVBfCRPcR1unSO-zpGFfp4MG2g6JnIAjkdnfezHF5wOUM-sceoTdq0eF1LRL01ftabzSDRCP_3lg) with a product catalog containing products. In-app and external Instagram Shop [checkout methods](https://www.facebook.com/business/help/449169642911614) are supported.\n* The app user must have an [admin role](https://www.facebook.com/business/help/442345745885606) on the [Business Manager](https://business.facebook.com/) that owns the Instagram Shop whose products are being used to tag media.\n* In order to request [App Review](https://developers.facebook.com/docs/app-review) approval for the [`instagram_shopping_tag_products`](https://developers.facebook.com/docs/permissions/reference/instagram_shopping_tag_products) and [`catalog_management`](https://developers.facebook.com/docs/permissions/reference/catalog_management) permissions, which are required by several product tagging endpoints, your app must be associated with a [verified business](https://developers.facebook.com/docs/development/release/business-verification).  \n[](#)\n",
        "line_start": 574,
        "line_end": 580
    },
    "106": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tEndpoints\n\nContent: \n## Endpoints  \n* [`GET /{ig-user-id}`](https://developers.facebook.com/docs/instagram-api/reference/ig-user#read) \u2014 Check the app user's tagging eligibility.\n* [`GET /{ig-user-id}/available_catalogs`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/available_catalogs#reading) \u2014 Get a list of the app user's product catalogs.\n* [`GET /{ig-user-id}/catalog_product_search`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/catalog_product_search#reading) \u2014 Get a list of tag eligible products in the app user's catalog.\n* [`POST /{ig-user-id}/media`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#creating) \u2014 Create a tagged media container (step 1 of publishing process).\n* [`POST /{ig-user-id}/media_publish`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media_publish) \u2014 Publish a tagged media container (step 2 of publishing process).\n* [`GET /{ig-media-id}/product_tags`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/product_tags#reading) \u2014 Get tags on published IG Media.\n* [`DELETE /{ig-media-id}/product_tags`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/product_tags#deleting) \u2014 Delete tags on published IG Media.\n* [`POST /{ig-media-id}/product_tags`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/product_tags#creating) \u2014 Create or update tags on published IG Media.\n* [`GET /{ig-user-id}/product_appeal`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/product_appeal#reading) \u2014 Get product appeal information.\n* [`POST /{ig-user-id}/product_appeal`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/product_appeal#creating) \u2014 Appeal a product rejection.\n* [`GET /{ig-media-id}/children`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/children#read) \u2014 Get a list of child IG Media in a carousel IG Media.  \n[](#)\n",
        "line_start": 430,
        "line_end": 443
    },
    "107": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tGet User Eligibility\n\nContent: \n## Get User Eligibility  \nRequest the `shopping_product_tag_eligibility` field on the [IG User](https://developers.facebook.com/docs/instagram-api/reference/ig-user) endpoint to determine if the Instagram Business account has set up an [Instagram Shop](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F1187859655048322%2F&h=AT2aD-kcYOtEOFl14mmriXVjpTpQVnoKO-6-Y36FLTWXDEmvhZ2B7FcT6OYs6l5Yzs1RWWPHgustORbFGHXAEYLoMhq6qFm-q0s9Vc7AzJpRVVxvlfYDVntBR-RhGPcPp9I5dQW8uQ-RO1Rp-6Fjtg). Accounts that have not set up an Instagram Shop are ineligible for product tagging.  \nGET /{ig\\-user\\-id}?fields\\=shopping\\_product\\_tag\\_eligibility  \nReturns `true` if the Instagram Business account has been associated with a [Business Manager's](https://business.facebook.com/) approved Instagram Shop, otherwise returns `false`.  \n#### Sample Request  \ncurl \\-i \\-X GET \\\\\n\"https://graph.facebook.com/`v19.0`/90010177253934?fields=shopping\\_product\\_tag\\_eligibility&access\\_token=EAAOc...\"  \n#### Sample Response  \n{\n\"shopping\\_product\\_tag\\_eligibility\": true,\n\"id\": \"90010177253934\"\n}  \n[](#)\n",
        "line_start": 1396,
        "line_end": 1409
    },
    "108": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tGet Catalogs\n\nContent: \n## Get Catalogs  \nUse the [IG User Available Catalogs](https://developers.facebook.com/docs/instagram-api/reference/ig-user/available_catalogs) endpoint to get the Instagram Business account's product catalog.  \nGET /{ig\\-user\\-id}/available\\_catalogs  \nReturns an array of catalogs and their metadata. Responses can include the following catalog fields:  \n* `catalog_id` \u2014 Catalog ID.\n* `catalog_name` \u2014 Catalog name.\n* `shop_name` \u2014 Shop name.\n* `product_count` \u2014 Total number of products in the catalog.  \n#### Limitations  \nCollaborative catalogs such as shopping partner catalogs or affiliate creator catalogs are not supported.  \n#### Sample Request  \ncurl \\-i \\-X GET \\\\\n\"https://graph.facebook.com/`v19.0`/90010177253934?fields=available\\_catalogs&access\\_token=EAAOc...\"  \n#### Sample Response  \n{\n\"available\\_catalogs\": {\n\"data\": \\[\n{\n\"catalog\\_id\": \"960179311066902\",\n\"catalog\\_name\": \"Jay's Favorite Snacks\",\n\"shop\\_name\": \"Jay's Bespoke\",\n\"product\\_count\": 11\n}\n\\]\n},\n\"id\": \"90010177253934\"\n}  \n[](#)\n",
        "line_start": 1418,
        "line_end": 1446
    },
    "109": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tGet Eligible Products\n\nContent: \n## Get Eligible Products  \nUse the [IG User Catalog Product Search](https://developers.facebook.com/docs/instagram-api/reference/ig-user/catalog_product_search) endpoint to get a collection of products in the catalog that can be used to tag media. Product variants are supported.  \nAlthough the API will not return an error when publishing a post tagged with an unapproved product, the tag will not appear on the published post until the product has been approved. Therefore, we recommend that you only allow your app users to publish posts with tags whose products have a `review_status` of `approved`. This field is returned for each product by default when you get an app user's eligible products.  \nGET /{ig\\-user\\-id}/catalog\\_product\\_search  \n#### Parameters  \n* `catalog_id` \u2014 **(required)** Catalog ID.\n* `q` \u2014 A string to search for in each product's name, or a product's SKU number (the **Content ID** column in the catalog management interface). If no string is specified, all tag-eligible products will be returned.  \nReturns an object containing an array of tag-eligible products and their metadata. Supports [cursor-based pagination](https://developers.facebook.com/docs/graph-api/results#cursors). Responses can include the following product fields:  \n* `image_url` \u2014 Product image URL.\n* `is_checkout_flow` \u2014 If `true`, product can be purchased directly in the Instagram app. If `false`, product must be purchased in the app user's app/website.\n* `merchant_id` \u2014 Merchant ID.\n* `product_id` \u2014 Product ID.\n* `product_name` \u2014 Product name.\n* `retailer_id` \u2014 Retailer ID.\n* `review_status` \u2014 Review status. Values can be `approved`, `outdated`, `pending`, `rejected`. An approved product can appear in the app user's [Instagram Shop](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F1187859655048322%2F&h=AT32AwtsjVX-D2WfqpME6AEjUIKSIL932NNQcbRTNDPeb4xf0uSmTeZXvqb0EC0cT9VaGzNkAhaE6jnIL_XDtFkS3G5CHk8fsVbb8Lp2AwKzZqkyvZYg0tCXlx_uJpp57GfA6v8i7Xd9DenDalww9A), but an approved status does not indicate product availability (e.g, the product could be out of stock). Only tags associated with products that have a `review_status` of `approved` can appear on published posts.\n* `product_variants` \u2014 Product IDs (`product_id`) and variant names (`variant_name`) of [product variants](https://developers.facebook.com/docs/marketing-api/catalog/guides/product-variants).  \n#### Sample Request  \ncurl \\-i \\-X GET \\\\\n\"https://graph.facebook.com/`v19.0`/90010177253934/catalog\\_product\\_search?catalog\\_id=960179311066902&q=gummy&access\\_token=EAAOc...\"  \n#### Sample Response  \n{\n\"data\": \\[\n{\n\"product\\_id\": 3231775643511089,\n\"merchant\\_id\": 90010177253934,\n\"product\\_name\": \"Gummy Wombats\",\n\"image\\_url\": \"https://scont...\",\n\"retailer\\_id\": \"oh59p9vzei\",\n\"review\\_status\": \"approved\",\n\"is\\_checkout\\_flow\": true,\n\"product\\_variants\": \\[\n{\n\"product\\_id\": 5209223099160494\n},\n{\n\"product\\_id\": 7478222675582505,\n\"variant\\_name\": \"Green Gummy Wombats\"\n}\n\\]\n}\n\\]\n}  \n[](#)\n",
        "line_start": 1458,
        "line_end": 1501
    },
    "110": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tCreate a Tagged Container for Images or Videos\n\nContent: \n## Create a Tagged Container for Images or Videos  \nUse the [IG User Media](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media) endpoint to create a media container for an [image](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#create-photo-container) or [video](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#create-video-container). Alternatively, see [Create Tagged Media Container for Reels](#post-media-reels) or [Carousels](#carousels).  \nPOST /{ig\\-user\\-id}/media  \n#### Parameters  \n* `image_url` \u2014 (**required** for images only) The path to the image. Your image must be on a public server.\n* `user_tags` \u2014 (images only) An array of public usernames and x/y coordinates for any public Instagram users who you want to tag in the image. The array must be formatted in JSON and contain a `username`, `x`, and `y` property. For example, `[{username:'natgeo',x:0.5,y:1.0}]`. `x` and `y` values must be floats that originate from the top-left of the image, with a range of `0.0`\u2013`1.0`. Tagged users will receive a notification when the media is published.\n* `video_url` \u2014 (**required** for videos only) The path to the video. Your video must be on a public server.\n* `thumb_offset` \u2014 (videos only) The location, in milliseconds, of the frame for the video's cover thumbnail image. The default value is `0`, which is the first frame of the video.\n* `product_tags` \u2014 (**required**) An array of objects specifying the product tags to add to the image or video. You can specify up to 20 tags for photo and video feed posts and up to 20 tags total per carousel post (up to 5 per carousel slide).\n* The tags and product IDs must be unique.\n* Tags for out-of-stock products are supported.\n* Each object should have the following information:\n* `product_id` \u2014 (**required**) Product ID.\n* `x` \u2014 (images only) A float that indicates percentage distance from left edge of the published media image. Value must be within `0.0`\u2013`1.0` range.\n* `y` \u2014 (images only) A float that indicates percentage distance from top edge of the pu blished media image. Value must be within `0.0`\u2013`1.0` range.  \nIf the operation is successful the API returns a container ID which you can use to [publish the container](#post-media-publish).  \n#### Sample Request  \ncurl \\-i \\-X POST \\\\\n\"https://graph.facebook.com/`v19.0`/90010177253934/media?image\\_url=https%3A%2F%2Fupl...&location\\_id=7640348500&product\\_tags=%5B%0A%20%20%7B%0A%20%20%20%20product\\_id%3A'3231775643511089'%2C%0A%20%20%20%20x%3A%200.5%2C%0A%20%20%20%20y%3A%200.8%0A%20%20%7D%0A%5D&access\\_token=EAAOc...\"  \nFor reference, here is the HTML-decoded POST payload string:  \nhttps://graph.facebook.com/v12.0/90010177253934/media?image\\_url=https://upl...&location\\_id=7640348500\n&product\\_tags=\\[\n{\nproduct\\_id:'3231775643511089',\nx: 0.5,\ny: 0.8\n}\n\\]&access\\_token=EAAOc...  \n#### Sample Response  \n{\n\"id\": \"17969578066508312\"\n}  \n[](#)\n",
        "line_start": 1514,
        "line_end": 1547
    },
    "111": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tCreate a Tagged Container for Reels\n\nContent: \n## Create a Tagged Container for Reels  \nUse the [IG User Media](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media) endpoint to create a media container for Reels. Alternatively, see [Create Tagged Media Container](#post-media) or [Carousels](#carousels).  \nPOST /{ig\\-user\\-id}/media  \n#### Parameters  \n* `media_type` \u2014 You must specify the media type `REELS`.\n* `video_url` \u2014 The path to the video for the Reel. Your video must be on a public server. Your video must meet the [Reels Specifications](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#reel-specifications).\n* `thumb_offset` \u2014 The location, in milliseconds, of the frame for the video's cover thumbnail image. The default value is `0`, which is the first frame of the video.\n* `caption` \u2014 The caption for the Reel.\n* `product_tags` \u2014 (**required**) An array of objects specifying the product tags to add to the Reel. You can specify up to 30 tags, and the tags and product IDs must be unique. Tags for out-of-stock products are supported. Each object should have the following information:\n* `product_id` \u2014 (**required**) Product ID.\n* `location_id` \u2014 The ID of a Page associated with a location that you want to tag the video with. For details, see [IG User Media Query String Parameters](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#query-string-parameters).\n* `share_to_feed` \u2014 `true` to request that the video appears on both the Feed and Reels tabs. `false` to request that the video appears only on the Reels tab.\n* `access_token` \u2014 Your [User Access Token](https://developers.facebook.com/docs/facebook-login/guides/access-tokens).  \nIf the operation is successful the API returns a container ID which you can use to [publish the container](#post-media-publish).  \n#### Sample Request  \ncurl \\-i \\-X POST \\\\\n\"https://graph.facebook.com/`v19.0`/90010177253934/media?media\\_type=REELS&video\\_url=https://upl...&product\\_tags=%5B%0A%20%20%7B%0A%20%20%20%20product\\_id%3A'3231775643511089'%0A%20%20%7D%0A%5D&access\\_token=EAAOc...\"  \nFor reference, here is the HTML-decoded POST payload string:  \nhttps://graph.facebook.com/v12.0/90010177253934/media?media\\_type=REELS&video\\_url=https://upl...\n&product\\_tags=\\[\n{\nproduct\\_id:'3231775643511089'\n}\n\\]&access\\_token=EAAOc...  \n#### Sample Response  \n{\n\"id\": \"17969578066508312\"\n}  \n[](#)\n",
        "line_start": 1560,
        "line_end": 1589
    },
    "112": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tPublish a Tagged Media Container\n\nContent: \n## Publish a Tagged Media Container  \nUse the [IG User Media Publish](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media_publish) endpoint to publish the tagged media container. You may publish up to 25 tagged media containers on behalf of an app user within a 24 hour moving period. If you are publishing a carousel, see [Carousels](#carousels). Only products that have a `review_status` of `approved` will appear on published posts. If any of these products are out of stock, their tags will still appear on the published post.  \nPOST /{ig\\-user\\-id}/media\\_publish  \n#### Parameters  \n* `creation_id` \u2014 (**required**) The carousel container ID.  \nIf the operation is successful the API will return an IG Media ID.  \n#### Sample Request  \ncurl \\-i \\-X POST \\\\\n\"https://graph.facebook.com/`v19.0`/90010177253934/media\\_publish?creation\\_id=17969578066508312&access\\_token=EAAOc\"  \n#### Sample Response  \n{\n\"id\": \"90010778325754\"\n}  \n[](#)\n",
        "line_start": 1602,
        "line_end": 1616
    },
    "113": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tGet Tags On Media\n\nContent: \n## Get Tags On Media  \nUse the [IG Media Product Tags](https://developers.facebook.com/docs/instagram-api/reference/ig-media/product_tags#reading) endpoint to get tags on published media.  \nGET /{ig\\-media\\-id}/product\\_tags  \nReturns an array of product tags and their metadata on an [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media/). Responses can include the following product tag fields:  \n* `product_id` \u2014 Product ID.\n* `merchant_id` \u2014 Merchant ID.\n* `name` \u2014 Product name.\n* `price_string` \u2014 Product price.\n* `image_url` \u2014 Product image URL.\n* `review_status` \u2014 Indicates product tag eligibility status. Values can be:\n* `approved` \u2014 Product is approved.\n* `rejected` \u2014 Product was rejected.\n* `pending` \u2014 Still undergoing review.\n* `outdated` \u2014 Product was approved but has been edited and requires reapproval.\n* `\"\"` \u2014 No review status.\n* `no_review` \u2014 No review status.\n* `is_checkout` \u2014 If `true`, product can be purchased directly through the Instagram app. If `false`, product can only be purchased on the merchant's website.\n* `stripped_price_string` \u2014 Product short price string (price displayed in constrained spaces, such as `$100` instead of `100 USD`).\n* `string_sale_price_string` \u2014 Product sale price.\n* `x` \u2014 A float that indicates percentage distance from left edge of media image. Value within `0.0`\u2013`1.0` range.\n* `y` \u2014 A float that indicates percentage distance from top edge of media image. Value within `0.0`\u2013`1.0` range.  \n#### Sample Request  \ncurl \\-i \\-X GET \\\\\n\"https://graph.facebook.com/`v19.0`/90010778325754/product\\_tags?access\\_token=EAAOc...\"  \n#### Sample Response  \n{\n\"data\": \\[\n{\n\"product\\_id\": 3231775643511089,\n\"merchant\\_id\": 90010177253934,\n\"name\": \"Gummy Wombats\",\n\"price\\_string\": \"$3.50\",\n\"image\\_url\": \"https://scont...\",\n\"review\\_status\": \"approved\",\n\"is\\_checkout\": true,\n\"stripped\\_price\\_string\": \"$3.50\",\n\"x\": 0.5,\n\"y\": 0.80000001192093\n}\n\\]\n}  \n[](#)\n",
        "line_start": 1627,
        "line_end": 1669
    },
    "114": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tTag Existing Media\n\nContent: \n## Tag Existing Media  \nUse the [IG Media Product Tags](https://developers.facebook.com/docs/instagram-api/reference/ig-media/product_tags#creating) endpoint to create or update tags on existing [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media/).  \nPOST /{ig\\-media\\-id}/product\\_tags  \n#### Parameters  \n* `updated_tags` \u2014 (**required**) An array of objects specifying which product tags to tag the image or video with (maximum of 5; tags and product IDs must be unique). Each object should have the following information:\n* `product_id` \u2014 (**required**) Product ID. If the IG Media has not been tagged with this ID the tag will be added to the IG Media. If the media has already been tagged with this ID, the tag's display coordinates will be updated.\n* `x` \u2014 (images only, **required**) A float that indicates percentage distance from left edge of the published media image. Value must be within `0.0`\u2013`1.0` range.\n* `y` \u2014 (images only, **required**) A float that indicates percentage distance from top edge of the published media image. Value must be within `0.0`\u2013`1.0` range.  \nTagging media is additive until the 5 tag limit has been reached. If the targeted media has already been tagged by a product in the request, the old tag's `x` and `y` values will be updated with their new values (a new tag will not be added).  \nReturns `true` if able to update the product, otherwise returns `false`.  \n#### Sample Request  \ncurl \\-i \\-X POST \\\\\n\"https://graph.facebook.com/`v19.0`/90010778325754/product\\_tags?updated\\_tags=%5B%0A%20%20%7B%0A%20%20%20%20product\\_id%3A'3859448974125379'%2C%0A%20%20%20%20x%3A%200.5%2C%0A%20%20%20%20y%3A%200.8%0A%20%20%7D%0A%5D&access\\_token=EAAOc...\"  \nFor reference, here is the HTML-decoded POST payload string:  \nhttps://graph.facebook.com/v12.0/90010778325754/product\\_tags?updated\\_tags=\\[\n{\nproduct\\_id:'3859448974125379',\nx: 0.5,\ny: 0.8\n}\n\\]&access\\_token=EAAOc...  \n#### Sample Response  \n{\n\"success\": true\n}  \n[](#)\n",
        "line_start": 1679,
        "line_end": 1705
    },
    "115": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tDelete Tags\n\nContent: \n## Delete Tags  \nUse the [IG Media Product Tags](https://developers.facebook.com/docs/instagram-api/reference/ig-media/product_tags#deleting) endpoint to delete tags on a published [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media/) including Reels.  \nDELETE /{ig\\-media\\-id}/product\\_tags  \n#### Parameters  \n* `deleted_tags` \u2014 (**required**) An array containing the following information for each product tag to be deleted:\n* `merchant_id` \u2014 (**required**) Merchant ID.\n* `product_id` \u2014 (**required**) Product ID.  \nReturns `true` if tag deletion successful, otherwise returns `false`.  \n#### Sample Request  \ncurl \\-i \\-X DELETE \\\\\n\"https://graph.facebook.com/`v19.0`/90010778325754/product\\_tags?deleted\\_tags=%5B%0A%20%20%7B%0A%20%20%20%20product\\_id%3A'3859448974125379'%2C%0A%20%20%20%20merchant\\_id%3A'90010177253934'%0A%20%20%7D%0A%5D&access\\_token=EAAOc...\"  \nFor reference, here is the HTML-decoded POST payload string:  \nhttps://graph.facebook.com/v12.0/90010778325754/product\\_tags?deleted\\_tags=\\[\n{\nproduct\\_id:'3859448974125379',\nmerchant\\_id:'90010177253934'\n}\n\\]&access\\_token=EAAOc...  \n#### Sample Response  \n{\n\"success\": true\n}  \n[](#)\n",
        "line_start": 1719,
        "line_end": 1742
    },
    "116": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tAppeal Product Rejection\n\nContent: \n## Appeal Product Rejection  \nUse the [IG User Product Appeal](https://developers.facebook.com/docs/instagram-api/reference/ig-user/product_appeal#creating) endpoint it you want to provide a way for your app users to appeal product [rejections](https://www.facebook.com/help/instagram/1907693709488725) (tags of rejected products will not appear on published posts). Although not required, we do recommend that you provide a way for app users to appeal rejections, or advise them to appeal rejections [using the Business Manager](https://www.facebook.com/business/help/494867298080532).  \nPOST /{ig\\-user\\-id}/product\\_appeal  \n#### Parameters  \n* `appeal_reason` \u2014 (**required**) Explanation of why the product should be approved.\n* `product_id` \u2014 (**required**) Product ID.  \nReturns `true` if we are able to receive your request, otherwise returns `false`. Response does not indicate appeal outcome.  \n#### Sample Request  \ncurl \\-i \\-X POST \\\\  \n\"https://graph.facebook.com/`v19.0`/90010177253934/product\\_appeal?appeal\\_reason=product%20is%20a%20toy%20and%20not%20a%20real%20weapon&product\\_id=4382881195057752&access\\_token=EAAOc...\"  \n#### Sample Response  \n{\n\"success\": true\n}  \n[](#)\n",
        "line_start": 1755,
        "line_end": 1770
    },
    "117": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tGet Appeal Status\n\nContent: \n## Get Appeal Status  \nUse the [IG User Product Appeal](https://developers.facebook.com/docs/instagram-api/reference/ig-user/product_appeal#reading) endpoint to get the status of an appeal for a given [rejected](https://www.facebook.com/help/instagram/1907693709488725) product:  \nGET /{ig\\-user\\-id}/product\\_appeal  \n#### Parameters  \n* `product_id` \u2014 (**required**) Product ID.  \nReturns appeal status metadata. Responses can include the following appeal fields:  \n* `eligible_for_appeal` \u2014 Indicates if decision can be appealed (yes if `true`, no if `false`).\n* `product_id` \u2014 Product ID.\n* `review_status` \u2014 Review status. Value can be:\n* `approved` \u2014 Product is approved.\n* `rejected` \u2014 Product was rejected.\n* `pending` \u2014 Still undergoing review.\n* `outdated` \u2014 Product was approved but has been edited and requires reapproval.\n* `\"\"` \u2014 No review status.\n* `no_review` \u2014 No review status.  \n#### Sample Request  \ncurl \\-i \\-X GET \\\\\n\"https://graph.facebook.com/`v19.0`/90010177253934/product\\_appeal?product\\_id=4029274203846188&access\\_token=EAAOc...\"  \n#### Sample Response  \n{\n\"data\": \\[\n{\n\"product\\_id\": 4029274203846188,\n\"review\\_status\": \"approved\",\n\"eligible\\_for\\_appeal\": false\n}\n\\]\n}  \n[](#)\n",
        "line_start": 1782,
        "line_end": 1811
    },
    "118": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tCarousels\n\nContent: \n## Carousels  \nYou can publish carousels (albums) containing up to 10 total tagged images, videos, or a mix of the two. To do this, when performing step 1 of 3 of the [carousel posts](https://developers.facebook.com/docs/instagram-api/guides/content-publishing#carousel-posts) publishing process, simply create [tagged media containers](#create-tagged-media-container) for each tagged image or video that you want to appear in the album carousel and continue with the carousel publishing processs as you normally would.\n",
        "line_start": 1823,
        "line_end": 1825
    },
    "119": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tProduct Tagging\n\tCarousels\n\tGet child media in a carousel\n\nContent: \n### Get child media in a carousel  \nTo get the IDs of IG Media in an album carousel, use the [IG Media Children](https://developers.facebook.com/docs/instagram-api/reference/ig-media/children) endpoint.  \n[](#)  \n[](#)\n",
        "line_start": 1827,
        "line_end": 1831
    },
    "120": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api/guides/webhooks\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api/guides/webhooks\nThe following content is from the [Webhooks product documentation](https://developers.facebook.com/docs/graph-api/webhooks). Please refer to the Webhooks documentation if you are unfamiliar with Webhooks.\n",
        "line_start": 1835,
        "line_end": 1837
    },
    "121": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\nContent: \n# Set Up Webhooks for Instagram  \nWebhooks for [Instagram](https://developers.facebook.com/docs/instagram-api) allow you to receive real-time notifications whenever someone comments on the Media objects of your app users; [@mentions](https://developers.facebook.com/docs/pages/mentions) your app users; or when Stories of your app users expire.  \n[](#)\n",
        "line_start": 1838,
        "line_end": 1841
    },
    "122": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\tReceive Live Webhook Notifications\n\nContent: \n## Receive Live Webhook Notifications  \nTo receive live webhook notifications, the following conditions must be satisfied:  \n* Your app must have **Instagram** webhooks configured and appropriate **fields** subscribed to in the App Dashboard.\n* For [Consumer apps](https://developers.facebook.com/docs/development/create-an-app/app-dashboard/app-types#consumer), they must be in [Live Mode.](https://developers.facebook.com/docs/development/build-and-test/app-modes#live-mode)\n* For [Business apps](https://developers.facebook.com/docs/development/create-an-app/app-dashboard/app-types#business), they must have permissions with an [Advanced Access](https://developers.facebook.com/docs/graph-api/overview/access-levels#advanced-access) level. You can request Advanced Access for permissions as shown here:  \n![](https://scontent-cdg4-3.xx.fbcdn.net/v/t39.8562-6/277167266_482444906912677_1666124645911161205_n.png?_nc_cat=111&ccb=1-7&_nc_sid=f537c7&_nc_ohc=Gc0vUsFmmLEAX8JpXAg&_nc_oc=AQkSGobr2bbUWaCQI4Dmlf6z4ARRm_76lTdKFGKtx5IW8UOgwDcAeDoh6-7SaA9UIm8&_nc_ht=scontent-cdg4-3.xx&oh=00_AfDb8zmWj5CDkj1mU2rKoZzZOHRb0_mqNcWDvFI8CfJx1A&oe=65C000D0)  \nIf the app permissions don't have an access level of **Advanced Access**, the app doesn't receive webhook notifications.  \n* The app user must have granted your app appropriate permissions ([instagram\\_manage\\_insights](https://developers.facebook.com/docs/permissions/reference/instagram_manage_insights) for Stories, [instagram\\_manage\\_comments](https://developers.facebook.com/docs/permissions/reference/instagram_manage_comments) for Comments and @Mentions).\n* The Page connected to the app user's account must have [Page subscriptions enabled](https://developers.facebook.com/docs/instagram-api/guides/webhooks/#step-2--enable-page-subscriptions).\n* The Business connected to the app user's Page must be **verified**.\n* The owner of the Media object upon which the comment or @mention appears must not have set their account to [private](https://www.facebook.com/help/instagram/448523408565555).\n",
        "line_start": 1844,
        "line_end": 1855
    },
    "123": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\tReceive Live Webhook Notifications\n\tLimitations\n\nContent: \n### Limitations  \n* Webhook notifications for Comments on albums don't include the album ID. Get the album ID by querying the Comment ID in the webhook and request its `media` field.\n* Apps don't receive a webhook notifications if the Media where the comment or @mention appears was created by a [private account](https://www.facebook.com/help/instagram/448523408565555).\n* Story insights metrics with counts of less than 5 are returned as `-1`.\n* Apps only receive webhook notifications for comments on live [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media/) if the media is on broadcast.\n* Reels are not supported.\n* Your app must have successfully completed App Review (advanced access) to receive webhooks notifications for `comments` and `live_comments` webhooks fields.  \n[](#)\n",
        "line_start": 602,
        "line_end": 610
    },
    "124": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\tStep 1: Create an Endpoint\n\nContent: \n## Step 1: Create an Endpoint  \n[Create an endpoint](https://developers.facebook.com/docs/graph-api/webhooks/getting-started) that accepts and processes webhooks. During the [configuration](https://developers.facebook.com/docs/graph-api/webhooks/getting-started#configure-webhooks-product), select the **Instagram Graph API** object, click **Set up**, and subscribe to one or more [Instagram fields](https://developers.facebook.com/docs/graph-api/webhooks/reference/instagram/).\n",
        "line_start": 1872,
        "line_end": 1874
    },
    "125": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\tStep 1: Create an Endpoint\n\tInstagram Fields\n\nContent: \n### Instagram Fields  \n| Field | Description | Permissions Required |\n| --- | --- | --- |\n| [`comments`](https://developers.facebook.com/docs/graph-api/webhooks/reference/instagram/#comments) | Comments on an [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media/) owned by your app's Instagram user.<br><br>The `ad_id` and `ad_title` will be returned in the media object when a person comments on a boosted Instagram post or Instagram ads post. This may result in duplicate webhook notifications. | * [instagram\\_manage\\_comments](https://developers.facebook.com/docs/permissions/reference/instagram_manage_comments)<br>* [pages\\_manage\\_metadata](https://developers.facebook.com/docs/permissions/reference/pages_manage_metadata)<br>* [pages\\_read\\_engagement](https://developers.facebook.com/docs/permissions/reference/pages_read_engagement) **or**  <br>    [pages\\_show\\_list](https://developers.facebook.com/docs/permissions/reference/pages_show_list) |\n| [`live_comments`](https://developers.facebook.com/docs/graph-api/webhooks/reference/instagram/#live_comments) | Comments on a live [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media/) owned by your app's Instagram user. | * [instagram\\_manage\\_comments](https://developers.facebook.com/docs/permissions/reference/instagram_manage_comments)<br>* [pages\\_manage\\_metadata](https://developers.facebook.com/docs/permissions/reference/pages_manage_metadata)<br>    <br>* [pages\\_read\\_engagement](https://developers.facebook.com/docs/permissions/reference/pages_read_engagement) **or**  <br>    [pages\\_show\\_list](https://developers.facebook.com/docs/permissions/reference/pages_show_list) |\n| [`mentions`](https://developers.facebook.com/docs/graph-api/webhooks/reference/instagram/#mentions) | @mentions for your app's Instagram user in a comment. | * [instagram\\_manage\\_comments](https://developers.facebook.com/docs/permissions/reference/instagram_manage_comments)<br>* [pages\\_manage\\_metadata](https://developers.facebook.com/docs/permissions/reference/pages_manage_metadata)<br>    <br>* [pages\\_read\\_engagement](https://developers.facebook.com/docs/permissions/reference/pages_read_engagement) **or**  <br>    [pages\\_show\\_list](https://developers.facebook.com/docs/permissions/reference/pages_show_list) |\n| [`story_insights`](https://developers.facebook.com/docs/graph-api/webhooks/reference/instagram/#story_insights) | Metrics describing interactions on a story. Sent 1 hour after the story expires. | * [instagram\\_manage\\_insights](https://developers.facebook.com/docs/permissions/reference/instagram_manage_insights)<br>* [pages\\_manage\\_metadata](https://developers.facebook.com/docs/permissions/reference/pages_manage_metadata)<br>    <br>* [pages\\_read\\_engagement](https://developers.facebook.com/docs/permissions/reference/pages_read_engagement) **or**  <br>    [pages\\_show\\_list](https://developers.facebook.com/docs/permissions/reference/pages_show_list) |  \n[](#)\n",
        "line_start": 1876,
        "line_end": 1884
    },
    "126": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\tStep 2: Enable Page Subscriptions\n\nContent: \n## Step 2: Enable Page Subscriptions  \nYour app must enable Page subscriptions on the Page connected to the app user's account by sending a `POST` request to the [Page Subscribed Apps](https://developers.facebook.com/docs/graph-api/reference/page/subscribed_apps#Creating) edge and subscribing to any Page field.\n",
        "line_start": 1887,
        "line_end": 1889
    },
    "127": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\tStep 2: Enable Page Subscriptions\n\tEndpoint Requirements\n\nContent: \n### Endpoint Requirements  \n* the app user's Page Access Token\n* [pages\\_manage\\_metadata](https://developers.facebook.com/docs/instagram-api/guides/docs/permissions/reference/pages_manage_metadata)  \n#### Request Syntax  \nPOST /{page\\-id}/subscribed\\_apps\n?access\\_token\\={access\\-token}\n&subscribed\\_fields\\={fields}  \n#### Request Parameters  \n| Value Placeholder | Value Description |\n| --- | --- |\n| `{page_id}` | ID of the Page connected to the app user's account. |\n| `{access_token}` | App user's Page access tToken. |\n| `{fields}` | A Page field (example: `feed`). |  \nYour app does not receive notifications for changes to a field unless you configure Page subscriptions in the App Dashboard and subscribe to that field.  \n#### Sample Request  \ncurl \\-i \\-X POST \\\\\n\"https://graph.facebook.com/`v19.0`/1755847768034402/subscribed\\_apps?subscribed\\_fields=feed&access\\_token=EAAFB...\"  \n##### Sample Response  \n{\n\"success\": true\n}  \n[](#)\n",
        "line_start": 1891,
        "line_end": 1913
    },
    "128": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\tCommon Uses\n\tCapture Story Insights\n\nContent: \n## Common Uses  \n### Capture Story Insights  \nIf you subscribe to the `story_insights` field, we send your endpoint a webhook notification containing user interaction metrics on a story, after the story has expired.  \n#### Sample Story Insights Payload  \n\\[\n{\n\"entry\": \\[\n{\n\"changes\": \\[\n{\n\"field\": \"story\\_insights\",\n\"value\": {\n\"media\\_id\": \"18023345989012587\",\n\"exits\": 1,\n\"replies\": 0,\n\"reach\": 17,\n\"taps\\_forward\": 12,\n\"taps\\_back\": 0,\n\"impressions\": 28\n}\n}\n\\],\n\"id\": \"17841405309211844\",  // Instagram Business or Creator Account ID\n\"time\": 1547687043\n}\n\\],\n\"object\": \"instagram\"\n}\n\\]\n",
        "line_start": 9,
        "line_end": 38
    },
    "129": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\tCommon Uses\n\tReply to Comment @Mentions\n\nContent: \n### Reply to Comment @Mentions  \nIf you subscribe to the `mentions` field, we send your endpoint a webhook notification whenever an Instagram user @mentions an Instagram Business or Creator Account in a comment or caption.  \nFor example, here's a sample comment webhook notification payload sent for an Instagram Business Account (`17841405726653026`):  \n#### Sample Comment @Mention Payload  \n\\[\n{\n\"entry\": \\[\n{\n\"changes\": \\[\n{\n\"field\": \"mentions\",\n\"value\": {\n\"comment\\_id\": \"17894227972186120\",\n\"media\\_id\": \"17918195224117851\"\n}\n}\n\\],\n\"id\": \"17841405726653026\",\n\"time\": 1520622968\n}\n\\],\n\"object\": \"instagram\"\n}\n\\]\n",
        "line_start": 1959,
        "line_end": 1983
    },
    "130": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\tCommon Uses\n\tGet the Comment's Contents\n\nContent: \n### Get the Comment's Contents  \nTo get the comment's contents, use the `comment_id` property to query the [`GET /{ig-user-id}/mentioned_comment`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/mentioned_comment) edge:  \n#### Sample Query  \nGET https://graph.facebook.com/17841405726653026\n?fields=mentioned\\_comment.comment\\_id(17894227972186120)  \n#### Sample Response  \n{\n\"mentioned\\_comment\": {\n\"timestamp\": \"2018-03-20T00:05:29+0000\",\n\"text\": \"@bluebottle challenge?\",\n\"id\": \"17894227972186120\"\n},\n\"id\": \"17841405726653026\"\n}\n",
        "line_start": 1988,
        "line_end": 2002
    },
    "131": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\tCommon Uses\n\tParse the Payload and Respond\n\nContent: \n### Parse the Payload and Respond  \nWhen you get the response, parse the payload for the `text` property to determine if you want to respond to the comment. To respond, use the webhook notification payload's `caption_id` and `media_id` property values to query the [`POST /{ig-user-id}/mentions`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/mentions) endpoint:  \n#### Sample Query  \ncurl \\-i \\-X POST \\\\\n\\-d \"comment\\_id=17894227972186120\" \\\\\n\\-d \"media\\_id=17918195224117851\" \\\\\n\\-d \"message=Challenge%20accepted!\" \\\\\n\\-d \"access\\_token={access-token}\" \\\\\n\"https://graph.facebook.com/17841405726653026/mentions\"  \n#### Sample Response  \n{\n\"id\": \"17911496353086895\"\n}\n",
        "line_start": 2008,
        "line_end": 2021
    },
    "132": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\tCommon Uses\n\tReply to Caption @Mentions\n\nContent: \n### Reply to Caption @Mentions  \nIf you subscribe to the `mentions` field, we send your endpoint a webhook notification whenever a user @mentions an Instagram Business or Creator Account in a comment or caption on a media object not owned by the Business or Creator.  \nFor example, here's a sample caption @mention webhook notification sent for an Instagram Business Account (`17841405726653026`):  \n#### Sample Caption @Mention Webhook Notification  \n\\[\n{\n\"entry\": \\[\n{\n\"changes\": \\[\n{\n\"field\": \"mentions\",\n\"value\": {\n\"media\\_id\": \"17918195224117851\"\n}\n}\n\\],\n\"id\": \"17841405726653026\",\n\"time\": 1520622968\n}\n\\],\n\"object\": \"instagram\"\n}\n\\]\n",
        "line_start": 2027,
        "line_end": 2050
    },
    "133": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\tCommon Uses\n\tGet the Caption's Contents\n\nContent: \n### Get the Caption's Contents  \nTo get the caption's contents, use the `media_id` property to query the [`GET /{ig-user-id}/mentioned_media`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/mentioned_media) edge:  \n#### Sample Query  \nGET https://graph.facebook.com/17841405726653026\n?fields=mentioned\\_media.media\\_id(17918195224117851){caption,media\\_type}  \n#### Sample Response  \n{\n\"mentioned\\_media\": {\n\"caption\": \"@bluebottle There can be only one!\",\n\"media\\_type\": \"IMAGE\",\n\"id\": \"17918195224117851\"\n},\n\"id\": \"17841405726653026\"\n}\n",
        "line_start": 2055,
        "line_end": 2069
    },
    "134": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tSet Up Webhooks for Instagram\n\tCommon Uses\n\tParse the Payload and Respond\n\nContent: \n### Parse the Payload and Respond  \nWhen you get the response, parse the payload for the `caption` property to determine if you want to respond to the comment. To respond, use the webhook `media_id` property to query the [`POST /{ig-user-id}/mentions`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/mentions) edge:  \n#### Sample Query  \ncurl \\-i \\-X POST \\\\\n\\-d \"media\\_id=17918195224117851\" \\\\\n\\-d \"message=MacLeod%20agrees!\" \\\\\n\\-d \"access\\_token={access-token}\" \\\\\n\"https://graph.facebook.com/17841405726653026/mentions\"  \n#### Sample Response  \n{\n\"id\": \"17911496353086895\"\n}  \n[](#)  \n[](#)\n",
        "line_start": 2008,
        "line_end": 2022
    },
    "135": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/instagram-api/changelog\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/instagram-api/changelog\n",
        "line_start": 2097,
        "line_end": 2098
    },
    "136": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\nContent: \n# Changelog  \nThis changelog refers to changes made for the Instagram Graph API.\n",
        "line_start": 2098,
        "line_end": 2100
    },
    "137": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tRelated Changelogs\n\nContent: \n### Related Changelogs  \n* [Graph API Changelog ![](https://scontent-cdg4-2.xx.fbcdn.net/v/t39.2365-6/310307727_3347317042262105_1088877051262827250_n.png?_nc_cat=107&ccb=1-7&_nc_sid=e280be&_nc_ohc=6zzb9-5bY8QAX_nY52g&_nc_ht=scontent-cdg4-2.xx&oh=00_AfBRGSoDbMfUe1dC6xxUblU-wz3raGSpfpjPYKA-ck1AaA&oe=65D572A2)](https://developers.facebook.com/docs/graph-api/changelog)  \n* [Messenger Platform Changelog ![](https://scontent-cdg4-2.xx.fbcdn.net/v/t39.2365-6/310307727_3347317042262105_1088877051262827250_n.png?_nc_cat=107&ccb=1-7&_nc_sid=e280be&_nc_ohc=6zzb9-5bY8QAX_nY52g&_nc_ht=scontent-cdg4-2.xx&oh=00_AfBRGSoDbMfUe1dC6xxUblU-wz3raGSpfpjPYKA-ck1AaA&oe=65D572A2)](https://developers.facebook.com/docs/messenger-platform/changelog) (includes Instagram Messaging)  \n* [Marketing API Changelog ![](https://scontent-cdg4-2.xx.fbcdn.net/v/t39.2365-6/310307727_3347317042262105_1088877051262827250_n.png?_nc_cat=107&ccb=1-7&_nc_sid=e280be&_nc_ohc=6zzb9-5bY8QAX_nY52g&_nc_ht=scontent-cdg4-2.xx&oh=00_AfBRGSoDbMfUe1dC6xxUblU-wz3raGSpfpjPYKA-ck1AaA&oe=65D572A2)](https://developers.facebook.com/docs/graph-api/changelog)\n",
        "line_start": 2102,
        "line_end": 2106
    },
    "138": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tSeptember 12, 2023\n\nContent: \n## September 12, 2023  \n#### Deprecation of Media and User Insights  \n_Applies to v18.0+. Will apply to all versions on December 11, 2023._  \nDuplicative and legacy Instagram insight metrics are being deprecated. Please see documentation for the endpoints and [Instagram Insights](https://developers.facebook.com/docs/instagram-api/guides/insights) for more information on which metrics to use in their place.  \nThe following endpoints and metrics are affected:  \n* [`GET /{ig-user-id}/insights`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/insights)\n* `AUDIENCE_GENDER_AGE`\n* `AUDIENCE_LOCALE`\n* `AUDIENCE_COUNTRY`\n* `AUDIENCE_CITY`\n* [`GET /{ig-media-id}/insights`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/insights)\n* `CAROUSEL_ALBUM_IMPRESSIONS`\n* `CAROUSEL_ALBUM_REACH`\n* `CAROUSEL_ALBUM_ENGAGEMENT`\n* `CAROUSEL_ALBUM_SAVED`\n* `CAROUSEL_ALBUM_VIDEO_VIEWS`\n* `TAPS_FORWARD`\n* `TAPS_BACK`\n* `EXITS`\n* `ENGAGEMENT`  \n**Note:** `total_interactions`, which is listed as an alternative for some of the deprecated metrics, is currently only available using version 18.0 and does not work with older versions. When querying older versions before Dec 11, 2023, please use the `engagement` metric.`total_interactions`, which is listed as an alternative for some of the deprecated metrics, is currently only available using version 18.0 and does not work with older versions. When querying older versions before Dec 11, 2023, please use the `engagement` metric.  \n[](#)  \n[](#)\n",
        "line_start": 2111,
        "line_end": 2134
    },
    "139": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tNovember 9, 2022\n\nContent: \n## November 9, 2022  \n#### Instagram Webhooks  \n_Applies to all versions._  \nThe `ad_id` and `ad_title` will be returned in the `media` object of the `comments` field's `value` object when a person comments on a [boosted Instagram post or Instagram ads post](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F1067656009937668&h=AT1YcsU9P6E_0nZ8fYZ8siJgm-mgyXiwrdAfR8GKeD-Rbk6iqLUbgVoeQFhN1IvvTw9yJG8olJTvT7VBsxw3nmZoSCQV0-xhtx3P2ssIUUSQHYumHVGdwGEgAlCmV_G8k_RnUKfPJSpA1Fzww_EWPw).  \n[](#)\n",
        "line_start": 2143,
        "line_end": 2148
    },
    "140": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tOctober 31st\n\nContent: \n## October 31st  \n#### Reels \u2013 Product Tags  \n_Applies to all versions._  \nInstagram Product Tagging API for Reels is made available. You can tag up to 30 products when publishing a reel.  \n[](#)\n",
        "line_start": 2153,
        "line_end": 2158
    },
    "141": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tJune 28, 2022\n\nContent: \n## June 28, 2022  \n#### Reels  \n_Applies to all versions._  \nReels are now supported. To publish a video as a reel, set the `media_type` parameter to `REELS` when creating a [single media post](https://developers.facebook.com/docs/instagram-api/guides/content-publishing#single-media-posts) container. Refer to the [`POST /ig-user/media endpoint`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/media#creating) reference to learn which parameters can be used with reels as well as requirements for reels videos.  \n**Note:** Beginning November 9, 2023, the `VIDEO` value for `media_type` will no longer be supported. Use the `REELS` media type to publish a video to your feed.  \n[](#)\n",
        "line_start": 2163,
        "line_end": 2169
    },
    "142": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tJune 27, 2022\n\nContent: \n## June 27, 2022  \n#### Legacy Instagram API Documentation  \n_Applies to all versions._  \nThe [Legacy Instagram API developer documentation](https://l.facebook.com/l.php?u=https%3A%2F%2Fwww.instagram.com%2Fdeveloper%2F&h=AT1MhAuKx9huSVMkrWm8UHWeqmvk8dx9sH8ePS0yu1f03acKWyXFs0F0GDRe8JVXxWnjUVFQ8mCP41B-2tOAILizVzIDrdCsCsrETxVenvnOgcGKka_ca7ra5o1Dox8TktMEzAGp2FNxZbhsHiRtrw) has been removed and now redirects to the [Instagram Platform](https://developers.facebook.com/docs/instagram) developer documentation.  \n[](#)\n",
        "line_start": 2175,
        "line_end": 2180
    },
    "143": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tJune 20, 2022\n\nContent: \n## June 20, 2022  \n#### Product Tagging  \n_Applies to all versions._  \nYou can now create and manage [Instagram Shopping Product Tags](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F2022466637835789&h=AT0b-aO40TpF89A-pC4_zRtTRKu9MbNBV7a575cTLR3ui4zdxTGcpn5LxfHmdW_COqh5laXPM5qzFLLcBhIW9N3d8U3uznHs6fl0W0L3UoP_mCd0WAhO-F_vsK5dAJAyiPi76tMgBgOvq0XWwEQv3Q) on an Instagram Business's published media. Refer to the [Product Tagging](https://developers.facebook.com/docs/instagram-api/guides/product-tagging) guide to learn how.  \n[](#)\n",
        "line_start": 2185,
        "line_end": 2190
    },
    "144": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tMay 27, 2022\n\nContent: \n## May 27, 2022  \n#### Product Variants  \n_Applies to all versions._  \nFor partners in the [Product Tagging](https://developers.facebook.com/docs/instagram-api/guides/product-tagging) beta, all [product variants](https://developers.facebook.com/docs/marketing-api/catalog/guides/product-variants) that match a query's search criteria will now be returned when [searching a catalog for products](https://developers.facebook.com/docs/instagram-api/guides/product-tagging#get-eligible-products).  \n[](#)\n",
        "line_start": 2195,
        "line_end": 2200
    },
    "145": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tMarch 15, 2022\n\nContent: \n## March 15, 2022  \n#### Carousel Posts  \n_Applies to all versions._  \nYou can now use the Instagram API to publish posts containing multiple images and videos ([carousel posts](https://developers.facebook.com/docs/instagram-api/guides/content-publishing#carousel-posts)). Refer to the [Content Publishing](https://developers.facebook.com/docs/instagram-api/guides/content-publishing) guide for complete publishing steps.  \nIf your app has already been approved for [permissions](https://developers.facebook.com/docs/instagram-api/guides/content-publishing#permissions) required for content publishing, it does not need to undergo [App Review](https://developers.facebook.com/docs/app-review) again to take advantage of this functionality.  \n[](#)\n",
        "line_start": 2205,
        "line_end": 2211
    },
    "146": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tNovember 9, 2021\n\nContent: \n## November 9, 2021  \n#### Live Videos  \n_Applies to all versions._  \nYou can now use the Instagram API to get live video IG Media being broadcast by your app users, get comments on those videos, and use the Instagram Messaging API to send private replies (direct messages) to the comment authors. To support this functionality, the following changes have been made:  \n* a new [GET /ig-user/live\\_media](https://developers.facebook.com/docs/instagram-api/reference/ig-user/live_media#reading) edge can return live video [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media/) being broadcast by your app user at the time of the request\n* the `media` field on an [IG Comment](https://developers.facebook.com/docs/instagram-api/reference/ig-comment/) now returns and object containing both the ID (`id`) and published location (`media_product_type`) of the media upon which the comment was made\n* a new [`live_comments`](https://developers.facebook.com/docs/graph-api/webhooks/reference/instagram/#live_comments) Instagram Webhooks field can send notifications containing live comments made on your app users' live videos as they are being broadcast  \nPlease refer to the [Instagram Messaging API](https://developers.facebook.com/docs/messenger-platform/instagram) private replies documentation to learn how to send [private replies](https://developers.facebook.com/docs/messenger-platform/instagram/features/private-replies) to users who have commented on your app users' live video IG Media.  \n[](#)\n",
        "line_start": 2217,
        "line_end": 2226
    },
    "147": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tOctober 20, 2021\n\nContent: \n## October 20, 2021  \n#### IG Comments  \n_Applies to all versions._  \nTwo new [fields](https://developers.facebook.com/docs/instagram-api/reference/ig-comment#fields) have been added to [IG Comments](https://developers.facebook.com/docs/instagram-api/reference/ig-comment):  \n* `from` \u2014 returns an object containing the [IGSID](https://developers.facebook.com/docs/messenger-platform/instagram/overview#igsid) (`id`) and username (`username`) of the comment creator.\n* `parent_id` \u2014 returns the ID of the parent IG Comment if this comment was created on another IG Comment (i.e. a reply to another comment).  \n#### Instagram Webhooks  \n_Applies to all versions._  \nThe `comments` Instagram webhooks [field](https://developers.facebook.com/docs/graph-api/webhooks/reference/instagram/#comments) now includes the following properties in the `value` field object:  \n* `from.id` \u2014 [IGSID](https://developers.facebook.com/docs/messenger-platform/instagram/overview#igsid) of the Instagram user who created the comment.\n* `from.username` \u2014 Username of the Instagram user who created the comment\n* `media.id` \u2014 ID of the IG Media upon which the comment was made.\n* `media.media_product_type` \u2014 Surface (published location) of the IG Media upon which the comment was made.\n* `parent_id` \u2014 ID of parent IG Comment if this comment was created on another IG Comment (i.e. a reply to another comment).  \n[](#)\n",
        "line_start": 2233,
        "line_end": 2248
    },
    "148": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tOctober 5, 2021\n\nContent: \n## October 5, 2021  \nThe following changes apply to Instagram TV videos created on or after October 5, 2021. Instagram TV videos created before this date are exempt from these changes.  \n* the `media_product_type` [field](https://developers.facebook.com/docs/instagram-api/reference/ig-media/#fields) will return `FEED` instead of `IGTV`\n* the `video_title` [field](https://developers.facebook.com/docs/instagram-api/reference/ig-media/#fields) will not be returned\n* [Instagram Webhooks](https://developers.facebook.com/docs/instagram-api/guides/webhooks) `comments` and `mentions` fields are now supported  \nOn January 3, 2022, the changes above will apply to all API versions and all Instagram TV videos, regardless of video creation date. This means that starting January 3, 2022, apps using older API versions will be able to query Instagram TV videos (read support was introduced in v10.0 and limited to v10.0+).  \nStarting with v14.0, the `video_title` field will no longer be supported and the API will throw an error if the field is requested.  \n[](#)\n",
        "line_start": 2258,
        "line_end": 2266
    },
    "149": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tJune 8, 2021\n\nContent: \n## June 8, 2021  \n#### Like Counts  \n_Applies to v11.0+. Will apply to all versions September 7, 2021._  \nIf indirectly querying an [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media) through another endpoint or field expansion, the [`like_count`](https://developers.facebook.com/docs/instagram-api/reference/ig-media#fields) field will be omitted from API responses if the media owner has hidden like counts on it. Directly querying the IG Media (which can only be done by the IG Media owner) will return the actual like count, however, even if like counts have been hidden.  \n#### Time-based Pagination  \n_Applies to v11.0+_.  \nAdded [`since`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/#query-string-parameters) and [`until`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/#query-string-parameters) parameters to the [`GET /{ig-user-id}/media`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/#reading) endpoint to support [time-based pagination](https://developers.facebook.com/docs/graph-api/using-graph-api#time).  \n[](#)\n",
        "line_start": 2272,
        "line_end": 2280
    },
    "150": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tMay 26, 2021\n\nContent: \n## May 26, 2021  \nIf indirectly querying an IG Media through another endpoint, the [like\\_count](https://developers.facebook.com/docs/instagram-api/reference/ig-media#fields) field will now return `0` if the app user does not [own](https://developers.facebook.com/docs/instagram-api/overview#authorization) the media and the media owner has [hidden](https://www.facebook.com/help/instagram/113355287252104) like counts on it. Directly querying the IG Media, which can only be done by the IG Media owner, will return the actual like count, even if the owner has hidden like counts on the media.  \n[](#)\n",
        "line_start": 2290,
        "line_end": 2293
    },
    "151": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tMay 4, 2021\n\nContent: \n## May 4, 2021  \nMade a minor change to how we calculate the [`online_followers`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/insights#metrics-and-periods) metric on IG Users.  \n[](#)\n",
        "line_start": 2296,
        "line_end": 2299
    },
    "152": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tApril 14, 2021\n\nContent: \n## April 14, 2021  \nStory [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media/insights#metrics) interactions performed by users in Japan are no longer included in some `replies` metric calculations:  \n* For stories created by users in Japan, the `replies` metric will now return a value of `0`.\n* For stories created by users outside Japan, the `replies` metric will return the number of replies, but replies made by users in Japan will not be included in the calculation.  \n[](#)\n",
        "line_start": 2302,
        "line_end": 2307
    },
    "153": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tApril 12, 2021\n\nContent: \n## April 12, 2021  \nFixed a minor bug with reach [metrics](https://developers.facebook.com/docs/instagram-api/reference/ig-media/insights#metrics) on story IG Media.  \n[](#)\n",
        "line_start": 2311,
        "line_end": 2314
    },
    "154": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tApril 9, 2021\n\nContent: \n## April 9, 2021  \n* The `status` field on an [IG Container](https://developers.facebook.com/docs/instagram-api/reference/ig-container) now returns an [error subcode](https://developers.facebook.com/docs/instagram-api/reference/error-codes) if the container's `error_code` field value is `ERROR`.\n* The [IG Media Insights](https://developers.facebook.com/docs/instagram-api/reference/ig-media/insights) `video_views` metric now supports albums and will return the sum of `video_views` on all videos in the album instead of `0`.  \n[](#)\n",
        "line_start": 2317,
        "line_end": 2321
    },
    "155": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tMarch 16, 2021\n\nContent: \n## March 16, 2021  \nIGTV media is [now supported in v10.0+](https://developers.facebook.com/blog/post/2021/03/15/igtv-media-mmetrics-instagram-graph-api/). This applies to all endpoints except those used for content publishing and webhooks. To support this change, new `media_product_type` and `video_title` fields have been added to the [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media) node. IGTV media must have been shared to Instagram at the time of publish (**Post a Preview** or **Share Preview** to Feed enabled) in order to be accessible via the API.  \n[](#)\n",
        "line_start": 2324,
        "line_end": 2327
    },
    "156": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tJanuray 26, 2021\n\nContent: \n## Januray 26, 2021  \nThe Content Publishing beta has ended and all developers can now publish media on Instagram Professional accounts. Refer to the [Content Publishing](https://developers.facebook.com/docs/instagram-api/guides/content-publishing) guide for usage details.  \n[](#)\n",
        "line_start": 2330,
        "line_end": 2333
    },
    "157": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tDecember 2, 2020\n\nContent: \n## December 2, 2020  \nIn compliance with the European Union's [ePrivacy Directive](https://l.facebook.com/l.php?u=https%3A%2F%2Feur-lex.europa.eu%2Flegal-content%2FEN%2FTXT%2F%3Furi%3DCELEX%253A02002L0058-20091219&h=AT1mlokNMGdddzAmj9sv9CHu239X9UK2sG8IiznWBh4PaO9_FvLYxMueicaTxpkOap3RqL7ADupqwDH5sNSEUC0hggtryXUFh8sRaTzayAf7v1XHN93yeCjsh3v7m6krrRG8zJxDpcKa9EuLtJTX-A), messaging-related Story [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media) interactions performed by users in the European Economic Area (EEA) after December 1, 2020, will no longer be included in some metric calculations:  \n* For Stories created by users in the EEA, the [`replies`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/insights#metrics) metric will now return a value of `0`.\n* For Stories created by users outside the EEA, the [`replies`](https://developers.facebook.com/docs/instagram-api/reference/ig-media/insights#metrics) metric will return the number of replies, but replies made my users in the EEA will not be included in its calculation.  \nThis change applies to all versions.  \n[](#)\n",
        "line_start": 2336,
        "line_end": 2342
    },
    "158": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tNovember 10, 2020\n\nContent: \n## November 10, 2020  \n* **IG User Insights** \u2014 The [`follower_count`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/insights) values now align more closely with their corresponding values displayed in the Instagram app. In addition, [`follower_count`](https://developers.facebook.com/docs/instagram-api/reference/ig-user/insights) now returns a maximum of 30 days of data instead of 2 years. This change applies to v9.0+ and will apply to all versions May 9, 2021.  \n[](#)\n",
        "line_start": 2347,
        "line_end": 2350
    },
    "159": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tMay 5, 2020\n\nContent: \n## May 5, 2020  \n* **Hashtag Search** \u2014 _This change applies to v7.0+_ \u2014 You can now request the `timestamp` field on [IG Media](https://developers.facebook.com/docs/instagram-api/reference/ig-media/) returned by [`GET /{ig-hashtag-id}/top_media`](https://developers.facebook.com/docs/instagram-api/reference/ig-hashtag/top-media#reading) and [`GET /{ig-hashtag-id}/recent_media`](https://developers.facebook.com/docs/instagram-api/reference/ig-hashtag/recent-media#reading) [Hashtag Search](https://developers.facebook.com/docs/instagram-api/guides/hashtag-search) queries. For example: `GET /{ig-hashtag-id}/top_media?fields=timestamp`.  \n[](#)\n",
        "line_start": 2353,
        "line_end": 2356
    },
    "160": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tDecember 3, 2019\n\nContent: \n## December 3, 2019  \n* **Insights** \u2014 To align API behavior with Instagram app behavior, insights on [IG Users](https://developers.facebook.com/docs/instagram-api/reference/ig-user/) are now only available on IG Users that have 100 or more followers.  \n[](#)\n",
        "line_start": 2359,
        "line_end": 2362
    },
    "161": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tAugust 13, 2019\n\nContent: \n## August 13, 2019  \n* **Business Discovery** \u2014 The [Business Discovery API](https://developers.facebook.com/docs/instagram-api/reference/ig-user/business_discovery) can now be used to get data about other Instagram Creator accounts.  \n[](#)\n",
        "line_start": 2365,
        "line_end": 2368
    },
    "162": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tMay 22, 2019\n\nContent: \n## May 22, 2019  \n* **Instagram Creator Accounts** \u2014 The API now supports [Instagram Creator Accounts](https://l.facebook.com/l.php?u=https%3A%2F%2Fhelp.instagram.com%2F1158274571010880&h=AT2S36AftXAsJ8guNBtEYTbFxy-mXG7TA2jqUwRQukmO6RBYo12zprJqrWHbxrl5ht6NyEfEByOqtNTrvsVdLRNnuAJgDaxXiskVNRHOD2e3261Ps2RdoxxmGAVRAN4yd1SbLANFCPvyr6xP3-9mbA), with two exceptions. (1) The [Content Publishing API](https://developers.facebook.com/docs/instagram-api/guides/content-publishing) cannot be used by Instagram Creators, and (2) the [Business Discovery API](https://developers.facebook.com/docs/instagram-api/guides/business-discovery) can be used by Creators but can only target Businesses.  \n[](#)\n",
        "line_start": 2371,
        "line_end": 2374
    },
    "163": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tMay 9, 2019\n\nContent: \n## May 9, 2019  \n* **Webhooks** \u2014 The `story_insights` field now requires the `instagram_manage_insights` permission instead of `instagram_manage_comments`.  \n[](#)\n",
        "line_start": 2377,
        "line_end": 2380
    },
    "164": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tOctober 31, 2018\n\nContent: \n## October 31, 2018  \n* **Hashtag Search API** \u2014 You can now search for media tagged with specific hashtags by using our new [Hashtag Search API](https://developers.facebook.com/docs/instagram-api/guides/hashtag-search). `#spooky`!  \n[](#)\n",
        "line_start": 2383,
        "line_end": 2386
    },
    "165": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tOctober 23, 2018\n\nContent: \n## October 23, 2018  \n* `/{ig-media-id}/comments` edge \u2014 `GET` requests made using API version 3.1 or older will have results returned in chronological order. Requests made using version 3.2+ will have results returned in reverse chronological order.  \n[](#)\n",
        "line_start": 2389,
        "line_end": 2392
    },
    "166": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tJune 7, 2018\n\nContent: \n## June 7, 2018  \n* `/{ig-media-id}` node \u2014 You can now use field expansion to get the `permalink` field on media objects.  \n[](#)\n",
        "line_start": 2395,
        "line_end": 2398
    },
    "167": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tMay 1, 2018\n\nContent: \n## May 1, 2018  \n* **Business Verification** \u2014 In order to use the Instagram Graph API, all apps must undergo [Business Verification](https://developers.facebook.com/docs/apps/review), which is part of the App Review process and now required for all Instagram Graph API endpoints. Apps previously reviewed before May 1st, 2018, have to be reviewed again, and have until August 1st, 2018 to do so, or lose access to the API.  \n[](#)\n",
        "line_start": 2401,
        "line_end": 2404
    },
    "168": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tApril 24, 2018\n\nContent: \n## April 24, 2018  \n* `/{ig-comment-id}` node:  \n* Added a new `username` field.\n* For `GET` requests, the `user` field will not be included in responses unless the User making the request owns the Comment; instead, we will return `username` for all commenters. This also applies to queries on Comments made through other APIs, such as the Mentions API.  \n* `/{ig-media-id}` node:  \n* Added a new `username` field.\n* For `GET` requests, the `owner` field will not be included in responses unless the User making the request owns the media object; instead, we will return `username` for all commenters. This also applies to queries on media objects made through other APIs, such as the Mentions API.  \n[](#)\n",
        "line_start": 2407,
        "line_end": 2415
    },
    "169": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tApril 23, 2018\n\nContent: \n## April 23, 2018  \n* **Insights API** \u2014 Insights will now include ad activity generated through the API, Facebook ads interfaces, and Instagram's Promote feature. This affects the following metrics:  \n* `impressions`\n* `reach`  \n[](#)\n",
        "line_start": 2422,
        "line_end": 2427
    },
    "170": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tMarch 13, 2018\n\nContent: \n## March 13, 2018  \n* **Content Publishing API** \u2014 Beta partners can now use the `/{ig-user-id}/media` edge to tag [locations](https://developers.facebook.com/docs/instagram-api/guides/content-publishing#publish-with-locations) and public Instagram [users](https://developers.facebook.com/docs/instagram-api/guides/content-publishing#publish-with-tagged-users) when publishing photos.  \n[](#)\n",
        "line_start": 2432,
        "line_end": 2435
    },
    "171": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tMarch 8, 2018\n\nContent: \n## March 8, 2018  \n* **Public fields** \u2014 The `timestamp` field on the `/{ig-media-id}` node is now a public field and can be returned via field expansion.  \n[](#)\n",
        "line_start": 2438,
        "line_end": 2441
    },
    "172": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tFebruary 22, 2018\n\nContent: \n## February 22, 2018  \n* **Public fields** \u2014 The `/{ig-user-id}`, `/{ig-comment-id}`, and `/{ig-media-id}` nodes will now return all public fields when accessed through an edge via field expansion. Refer to each node's reference document to see which fields are public.  \n[](#)\n",
        "line_start": 2444,
        "line_end": 2447
    },
    "173": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Instagram-API/Instagram API Documentation.md\nParagraph location: \n\tChangelog\n\tFebruary 8, 2018\n\nContent: \n## February 8, 2018  \n* **Content Publishing API** \u2014 Beta partners can now include hashtags when publishing photos via the `/{ig-user-id}/media` edge. `#crazywildebeest` FTW!  \n[](#)  \n[](#)\n",
        "line_start": 2450,
        "line_end": 2454
    }
}