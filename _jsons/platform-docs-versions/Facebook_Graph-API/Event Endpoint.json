{
    "0": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/graph-api/reference/event/\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/graph-api/reference/event/\n",
        "line_start": 0,
        "line_end": 1
    },
    "1": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent\n\nContent: \n# Event  \nRepresents an [Event](https://www.facebook.com/help/572885262883136/).\n",
        "line_start": 1,
        "line_end": 3
    },
    "2": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent\n\tLimitations\n\nContent: \n### Limitations  \nAccess to Events on [Users](https://developers.facebook.com/docs/graph-api/reference/user) and [Pages](https://developers.facebook.com/docs/graph-api/reference/page) is only available to Facebook Marketing Partners.\n",
        "line_start": 5,
        "line_end": 7
    },
    "3": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent\n\tReading\n\tRequirements\n\nContent: \n### Requirements  \nFor Events on an [App](https://developers.facebook.com/docs/graph-api/reference/application):  \n* An App access token of an App that created the Event.  \nFor Events on a [Group](https://developers.facebook.com/docs/graph-api/reference/group):  \n* A User access token of an Admin of the Event.\n* The [Groups API](https://developers.facebook.com/docs/apps/review/feature#reference-GROUPS_ACCESS) feature.\n",
        "line_start": 13,
        "line_end": 19
    },
    "4": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent\n\tReading\n\tExample\n\nContent: \n### Example  \nHTTPPHP SDKJavaScript SDKAndroid SDKiOS SDK[Graph API Explorer](https://developers.facebook.com/tools/explorer/?method=GET&path=%7Bevent-id%7D&version=v19.0)  \nGET /v19.0/{event-id} HTTP/1.1\nHost: graph.facebook.com  \n/* PHP SDK v5.0.0 */\n/* make the API call */\ntry {\n// Returns a `Facebook\\FacebookResponse` object\n$response = $fb->get(\n'/{event-id}',\n'{access-token}'\n);\n} catch(Facebook\\Exceptions\\FacebookResponseException $e) {\necho 'Graph returned an error: ' . $e->getMessage();\nexit;\n} catch(Facebook\\Exceptions\\FacebookSDKException $e) {\necho 'Facebook SDK returned an error: ' . $e->getMessage();\nexit;\n}\n$graphNode = $response->getGraphNode();\n/* handle the result */  \n/* make the API call */\nFB.api(\n\"/{event-id}\",\nfunction (response) {\nif (response && !response.error) {\n/* handle the result */\n}\n}\n);  \n/* make the API call */\nnew GraphRequest(\nAccessToken.getCurrentAccessToken(),\n\"/{event-id}\",\nnull,\nHttpMethod.GET,\nnew GraphRequest.Callback() {\npublic void onCompleted(GraphResponse response) {\n/* handle the result */\n}\n}\n).executeAsync();  \n/* make the API call */\nFBSDKGraphRequest *request = [[FBSDKGraphRequest alloc]\ninitWithGraphPath:@\"/{event-id}\"\nparameters:params\nHTTPMethod:@\"GET\"];\n[request startWithCompletionHandler:^(FBSDKGraphRequestConnection *connection,\nid result,\nNSError *error) {\n// Handle the result\n}];  \nIf you want to learn how to use the Graph API, read our [Using Graph API guide](https://developers.facebook.com/docs/graph-api/using-graph-api/).\n",
        "line_start": 24,
        "line_end": 77
    },
    "5": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent\n\tReading\n\tParameters\n\nContent: \n### Parameters  \nThis endpoint doesn't have any parameters.\n",
        "line_start": 85,
        "line_end": 87
    },
    "6": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent\n\tReading\n\tFields\n\nContent: \n### Fields  \n| Field | Description |\n| --- | --- |\n| `id`<br><br>numeric string | The event ID |\n| `attending_count`[](#)<br><br>int32 | Number of people attending the event |\n| `can_guests_invite`<br><br>bool | Can guests invite friends. Requires an access token of an Admin of the Event |\n| `category`[](#)<br><br>enum {CLASSIC\\_LITERATURE, COMEDY, CRAFTS, DANCE, DRINKS, FITNESS\\_AND\\_WORKOUTS, FOODS, GAMES, GARDENING, HEALTH\\_AND\\_MEDICAL, HEALTHY\\_LIVING\\_AND\\_SELF\\_CARE, HOME\\_AND\\_GARDEN, MUSIC\\_AND\\_AUDIO, PARTIES, PROFESSIONAL\\_NETWORKING, RELIGIONS, SHOPPING\\_EVENT, SOCIAL\\_ISSUES, SPORTS, THEATER, TV\\_AND\\_MOVIES, VISUAL\\_ARTS} | The category of the event |\n| `cover`<br><br>[CoverPhoto](https://developers.facebook.com/docs/graph-api/reference/cover-photo/) | Cover picture |\n| `created_time`<br><br>datetime | created\\_time |\n| `declined_count`[](#)<br><br>int32 | Number of people who declined the event |\n| `description`<br><br>string | Long-form description<br><br>[Default](https://developers.facebook.com/docs/graph-api/using-graph-api/#fields) |\n| `discount_code_enabled`<br><br>bool | Is discount code enabled for this event |\n| `end_time`<br><br>string | End time, if one has been set<br><br>[Default](https://developers.facebook.com/docs/graph-api/using-graph-api/#fields) |\n| `event_times`<br><br>list<ChildEvent> | Array of times of a multi-instance event<br><br>[Default](https://developers.facebook.com/docs/graph-api/using-graph-api/#fields) |\n| `guest_list_enabled`<br><br>bool | Can see guest list. Requires an access token of an Admin of the Event |\n| `interested_count`[](#)<br><br>int32 | Number of people interested in the event |\n| `is_canceled`<br><br>bool | Whether or not the event has been marked as canceled |\n| `is_draft`<br><br>bool | Whether the event is in draft mode or published. Requires an access token of an Admin of the Event |\n| `is_online`<br><br>bool | Whether the event is online or not. Required to pass the 'address' (city name) parameter for online events. |\n| `is_page_owned`<br><br>bool | Whether the event is created by page or not |\n| `maybe_count`[](#)<br><br>int32 | Number of people who maybe going to the event |\n| `name`<br><br>string | Event name<br><br>[Default](https://developers.facebook.com/docs/graph-api/using-graph-api/#fields) |\n| `noreply_count`[](#)<br><br>int32 | Number of people who did not reply to the event |\n| `online_event_format`<br><br>enum {messenger\\_room, third\\_party, fb\\_live, other, none} | Type of online event - Live, Link or Other |\n| `online_event_third_party_url`<br><br>string | Third party streaming url associated with Link events |\n| `owner` | The profile that created the event |\n| `place`[](#)<br><br>[Place](https://developers.facebook.com/docs/graph-api/reference/place/) | Event Place information<br><br>[Default](https://developers.facebook.com/docs/graph-api/using-graph-api/#fields) |\n| `scheduled_publish_time`<br><br>string | Time when event is scheduled to be published |\n| `start_time`<br><br>string | Start time<br><br>[Default](https://developers.facebook.com/docs/graph-api/using-graph-api/#fields) |\n| `ticket_uri`<br><br>string | The link users can visit to buy a ticket to this event |\n| `ticket_uri_start_sales_time`<br><br>string | Time when tickets go on sale |\n| `ticketing_privacy_uri`<br><br>string | URI to seller's privacy policy for ticket purchases |\n| `ticketing_terms_uri`<br><br>string | URI to seller's terms of service for ticket purchases |\n| `timezone`<br><br>enum | Timezone |\n| `type`[](#)<br><br>enum {private, public, group, community, friends, work\\_company} | The type of the event |\n| `updated_time`<br><br>datetime | Last update time (ISO 8601 formatted) |\n",
        "line_start": 89,
        "line_end": 125
    },
    "7": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent\n\tReading\n\tEdges\n\nContent: \n### Edges  \n| Edge | Description |\n| --- | --- |\n| [`roles`](https://developers.facebook.com/docs/graph-api/reference/event/roles/)[](#) | List of profiles having roles on the event. Requires an access token of an Admin of the Event |\n| [`ticket_tiers`](https://developers.facebook.com/docs/graph-api/reference/event/ticket_tiers/)[](#) | List of ticket tiers. Requires an access token of an Admin of the Event |\n",
        "line_start": 127,
        "line_end": 132
    },
    "8": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent\n\tReading\n\tError Codes\n\nContent: \n### Error Codes  \n| Error | Description |\n| --- | --- |\n| 100 | Invalid parameter |\n| 200 | Permissions error |\n| 458 | The session is invalid because the application is not installed |\n| 190 | Invalid OAuth 2.0 Access Token |\n",
        "line_start": 134,
        "line_end": 141
    },
    "9": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent\n\tCreating\n\nContent: \n## Creating  \nYou can't perform this operation on this endpoint.\n",
        "line_start": 143,
        "line_end": 145
    },
    "10": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent\n\tUpdating\n\nContent: \n## Updating  \nYou can't perform this operation on this endpoint.\n",
        "line_start": 147,
        "line_end": 149
    },
    "11": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent\n\tDeleting\n\nContent: \n## Deleting  \nYou can't perform this operation on this endpoint.  \n![](https://www.facebook.com/tr?id=675141479195042&ev=PageView&noscript=1)  \n![](https://www.facebook.com/tr?id=574561515946252&ev=PageView&noscript=1)  \n![](https://www.facebook.com/tr?id=1754628768090156&ev=PageView&noscript=1)\n",
        "line_start": 151,
        "line_end": 156
    },
    "12": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/graph-api/reference/event/live_videos/\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/graph-api/reference/event/live_videos/\n",
        "line_start": 161,
        "line_end": 162
    },
    "13": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Live Videos\n\tReading\n\nContent: \n# Event Live Videos  \n## Reading  \nSELF\\_EXPLANATORY\n",
        "line_start": 162,
        "line_end": 165
    },
    "14": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Live Videos\n\tReading\n\tExample\n\nContent: \n### Example  \nHTTPPHP SDKJavaScript SDKAndroid SDKiOS SDK[Graph API Explorer](https://developers.facebook.com/tools/explorer/?method=GET&path=%7Bevent-id%7D%2Flive_videos&version=v19.0)  \nGET /v19.0/{event-id}/live_videos HTTP/1.1\nHost: graph.facebook.com  \n/* PHP SDK v5.0.0 */\n/* make the API call */\ntry {\n// Returns a `Facebook\\FacebookResponse` object\n$response = $fb->get(\n'/{event-id}/live_videos',\n'{access-token}'\n);\n} catch(Facebook\\Exceptions\\FacebookResponseException $e) {\necho 'Graph returned an error: ' . $e->getMessage();\nexit;\n} catch(Facebook\\Exceptions\\FacebookSDKException $e) {\necho 'Facebook SDK returned an error: ' . $e->getMessage();\nexit;\n}\n$graphNode = $response->getGraphNode();\n/* handle the result */  \n/* make the API call */\nFB.api(\n\"/{event-id}/live_videos\",\nfunction (response) {\nif (response && !response.error) {\n/* handle the result */\n}\n}\n);  \n/* make the API call */\nnew GraphRequest(\nAccessToken.getCurrentAccessToken(),\n\"/{event-id}/live_videos\",\nnull,\nHttpMethod.GET,\nnew GraphRequest.Callback() {\npublic void onCompleted(GraphResponse response) {\n/* handle the result */\n}\n}\n).executeAsync();  \n/* make the API call */\nFBSDKGraphRequest *request = [[FBSDKGraphRequest alloc]\ninitWithGraphPath:@\"/{event-id}/live_videos\"\nparameters:params\nHTTPMethod:@\"GET\"];\n[request startWithCompletionHandler:^(FBSDKGraphRequestConnection *connection,\nid result,\nNSError *error) {\n// Handle the result\n}];  \nIf you want to learn how to use the Graph API, read our [Using Graph API guide](https://developers.facebook.com/docs/graph-api/using-graph-api/).\n",
        "line_start": 24,
        "line_end": 77
    },
    "15": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Live Videos\n\tReading\n\tParameters\n\nContent: \n### Parameters  \nThis endpoint doesn't have any parameters.\n",
        "line_start": 85,
        "line_end": 87
    },
    "16": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Live Videos\n\tReading\n\tFields\n\nContent: \n### Fields  \nReading from this edge will return a JSON formatted result:  \n{\n\"`data`\": \\[\\],\n\"`paging`\": {}\n}  \n#### `data`  \nA list of Null nodes.  \n#### `paging`  \nFor more details about pagination, see the [Graph API guide](https://developers.facebook.com/docs/graph-api/using-graph-api/#paging).\n",
        "line_start": 89,
        "line_end": 99
    },
    "17": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Live Videos\n\tReading\n\tError Codes\n\nContent: \n### Error Codes  \n| Error | Description |\n| --- | --- |\n| 200 | Permissions error |\n",
        "line_start": 134,
        "line_end": 138
    },
    "18": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Live Videos\n\tCreating\n\nContent: \n## Creating  \nYou can make a POST request to `live_videos` edge from the following paths:  \n* [`/{event_id}/live_videos`](https://developers.facebook.com/docs/graph-api/reference/event/live_videos/)  \nWhen posting to this edge, a\u00a0[LiveVideo](https://developers.facebook.com/docs/graph-api/reference/live-video/) will be created.\n",
        "line_start": 143,
        "line_end": 147
    },
    "19": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Live Videos\n\tCreating\n\tParameters\n\nContent: \n### Parameters  \n| Parameter | Description |\n| --- | --- |\n| `content_tags`<br><br>list<numeric string> | Tags that describe the contents of the video. Use search endpoint with `type=adinterest` to get possible IDs.<br><br>                                    Example:<br>                                    ~~~~<br>                                    /search?type=adinterest&q=couscous<br>                                    ~~~~ |\n| `description`<br><br>UTF-8 string | The description of the live video.<br><br>Supports Emoji |\n| `enable_backup_ingest`<br><br>boolean | Set this to true to enable a backup ingest url. stop\\_on\\_delete\\_stream defaults to false when set |\n| `encoding_settings`<br><br>string | Identifier of the encoding settings group the broadcaster is using for this stream. This parameter is currently only in use for live-360 broadcasts. The value to be passed to this parameter is the value of the `identifier` key of the encoding settings preset. Encoding presets can be found by querying the `/broadcaster_encoding_settings` Graph API endpoint (`GET` query). |\n| `event_params`<br><br>Live Video Event Parameter | Parameters specific to Live Online Event broadcast. If `start_time` (unix timecode) is set, LOE's start time will be updated. Also, `cover` (url) uploads an image to use as the cover photo for the event.<br><br>Example: { start\\_time: 1641013200, cover: 'https://your.url/image.jpg', } |\n| `fisheye_video_cropped`<br><br>boolean | Whether the single fisheye video is cropped or not |\n| `front_z_rotation`<br><br>float | The front z rotation in degrees on the single fisheye video |\n| `is_spherical`<br><br>boolean | Flag that denotes the broadcast is a 360 live broadcast. |\n| `original_fov`<br><br>int64 | Original field of view of the camera |\n| `privacy`<br><br>Privacy Parameter | Privacy for this live video. |\n| `projection`<br><br>enum {EQUIRECTANGULAR, CUBEMAP, HALF\\_EQUIRECTANGULAR} | Flag that denotes expected projection for 360 live streams. The default value is EQUIRECTANGULAR. |\n| `published`<br><br>boolean | Set this to false to preview the stream before going live.<br><br>                                    Deprecated. Prefer setting the status instead. |\n| `schedule_custom_profile_image`<br><br>image | Custom image that will appear in the scheduled live story and lobby. |\n| `spatial_audio_format`<br><br>enum {ambiX\\_4} | Denotes the format of the spatial audio stream. When unspecified audio is presumed to be mono or stereo. |\n| `status`<br><br>enum {UNPUBLISHED, LIVE\\_NOW, SCHEDULED\\_UNPUBLISHED, SCHEDULED\\_LIVE, SCHEDULED\\_CANCELED} | The status of the broadcast. A `LIVE_NOW` broadcast is currently live and visible to users. An `UNPUBLISHED` broadcast is in preparation; it's not visible to other users, and it may be automatically deleted after several hours in this state. (Consider using the `SCHEDULED` states to create a planned, future broadcast.) |\n| `stereoscopic_mode`<br><br>enum {MONO, LEFT\\_RIGHT, TOP\\_BOTTOM} | Set this parameter to the stereoscopic mode for this video. |\n| `stop_on_delete_stream`<br><br>boolean | Set this to true if stream should be stopped when deleteStream RTMP command received. |\n| `title`<br><br>UTF-8 string | The title of the live video. Maximum 254 characters.<br><br>Supports Emoji |\n",
        "line_start": 85,
        "line_end": 106
    },
    "20": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Live Videos\n\tCreating\n\tReturn Type\n\nContent: \n### Return Type  \nThis endpoint supports [read-after-write](https://developers.facebook.com/docs/graph-api/advanced/#read-after-write) and will read the node represented by `id` in the return type.  \nStruct {  \n`id`: numeric string,  \n`stream_url`: string,  \n`secure_stream_url`: string,  \n`stream_secondary_urls`: List \\[  \nstring  \n\\],  \n`secure_stream_secondary_urls`: List \\[  \nstring  \n\\],  \n`dash_ingest_url`: string,  \n`dash_ingest_secondary_urls`: List \\[  \nstring  \n\\],  \n`event_id`: numeric string,  \n}\n",
        "line_start": 287,
        "line_end": 305
    },
    "21": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Live Videos\n\tCreating\n\tError Codes\n\nContent: \n### Error Codes  \n| Error | Description |\n| --- | --- |\n| 6000 | There was a problem uploading your video file. Please try again with another file. |\n",
        "line_start": 134,
        "line_end": 138
    },
    "22": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Live Videos\n\tUpdating\n\nContent: \n## Updating  \nYou can't perform this operation on this endpoint.\n",
        "line_start": 147,
        "line_end": 149
    },
    "23": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Live Videos\n\tDeleting\n\nContent: \n## Deleting  \nYou can't perform this operation on this endpoint.  \n![](https://www.facebook.com/tr?id=675141479195042&ev=PageView&noscript=1)  \n![](https://www.facebook.com/tr?id=574561515946252&ev=PageView&noscript=1)  \n![](https://www.facebook.com/tr?id=1754628768090156&ev=PageView&noscript=1)\n",
        "line_start": 151,
        "line_end": 156
    },
    "24": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/graph-api/reference/v18.0/event/photos\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/graph-api/reference/v18.0/event/photos\nThis document refers to an outdated version of Graph API.\u00a0Please [use the latest version.](https://developers.facebook.com/docs/graph-api/reference/v19.0/event/photos)\n",
        "line_start": 343,
        "line_end": 345
    },
    "25": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tGraph API Reference [`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/photos`\n\nContent: \n# Graph API Reference [`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/photos`  \nAll the photos uploaded to an event's wall.\n",
        "line_start": 346,
        "line_end": 348
    },
    "26": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tGraph API Reference [`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/photos`\n\tReading\n\nContent: \n## Reading  \nHTTPPHP SDKJavaScript SDKAndroid SDKiOS SDK[Graph API Explorer](https://developers.facebook.com/tools/explorer/?method=GET&path=%7Bevent-id%7D%2Fphotos&version=v19.0)  \nGET /v19.0/{event-id}/photos HTTP/1.1\nHost: graph.facebook.com  \n/* PHP SDK v5.0.0 */\n/* make the API call */\ntry {\n// Returns a `Facebook\\FacebookResponse` object\n$response = $fb->get(\n'/{event-id}/photos',\n'{access-token}'\n);\n} catch(Facebook\\Exceptions\\FacebookResponseException $e) {\necho 'Graph returned an error: ' . $e->getMessage();\nexit;\n} catch(Facebook\\Exceptions\\FacebookSDKException $e) {\necho 'Facebook SDK returned an error: ' . $e->getMessage();\nexit;\n}\n$graphNode = $response->getGraphNode();\n/* handle the result */  \n/* make the API call */\nFB.api(\n\"/{event-id}/photos\",\nfunction (response) {\nif (response && !response.error) {\n/* handle the result */\n}\n}\n);  \n/* make the API call */\nnew GraphRequest(\nAccessToken.getCurrentAccessToken(),\n\"/{event-id}/photos\",\nnull,\nHttpMethod.GET,\nnew GraphRequest.Callback() {\npublic void onCompleted(GraphResponse response) {\n/* handle the result */\n}\n}\n).executeAsync();  \n/* make the API call */\nFBSDKGraphRequest *request = [[FBSDKGraphRequest alloc]\ninitWithGraphPath:@\"/{event-id}/photos\"\nparameters:params\nHTTPMethod:@\"GET\"];\n[request startWithCompletionHandler:^(FBSDKGraphRequestConnection *connection,\nid result,\nNSError *error) {\n// Handle the result\n}];\n",
        "line_start": 9,
        "line_end": 61
    },
    "27": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tGraph API Reference [`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/photos`\n\tReading\n\tPermissions\n\nContent: \n### Permissions  \n* A user access token is required.\n",
        "line_start": 409,
        "line_end": 411
    },
    "28": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tGraph API Reference [`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/photos`\n\tReading\n\tFields\n\nContent: \n### Fields  \nAn array of [Photo objects](https://developers.facebook.com/docs/graph-api/reference/photo).\n",
        "line_start": 89,
        "line_end": 91
    },
    "29": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tGraph API Reference [`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/photos`\n\tPublishing\n\nContent: \n## Publishing  \nThere are two separate ways of publishing photos to Facebook:  \n1. Capture a photo via file upload as `multipart/form-data` then use the `source` parameter:  \nHTTPPHP SDKJavaScript SDKAndroid SDKiOS SDK  \nPOST /v19.0/{event-id}/photos HTTP/1.1\nHost: graph.facebook.com  \nsource=%7Bimage-data%7D  \n/* PHP SDK v5.0.0 */\n/* make the API call */\ntry {\n// Returns a `Facebook\\FacebookResponse` object\n$response = $fb->post(\n'/{event-id}/photos',\narray (\n'source' => '{image-data}',\n),\n'{access-token}'\n);\n} catch(Facebook\\Exceptions\\FacebookResponseException $e) {\necho 'Graph returned an error: ' . $e->getMessage();\nexit;\n} catch(Facebook\\Exceptions\\FacebookSDKException $e) {\necho 'Facebook SDK returned an error: ' . $e->getMessage();\nexit;\n}\n$graphNode = $response->getGraphNode();\n/* handle the result */  \n/* make the API call */\nFB.api(\n\"/{event-id}/photos\",\n\"POST\",\n{\n\"source\": \"{image-data}\"\n},\nfunction (response) {\nif (response && !response.error) {\n/* handle the result */\n}\n}\n);  \nBundle params = new Bundle();\nparams.putString(\"source\", \"{image-data}\");\n/* make the API call */\nnew GraphRequest(\nAccessToken.getCurrentAccessToken(),\n\"/{event-id}/photos\",\nparams,\nHttpMethod.POST,\nnew GraphRequest.Callback() {\npublic void onCompleted(GraphResponse response) {\n/* handle the result */\n}\n}\n).executeAsync();  \nNSDictionary *params = @{\n@\"source\": @\"{image-data}\",\n};\n/* make the API call */\nFBSDKGraphRequest *request = [[FBSDKGraphRequest alloc]\ninitWithGraphPath:@\"/{event-id}/photos\"\nparameters:params\nHTTPMethod:@\"POST\"];\n[request startWithCompletionHandler:^(FBSDKGraphRequestConnection *connection,\nid result,\nNSError *error) {\n// Handle the result\n}];  \n1. Use a photo that is already on the internet by publishing using the `url` parameter:  \nHTTPPHP SDKJavaScript SDKAndroid SDKiOS SDK  \nPOST /v19.0/{event-id}/photos HTTP/1.1\nHost: graph.facebook.com  \nurl=%7Bimage-url%7D  \n/* PHP SDK v5.0.0 */\n/* make the API call */\ntry {\n// Returns a `Facebook\\FacebookResponse` object\n$response = $fb->post(\n'/{event-id}/photos',\narray (\n'url' => '{image-url}',\n),\n'{access-token}'\n);\n} catch(Facebook\\Exceptions\\FacebookResponseException $e) {\necho 'Graph returned an error: ' . $e->getMessage();\nexit;\n} catch(Facebook\\Exceptions\\FacebookSDKException $e) {\necho 'Facebook SDK returned an error: ' . $e->getMessage();\nexit;\n}\n$graphNode = $response->getGraphNode();\n/* handle the result */  \n/* make the API call */\nFB.api(\n\"/{event-id}/photos\",\n\"POST\",\n{\n\"url\": \"{image-url}\"\n},\nfunction (response) {\nif (response && !response.error) {\n/* handle the result */\n}\n}\n);  \nBundle params = new Bundle();\nparams.putString(\"url\", \"{image-url}\");\n/* make the API call */\nnew GraphRequest(\nAccessToken.getCurrentAccessToken(),\n\"/{event-id}/photos\",\nparams,\nHttpMethod.POST,\nnew GraphRequest.Callback() {\npublic void onCompleted(GraphResponse response) {\n/* handle the result */\n}\n}\n).executeAsync();  \nNSDictionary *params = @{\n@\"url\": @\"{image-url}\",\n};\n/* make the API call */\nFBSDKGraphRequest *request = [[FBSDKGraphRequest alloc]\ninitWithGraphPath:@\"/{event-id}/photos\"\nparameters:params\nHTTPMethod:@\"POST\"];\n[request startWithCompletionHandler:^(FBSDKGraphRequestConnection *connection,\nid result,\nNSError *error) {\n// Handle the result\n}];\n",
        "line_start": 418,
        "line_end": 550
    },
    "30": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tGraph API Reference [`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/photos`\n\tPublishing\n\tPermissions\n\nContent: \n### Permissions  \n* A user access token with `publish_actions` permission can be used to publish new photos.\n",
        "line_start": 409,
        "line_end": 411
    },
    "31": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tGraph API Reference [`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/photos`\n\tPublishing\n\tFields\n\nContent: \n### Fields  \n| Name | Description | Type |\n| --- | --- | --- |\n| `source` | The photo, [encoded as form data](https://l.facebook.com/l.php?u=https%3A%2F%2Fwww.w3.org%2FTR%2Fhtml401%2Finteract%2Fforms.html%23h-17.13.4.2&h=AT39v8aoonxHWXVtajg_3Anlc2X_Ti0iWzZ6ln8pknZ46iAXVT_8RYSwPbCNUAdc4Dm8-EO_pQzyii4dXJghCKqzIhdCBkfTRvHzK1rIlQr_aNWS51fYv5jqoFvqSN5yTw3czsSFPMmD271h). Either this or `url` field is required, but both should not be used together. | [`multipart/form-data`](https://l.facebook.com/l.php?u=https%3A%2F%2Fwww.w3.org%2FTR%2Fhtml401%2Finteract%2Fforms.html%23h-17.13.4.2&h=AT1QWEY_GpyYtBvx2-rijZ_FRlrXW-5SsJeMtzwDEWS-q8v1Eoml9AGA5CQ-2HnfCRZ_kyntXz_Zt_elsE8I3-qEhBZ86bI8KSyFmupQydzw3fSDoWrsTwzG-0TXmpBsFR71s16SGsnvd4B4) |\n| `url` | The URL of a photo that is already uploaded to the internet. Either this or `source` is required, but both should not be used together. | `string` |\n| `message` | The description of the photo, used as the accompanying status message in any feed story. | `string` |\n",
        "line_start": 89,
        "line_end": 95
    },
    "32": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tGraph API Reference [`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/photos`\n\tPublishing\n\tResponse\n\nContent: \n### Response  \nIf successful:  \n| Name | Description | Type |\n| --- | --- | --- |\n| `id` | The newly created photo ID | `string` |\n",
        "line_start": 581,
        "line_end": 586
    },
    "33": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tGraph API Reference [`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/photos`\n\tDeleting\n\nContent: \n## Deleting  \nYou can't delete using this edge, however you can [delete each photo using the /{photo-id} node](https://developers.facebook.com/docs/reference/api/photo/).\n",
        "line_start": 151,
        "line_end": 153
    },
    "34": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tGraph API Reference [`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/photos`\n\tUpdating\n\nContent: \n## Updating  \nYou can't update using this edge.  \n![](https://www.facebook.com/tr?id=675141479195042&ev=PageView&noscript=1)  \n![](https://www.facebook.com/tr?id=574561515946252&ev=PageView&noscript=1)  \n![](https://www.facebook.com/tr?id=1754628768090156&ev=PageView&noscript=1)\n",
        "line_start": 147,
        "line_end": 152
    },
    "35": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/graph-api/reference/v18.0/event/picture\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/graph-api/reference/v18.0/event/picture\nThis document refers to an outdated version of Graph API.\u00a0Please [use the latest version.](https://developers.facebook.com/docs/graph-api/reference/v19.0/event/picture)\n",
        "line_start": 603,
        "line_end": 605
    },
    "36": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\t[`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/picture`\n\nContent: \n# [`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/picture`  \nAn event's cover photo with profile picture dimensions.\n",
        "line_start": 606,
        "line_end": 608
    },
    "37": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\t[`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/picture`\n\tReading\n\nContent: \n## Reading  \nHTTPPHP SDKJavaScript SDKAndroid SDKiOS SDK[Graph API Explorer](https://developers.facebook.com/tools/explorer/?method=GET&path=%7Bevent-id%7D%2Fpicture&version=v19.0)  \nGET /v19.0/{event-id}/picture HTTP/1.1\nHost: graph.facebook.com  \n/* PHP SDK v5.0.0 */\n/* make the API call */\ntry {\n// Returns a `Facebook\\FacebookResponse` object\n$response = $fb->get(\n'/{event-id}/picture',\n'{access-token}'\n);\n} catch(Facebook\\Exceptions\\FacebookResponseException $e) {\necho 'Graph returned an error: ' . $e->getMessage();\nexit;\n} catch(Facebook\\Exceptions\\FacebookSDKException $e) {\necho 'Facebook SDK returned an error: ' . $e->getMessage();\nexit;\n}\n$graphNode = $response->getGraphNode();\n/* handle the result */  \n/* make the API call */\nFB.api(\n\"/{event-id}/picture\",\nfunction (response) {\nif (response && !response.error) {\n/* handle the result */\n}\n}\n);  \n/* make the API call */\nnew GraphRequest(\nAccessToken.getCurrentAccessToken(),\n\"/{event-id}/picture\",\nnull,\nHttpMethod.GET,\nnew GraphRequest.Callback() {\npublic void onCompleted(GraphResponse response) {\n/* handle the result */\n}\n}\n).executeAsync();  \n/* make the API call */\nFBSDKGraphRequest *request = [[FBSDKGraphRequest alloc]\ninitWithGraphPath:@\"/{event-id}/picture\"\nparameters:params\nHTTPMethod:@\"GET\"];\n[request startWithCompletionHandler:^(FBSDKGraphRequestConnection *connection,\nid result,\nNSError *error) {\n// Handle the result\n}];\n",
        "line_start": 9,
        "line_end": 61
    },
    "38": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\t[`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/picture`\n\tReading\n\tPermissions\n\nContent: \n### Permissions  \n* A user access token is required to retrieve the cover photo of any events visible to that person.  \n#### Modifiers  \n| Name | Description | Type |\n| --- | --- | --- |\n| `redirect` | The `picture` edge is a special case, as when requested, it will by default return the picture itself and not a JSON response. To return a JSON response, you need to set `redirect=false` as a request attribute. This is how to return the [fields below](#readfields). | `bool` |\n| `type` | You can use this to get a pre-specified size of picture. | `enum{small, normal, large, square}` |  \nHTTPPHP SDKJavaScript SDKAndroid SDKiOS SDK  \nGET /v19.0/{event-id}/picture?redirect=0&type=normal HTTP/1.1\nHost: graph.facebook.com  \n/* PHP SDK v5.0.0 */\n/* make the API call */\ntry {\n// Returns a `Facebook\\FacebookResponse` object\n$response = $fb->get(\n'/{event-id}/picture?redirect=0&type=normal',\n'{access-token}'\n);\n} catch(Facebook\\Exceptions\\FacebookResponseException $e) {\necho 'Graph returned an error: ' . $e->getMessage();\nexit;\n} catch(Facebook\\Exceptions\\FacebookSDKException $e) {\necho 'Facebook SDK returned an error: ' . $e->getMessage();\nexit;\n}\n$graphNode = $response->getGraphNode();\n/* handle the result */  \n/* make the API call */\nFB.api(\n\"/{event-id}/picture\",\n{\n\"redirect\": false,\n\"type\": \"normal\"\n},\nfunction (response) {\nif (response && !response.error) {\n/* handle the result */\n}\n}\n);  \nBundle params = new Bundle();\nparams.putBoolean(\"redirect\", false);\nparams.putString(\"type\", \"normal\");\n/* make the API call */\nnew GraphRequest(\nAccessToken.getCurrentAccessToken(),\n\"/{event-id}/picture\",\nparams,\nHttpMethod.GET,\nnew GraphRequest.Callback() {\npublic void onCompleted(GraphResponse response) {\n/* handle the result */\n}\n}\n).executeAsync();  \nNSDictionary *params = @{\n@\"redirect\": @NO,\n@\"type\": @\"normal\",\n};\n/* make the API call */\nFBSDKGraphRequest *request = [[FBSDKGraphRequest alloc]\ninitWithGraphPath:@\"/{event-id}/picture\"\nparameters:params\nHTTPMethod:@\"GET\"];\n[request startWithCompletionHandler:^(FBSDKGraphRequestConnection *connection,\nid result,\nNSError *error) {\n// Handle the result\n}];\n",
        "line_start": 409,
        "line_end": 478
    },
    "39": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\t[`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/picture`\n\tReading\n\tFields\n\nContent: \n### Fields  \n| Parameter | Description | Type |\n| --- | --- | --- |\n| `url` | The URL of the profile photo. Only returned when `redirect` is `false`. | `string` |\n| `is_silhouette` | Indicates if the photo hasn't been customised and is the default icon. Only returned when `redirect` is `false`. | `boolean` |\n",
        "line_start": 89,
        "line_end": 94
    },
    "40": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\t[`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/picture`\n\tPublishing\n\nContent: \n## Publishing  \nYou can't publish an event cover photo using the Graph API.\n",
        "line_start": 418,
        "line_end": 420
    },
    "41": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\t[`/{event-id}`](https://developers.facebook.com/docs/graph-api/reference/event/)`/picture`\n\tDeleting\n\nContent: \n## Deleting  \nYou can't delete an event cover photo using the Graph API.  \n![](https://www.facebook.com/tr?id=675141479195042&ev=PageView&noscript=1)  \n![](https://www.facebook.com/tr?id=574561515946252&ev=PageView&noscript=1)  \n![](https://www.facebook.com/tr?id=1754628768090156&ev=PageView&noscript=1)\n",
        "line_start": 151,
        "line_end": 156
    },
    "42": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/graph-api/reference/event/roles/\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/graph-api/reference/event/roles/\n",
        "line_start": 770,
        "line_end": 771
    },
    "43": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Roles\n\tReading\n\tExample\n\nContent: \n### Example  \nHTTPPHP SDKJavaScript SDKAndroid SDKiOS SDK[Graph API Explorer](https://developers.facebook.com/tools/explorer/?method=GET&path=%7Bevent-id%7D%2Froles&version=v19.0)  \nGET /v19.0/{event-id}/roles HTTP/1.1\nHost: graph.facebook.com  \n/* PHP SDK v5.0.0 */\n/* make the API call */\ntry {\n// Returns a `Facebook\\FacebookResponse` object\n$response = $fb->get(\n'/{event-id}/roles',\n'{access-token}'\n);\n} catch(Facebook\\Exceptions\\FacebookResponseException $e) {\necho 'Graph returned an error: ' . $e->getMessage();\nexit;\n} catch(Facebook\\Exceptions\\FacebookSDKException $e) {\necho 'Facebook SDK returned an error: ' . $e->getMessage();\nexit;\n}\n$graphNode = $response->getGraphNode();\n/* handle the result */  \n/* make the API call */\nFB.api(\n\"/{event-id}/roles\",\nfunction (response) {\nif (response && !response.error) {\n/* handle the result */\n}\n}\n);  \n/* make the API call */\nnew GraphRequest(\nAccessToken.getCurrentAccessToken(),\n\"/{event-id}/roles\",\nnull,\nHttpMethod.GET,\nnew GraphRequest.Callback() {\npublic void onCompleted(GraphResponse response) {\n/* handle the result */\n}\n}\n).executeAsync();  \n/* make the API call */\nFBSDKGraphRequest *request = [[FBSDKGraphRequest alloc]\ninitWithGraphPath:@\"/{event-id}/roles\"\nparameters:params\nHTTPMethod:@\"GET\"];\n[request startWithCompletionHandler:^(FBSDKGraphRequestConnection *connection,\nid result,\nNSError *error) {\n// Handle the result\n}];  \nIf you want to learn how to use the Graph API, read our [Using Graph API guide](https://developers.facebook.com/docs/graph-api/using-graph-api/).\n",
        "line_start": 24,
        "line_end": 77
    },
    "44": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Roles\n\tReading\n\tParameters\n\nContent: \n### Parameters  \nThis endpoint doesn't have any parameters.\n",
        "line_start": 85,
        "line_end": 87
    },
    "45": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Roles\n\tReading\n\tFields\n\nContent: \n### Fields  \nReading from this edge will return a JSON formatted result:  \n{\n\"`data`\": \\[\\],\n\"`paging`\": {}\n}  \n#### `data`  \nA list of [Profile](https://developers.facebook.com/docs/graph-api/reference/profile/) nodes.  \nThe following fields will be added to each node that is returned:  \n| Field | Description |\n| --- | --- |\n| `role_type`<br><br>enum | The type of the role of the profile on the event<br><br>[Default](https://developers.facebook.com/docs/graph-api/using-graph-api/#fields) |  \n#### `paging`  \nFor more details about pagination, see the [Graph API guide](https://developers.facebook.com/docs/graph-api/using-graph-api/#paging).\n",
        "line_start": 89,
        "line_end": 103
    },
    "46": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Roles\n\tReading\n\tError Codes\n\nContent: \n### Error Codes  \n| Error | Description |\n| --- | --- |\n| 100 | Invalid parameter |\n",
        "line_start": 134,
        "line_end": 138
    },
    "47": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Roles\n\tCreating\n\nContent: \n## Creating  \nYou can't perform this operation on this endpoint.\n",
        "line_start": 143,
        "line_end": 145
    },
    "48": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Roles\n\tUpdating\n\nContent: \n## Updating  \nYou can't perform this operation on this endpoint.\n",
        "line_start": 147,
        "line_end": 149
    },
    "49": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Roles\n\tDeleting\n\nContent: \n## Deleting  \nYou can't perform this operation on this endpoint.  \n![](https://www.facebook.com/tr?id=675141479195042&ev=PageView&noscript=1)  \n![](https://www.facebook.com/tr?id=574561515946252&ev=PageView&noscript=1)  \n![](https://www.facebook.com/tr?id=1754628768090156&ev=PageView&noscript=1)\n",
        "line_start": 151,
        "line_end": 156
    },
    "50": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tResource URL: https://developers.facebook.com/docs/graph-api/reference/event/ticket_tiers/\n\nContent: \n# Resource URL: https://developers.facebook.com/docs/graph-api/reference/event/ticket_tiers/\n",
        "line_start": 889,
        "line_end": 890
    },
    "51": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Ticket Tiers\n\tReading\n\nContent: \n# Event Ticket Tiers  \n## Reading  \nEventTicketTiers  \nStarting September 14, 2021, this endpoint will throw an error for version 12.0+ calls made by apps that lack the endpoint's required permissions. This change will apply to all versions on December 13, 2021.\n",
        "line_start": 890,
        "line_end": 894
    },
    "52": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Ticket Tiers\n\tReading\n\tExample\n\nContent: \n### Example  \nHTTPPHP SDKJavaScript SDKAndroid SDKiOS SDK[Graph API Explorer](https://developers.facebook.com/tools/explorer/?method=GET&path=%7Bevent-id%7D%2Fticket_tiers&version=v19.0)  \nGET /v19.0/{event-id}/ticket_tiers HTTP/1.1\nHost: graph.facebook.com  \n/* PHP SDK v5.0.0 */\n/* make the API call */\ntry {\n// Returns a `Facebook\\FacebookResponse` object\n$response = $fb->get(\n'/{event-id}/ticket_tiers',\n'{access-token}'\n);\n} catch(Facebook\\Exceptions\\FacebookResponseException $e) {\necho 'Graph returned an error: ' . $e->getMessage();\nexit;\n} catch(Facebook\\Exceptions\\FacebookSDKException $e) {\necho 'Facebook SDK returned an error: ' . $e->getMessage();\nexit;\n}\n$graphNode = $response->getGraphNode();\n/* handle the result */  \n/* make the API call */\nFB.api(\n\"/{event-id}/ticket_tiers\",\nfunction (response) {\nif (response && !response.error) {\n/* handle the result */\n}\n}\n);  \n/* make the API call */\nnew GraphRequest(\nAccessToken.getCurrentAccessToken(),\n\"/{event-id}/ticket_tiers\",\nnull,\nHttpMethod.GET,\nnew GraphRequest.Callback() {\npublic void onCompleted(GraphResponse response) {\n/* handle the result */\n}\n}\n).executeAsync();  \n/* make the API call */\nFBSDKGraphRequest *request = [[FBSDKGraphRequest alloc]\ninitWithGraphPath:@\"/{event-id}/ticket_tiers\"\nparameters:params\nHTTPMethod:@\"GET\"];\n[request startWithCompletionHandler:^(FBSDKGraphRequestConnection *connection,\nid result,\nNSError *error) {\n// Handle the result\n}];  \nIf you want to learn how to use the Graph API, read our [Using Graph API guide](https://developers.facebook.com/docs/graph-api/using-graph-api/).\n",
        "line_start": 24,
        "line_end": 77
    },
    "53": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Ticket Tiers\n\tReading\n\tParameters\n\nContent: \n### Parameters  \nThis endpoint doesn't have any parameters.\n",
        "line_start": 85,
        "line_end": 87
    },
    "54": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Ticket Tiers\n\tReading\n\tFields\n\nContent: \n### Fields  \nReading from this edge will return a JSON formatted result:  \n{\n\"`data`\": \\[\\],\n\"`paging`\": {}\n}  \n#### `data`  \nA list of [EventTicketTier](https://developers.facebook.com/docs/graph-api/reference/event-ticket-tier/) nodes.  \n#### `paging`  \nFor more details about pagination, see the [Graph API guide](https://developers.facebook.com/docs/graph-api/using-graph-api/#paging).\n",
        "line_start": 89,
        "line_end": 99
    },
    "55": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Ticket Tiers\n\tReading\n\tError Codes\n\nContent: \n### Error Codes  \n| Error | Description |\n| --- | --- |\n| 100 | Invalid parameter |\n",
        "line_start": 134,
        "line_end": 138
    },
    "56": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Ticket Tiers\n\tCreating\n\nContent: \n## Creating  \nYou can't perform this operation on this endpoint.\n",
        "line_start": 143,
        "line_end": 145
    },
    "57": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Ticket Tiers\n\tUpdating\n\nContent: \n## Updating  \nYou can't perform this operation on this endpoint.\n",
        "line_start": 147,
        "line_end": 149
    },
    "58": {
        "content": "Source document: ../data/platform-docs-versions/Facebook_Graph-API/Event Endpoint.md\nParagraph location: \n\tEvent Ticket Tiers\n\tDeleting\n\nContent: \n## Deleting  \nYou can't perform this operation on this endpoint.  \n![](https://www.facebook.com/tr?id=675141479195042&ev=PageView&noscript=1)  \n![](https://www.facebook.com/tr?id=574561515946252&ev=PageView&noscript=1)  \n![](https://www.facebook.com/tr?id=1754628768090156&ev=PageView&noscript=1)\n",
        "line_start": 151,
        "line_end": 156
    }
}