{
    "0": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tOverview\n\nContent: \n## Overview  \nThe enterprise console (at console.gnip.com) is available to enterprise data customers with contracted enterprise API access. If you are not currently an enterprise data customer but would like more information, you can learn more about [enterprise data](https://developer.twitter.com/en/products/twitter-api/enterprise.html) here.  \nThis is an overview of Twitter\u2019s enterprise console dashboard. The sections that are covered pertain to each specific area of the console for product details, usage, and general account management. If you have any questions regarding your specific account, please contact your designated account manager, or review our [technical documentation for enterprise products](https://developer.twitter.com/en/docs/twitter-api/enterprise.html).  \nAs part of the enterprise trial and onboarding process with your account manager, enterprise customers will receive a login to [console.gnip.com](http://console.gnip.com/), which is the user interface where enterprise product access can be reviewed and configured. Initial access to the console for customer admin is set up by Twitter as part of the enterprise onboarding process, and admins can then add additional users. The enterprise console allows you to manage and access more details related to your enterprise products.  \nThe following video provides an overview of the various portions of the console.gnip.com dashboard.  \n**Disclaimer: Please note that some of the features shown in the video, including certain stream enrichments and non-Twitter data source products, may no longer be available.**  \nYour browser does not support the <code>video</code> element.\n",
        "line_start": 2,
        "line_end": 9
    },
    "1": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tOverview\n\tNext Steps:\n\nContent: \n### Next Steps:  \n* [Review products tab](https://developer.twitter.com/en/docs/twitter-api/enterprise/console/product.html)\n* [Review usage tab](https://developer.twitter.com/en/docs/twitter-api/enterprise/console/usage.html)\n* [Review account tab](https://developer.twitter.com/en/docs/twitter-api/enterprise/console/account.html)  \nProducts tab\n",
        "line_start": 16,
        "line_end": 21
    },
    "2": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tProducts tab\n\nContent: \n## Products tab  \nUpon logging into your account at [console.gnip.com](http://console.gnip.com/), you will land on the products tab of the dashboard.\u00a0 This page includes an overview of the enterprise products currently available on your account.  \nFor products using streaming delivery like PowerTrack or Decahose, this page lists the product name, and stream label,\u00a0 the number of current active connections, the number of rules currently active for each (where applicable), and the raw count of activities (for example, Tweets) delivered in the most recent 24 hours.  \nFor products with REST delivery, like Search API, this page lists the product name,labels (also shown as \"streams\"), current activities (for example, Tweets) returned through these endpoints, and a few different request counts per endpoint.  \nNote that the [Usage API](https://developer.twitter.com/en/docs/twitter-api/enterprise/usage-api/overview.html) delivers much of this data programatically.  \nSpecific details per stream are available by clicking the name, or the settings button.\n",
        "line_start": 24,
        "line_end": 30
    },
    "3": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tProducts tab\n\tOverview\n\nContent: \n### Overview  \nClicking on one of the streams in the main dashboard will take you to an overview page for that stream.  \nFor streaming delivery products, this page includes the following:  \n1. A volume chart of the number of activities being delivered to you through each specific stream connection  \n2. Details (connection ID and IP address) on currently active connections on the stream  \n3. A log of recent connection, disconnection, and rule-update events for your stream  \nNote that the scale of the chart may be adjusted with the links in the top-right corner. The visibility of individual connections and disconnections can be toggled by clicking the appropriate key in the legend directly below the chart.\n",
        "line_start": 38,
        "line_end": 45
    },
    "4": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tProducts tab\n\tConnections\n\nContent: \n### Connections  \nThe Connections page provides details on recent connection events on your stream. This includes the start and end times for each connection (in 24 hour UTC), the duration of each connection, the IP of the server that made the connection, a unique connection ID for reference purposes, and the current connection status. The status corresponds to the most recent event for the specified connection \u2013 i.e. Client Connected, or a disconnect, with the type of disconnect specified.\u00a0 \u00a0For more details on connection debugging, visit the [disconnections explained guide](https://developer.twitter.com/en/docs/twitter-api/enterprise/powertrack-api/guides.html).\n",
        "line_start": 58,
        "line_end": 60
    },
    "5": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tProducts tab\n\tAPI Help\n\nContent: \n### API Help  \nThe API Help page provides the API endpoint URLs for your stream, as well as the Rules API endpoint for the stream, where applicable. In addition, it includes sample curl commands and instructions on how to connect to the stream endpoint, and how to programmatically add, delete, and list rules from your stream's Rules API endpoint.\n",
        "line_start": 67,
        "line_end": 69
    },
    "6": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tProducts tab\n\tRules\n\nContent: \n### Rules  \nThe Rules tab is available for PowerTrack streams, and provides a quick way to get started by manually entering plain text rules via a user interface. Note that the interface only supports adding up to 1000 rules via this manual method, and should be only used for initial testing. We recommend managing your rules programmatically via the [Rules API](https://developer.twitter.com/en/docs/twitter-api/enterprise/powertrack-api/api-reference.html) in any production setting.\n",
        "line_start": 76,
        "line_end": 78
    },
    "7": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tProducts tab\n\tSettings\n\nContent: \n### Settings  \nThe Settings tab allows you to switch the output format of the data in your stream, where multiple format options are supported. To switch the format, just use the radio buttons indicating the different options. The change will take effect upon reconnecting to the stream.\u00a0 Note that updating this setting will take place immediately on the next request or connection and may break your parser with the new format.  \n**Please note:** The recommended setting for getting the most data is \"Leave data in the original format\" which will return data in the enriched native format [here](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects.html).\u00a0 Activity streams format is described [here](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects.html).\n",
        "line_start": 85,
        "line_end": 88
    },
    "8": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tProducts tab\n\tNext Steps:\n\nContent: \n### Next Steps:  \n* [Review usage tab](https://developer.twitter.com/en/docs/twitter-api/enterprise/console/usage.html)\n* [Review account tab](https://developer.twitter.com/en/docs/twitter-api/enterprise/console/account.html)  \nUsage tab\n",
        "line_start": 16,
        "line_end": 20
    },
    "9": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tUsage tab\n\nContent: \n## Usage tab  \nThe Usage Tab provides insight into your use of your streams over various time periods. For programmatic access to usage information, see the [Usage API](https://developer.twitter.com/en/docs/twitter-api/enterprise/usage-api/overview.html).\n",
        "line_start": 103,
        "line_end": 105
    },
    "10": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tUsage tab\n\tMonthly\n\nContent: \n### Monthly  \nThe Monthly Usage page displays your stream usage broken down by product. For example, coverage products (for example, PowerTrack, Historical PowerTrack, and PowerTrack Replay) for a given data source will be grouped together to provide separate data, as well as a combined roll-up count. The counts include a current month-to-date, estimated end-of-month (based on this month\u2019s usage so far, and remaining time in the month), and the previous two months\u2019 counts.  \nNotably, these counts are deduplicated for each product and stream. If you received the same Tweet through multiple connections to the same PowerTrack stream, that Tweet will be counted once for these purposes. Counts will be updated every 24 hours at 00:00 UTC.\n",
        "line_start": 107,
        "line_end": 110
    },
    "11": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tUsage tab\n\tDaily\n\nContent: \n### Daily  \nThe Daily Usage page provides daily deduplicated counts for each day in the current month, broken down by product. Counts are updated every 24 hours at 00:00 UTC.\n",
        "line_start": 113,
        "line_end": 115
    },
    "12": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tUsage tab\n\tRules\n\nContent: \n### Rules  \nRule limits are based on your contracted PowerTrack rule package and are applied across all streams of a given \"type\". Counts are updated whenever a new rule is added or deleted.\n",
        "line_start": 76,
        "line_end": 78
    },
    "13": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tUsage tab\n\tNext Steps:\n\nContent: \n### Next Steps:  \n* [Review account tab](https://developer.twitter.com/en/docs/twitter-api/enterprise/console/account.html)\n* [Review the Usage API documentation](https://developer.twitter.com/en/docs/twitter-api/enterprise/usage-api/overview.html)  \nAccount tab\n",
        "line_start": 16,
        "line_end": 20
    },
    "14": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tAccount tab\n\tMy Profile\n\nContent: \n## Account tab  \n### My Profile  \nView details about your individual user profile, and change your password here. Additionally, you may configure account usage threshold notices specific to your account.\u00a0 API status notices are available through the status page at https://api.twitterstat.us.\n",
        "line_start": 131,
        "line_end": 134
    },
    "15": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tAccount tab\n\tAccount Settings\n\nContent: \n### Account Settings  \nYou may add, remove, and edit users, and configure email notifications for individual users and usage threshold alerts.  \nPlease note that there are three types of users \u2013 Account Admin, User, and Email Only.  \n* Account admins are allowed to create/delete/edit other users, and can use basic authentication with username (email) and password to connect to the enterprise APIs  \n* Users cannot create or modify other users, but can use basic authentication with username (email) and password to connect to the enterprise APIs  \n* Email Only users do not have access to the dashboard, are not authorized to connect to the enterprise APIs\u00a0 and only receive notifications, if they are configured to receive them in the Notifications section.\n",
        "line_start": 137,
        "line_end": 143
    },
    "16": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tAccount tab\n\tUsage Thresholds\n\nContent: \n### Usage Thresholds  \nConfigure volume thresholds for your products. These will initiate email alerts for the users who have configured those notifications in their profiles, both for the warning threshold and critical threshold for each product.  \nPlease note that these thresholds are evaluated once per day at 19:30 (UTC), and are not evaluated in real-time.\n",
        "line_start": 152,
        "line_end": 155
    },
    "17": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tAccount tab\n\tNext Steps:\n\nContent: \n### Next Steps:  \n* [Review enterprise data formats](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/overview.html)\n* [Explore the Twitter API v2 developer portal](https://developer.twitter.com/en/docs/developer-portal/overview.html)\n* [See enterprise support resources](https://developer.twitter.com/en/support/twitter-api.html#item6)  \nIntroduction  \nInterested in learning more about how the enterprise data formats map to the Twitter API v2 format?  \nCheck out our comparison guides:  \n* [Native Enriched compared to Twitter API v2](https://developer.twitter.com/en/docs/twitter-api/migrate/data-formats/native-enriched-to-v2)\n* [Activity Streams compared to Twitter API v2](https://developer.twitter.com/en/docs/twitter-api/migrate/data-formats/activity-streams-to-v2)\n",
        "line_start": 16,
        "line_end": 25
    },
    "18": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tIntroduction\n\nContent: \n## Introduction  \nEnterprise  \nTweets are the basic atomic building block of all things Twitter. All Twitter APIs that return Tweets provide that data encoded using JavaScript Object Notation (JSON). JSON is based on key-value pairs, with named attributes and associated values. Tweet objects retrieved from the API include a Twitter User's \"status update\" but Retweets, replies, and quote Tweets are all also Tweet objects.\u00a0 If a Tweet is related to another Tweet, as a Retweet, reply or quote Tweet, each will be identified or embedded into the Tweet object.\u00a0 Even the simplest Tweet in the native Twitter data format, will have nested JSON objects to represent the other attributes of a Tweet, such as the author, mentioned users, tagged place location, hashtags, cashtag symbols, media or URL links.\u00a0 When working with Twitter data, this is an important concept to understand.\u00a0The format of the Tweet data you will receive from the Twitter API depends on the type of Tweet received, the Twitter API you are using, and the format settings.  \nEnterprise endpoints that return Tweet objects have been updated to provide the metadata needed to understand the Tweet's edit history. Learn more about these metadata on the [\"Edit Tweets\" fundamentals](https://developer.twitter.com/en/docs/twitter-api/edit-tweets) page.  \n> What did the developer write in their Valentine\u2019s card?\n>\n> while(true) {\n> I = Love(You);\n> }\n>\n> \u2014 Twitter Dev (@TwitterDev) [February 14, 2020](https://twitter.com/TwitterDev/status/1228393702244134912?ref_src=twsrc%5Etfw)  \nIn native Twitter format, the JSON payload will include of \u2018root-level\u2019 attributes, and nested JSON objects (which are represented here with the `{}` notation):  \n`{ \t\"created_at\": \"Fri Feb 14 19:00:55 +0000 2020\", \t\"id_str\": \"1228393702244134912\", \t\"text\": \"What did the developer write in their Valentine\u2019s card?\\n  \\nwhile(true) {\\n    I = Love(You);  \\n}\", \t\"entities\": { \t\t\"hashtags\": [], \t\t\"symbols\": [], \t\t\"user_mentions\": [], \t\t\"urls\": [] \t}, \t\"user\": { \t\t\"entities\": { \t\t\t\"url\": {} \t\t} \t}, \t\"place\": {} }`\n",
        "line_start": 178,
        "line_end": 191
    },
    "19": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tAvailable data formats\n\nContent: \n## Available data formats  \nPlease note: It is highly recommended to use the [Enriched Native](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/tweet.html) format for enterprise data APIs.  \n* The Enriched Native format includes all new metadata since 2017, such as [poll metadata](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/poll-metadata.html), and additional metrics such as reply\\_count and quote\\_count.  \n* Activity Streams format has not been updated with new metadata or enrichments since the\u00a0[character update](https://blog.twitter.com/official/en_us/topics/product/2017/Giving-you-more-characters-to-express-yourself.html)\u00a0in 2017.  \nEnterprise data APIs deliver data in two different formats.\u00a0 The enterprise format closest to the standard v1.1 native format is Native Enriched.\u00a0 The legacy enterprise data format is Activity Streams, orignially implimented and used by Gnip as a normalized format across Twitter and other social media data providers at the time. While this format is still available,\u00a0Twitter has only invested new features and developments on the native enriched format since 2017.  \nThe enriched native format is exactly how it sounds, it includes native Twitter objects as well as additional enrichments avialable for enterprise data products such as URL unwinding metadata, profile geo, poll metadata and additional engagement metrics.  \n* [Expanded and enhanced URLs enrichment](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/expanded-and-enhanced-urls)\n* [Matching rules enrichment](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/matching-rules)\n* [Poll metadata enrichment](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/poll-metadata)\n* [Profile geo enrichment](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/profile-geo)\n",
        "line_start": 199,
        "line_end": 209
    },
    "20": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tAvailable data formats\n\tObject comparison per data format\n\nContent: \n### Object comparison per data format  \nWhatever your Twitter use case, understanding what these JSON-encoded Tweet objects and attributes\u00a0_represent_\u00a0is critical to successfully finding your data signals of interest. To help in that effort, there are a set of pages dedicated to each object in each data format_._  \nReflecting the JSON hierarchy above, here are links to each of these objects:  \n| Native Enriched | Activity Streams |\n| --- | --- |\n| [Link](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/tweet) Tweet object | [Link](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/tweet)\u00a0Activity object |\n| [Link](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/user)\u00a0User object | [Link](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/user)\u00a0Actor object |\n| [Link](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities)\u00a0Entities object | [Link](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/entities)\u00a0Twitter entities object |\n| [Link](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/extended-entities)\u00a0Extended entities object | [Link](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/extended-entities)\u00a0Twitter extended entitites object |\n| [Link](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo)\u00a0Geo object | [Link](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/geo)\u00a0Location object |\n| n/a | [Link](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/gnip.html) Gnip object |\n",
        "line_start": null,
        "line_end": null
    },
    "21": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tParsing best-practices\n\nContent: \n## Parsing best-practices  \n* Twitter JSON is encoded using UTF-8 characters.\n* Parsers should tolerate variance in the ordering of fields with ease. It should be assumed that Tweet JSON is served as an unordered hash of data.\n* Parsers should tolerate the addition of 'new' fields.\n* JSON parsers must be tolerant of \u2018missing\u2019 fields, since not all fields appear in all contexts.\n* It is generally safe to consider a nulled field, an empty set, and the absence of a field as the same thing\n",
        "line_start": 232,
        "line_end": 238
    },
    "22": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tParsing best-practices\n\tNext Steps:\n\nContent: \n### Next Steps:  \n* Review the enterprise [enriched native data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/tweet.html)  \nTweet object  \nInterested in learning more about how the Native Enriched data format maps to the Twitter API v2 format?  \nCheck out our comparison guide:\u00a0[Native Enriched compared to Twitter API v2](https://developer.twitter.com/en/docs/twitter-api/migrate/data-formats/native-enriched-to-v2)\n",
        "line_start": 16,
        "line_end": 21
    },
    "23": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet Object\n\nContent: \n## Tweet Object  \nWhen using enterprise data products, you will notice that much of the data dictionary is similar to the native format of Tweet data, with some additional enriched metadata.\u00a0 The base level of the native enriched format uses much of the same object names as the [Twitter API v1.1 data format](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/overview/intro-to-tweet-json.html).\u00a0 The Tweet object has a long list of \u2018root-level\u2019 attributes, including fundamental attributes such as `id`, `created_at`, and `text`. Tweet objects will also have nested objects to include the\u00a0`user`, `entities`, and `extended_entities`. Tweet objects will also have other [nested Tweet objects](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/nested-tweet-objects) such as retweeted\\_status, quoted\\_status and extended\\_tweet.\u00a0 The native enriched format will additionally have a matching\\_rules object.\n",
        "line_start": 250,
        "line_end": 252
    },
    "24": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet Object\n\tTweet Data Dictionary\n\nContent: \n### Tweet Data Dictionary  \nBelow you will find the data dictionary for these \u2018root-level\u2019 attributes, as well as links to child object data dictionaries.  \n| Attribute | Type | Description |\n| --- | --- | --- |\n| created\\_at | String | UTC time when this Tweet was created. Example:<br><br>\"created\\_at\": \"Wed Oct 10 20:19:24 +0000 2018\" |\n| id  | Int64 | The integer representation of the unique identifier for this Tweet. This number is greater than 53 bits and some programming languages may have difficulty/silent defects in interpreting it. Using a signed 64 bit integer for storing this identifier is safe. Use `**id_str**` to fetch the identifier to be safe. See [Twitter IDs](https://developer.twitter.com/en/docs/twitter-ids)\u00a0for more information. Example:<br><br>\"id\":1050118621198921728 |\n| id\\_str | String | The string representation of the unique identifier for this Tweet. Implementations should use this rather than the large integer in `**id**`. Example:<br><br>\"id\\_str\":\"1050118621198921728\" |\n| text | String | The actual UTF-8 text of the status update. See [twitter-text](https://github.com/twitter/twitter-text/blob/master/rb/lib/twitter-text/regex.rb) for details on what characters are currently considered valid. Example:<br><br>\"text\":\"To make room for more expression, we will now count all emojis as equal\u2014including those with gender\u200d\u200d\u200d \u200d\u200dand skin t\u2026 https://t.co/MkGjXf9aXm\" |\n| source | String | Utility used to post the Tweet, as an HTML-formatted string. Tweets from the Twitter website have a source value of `**web**`.<br><br>Example:<br><br>\"source\":\"Twitter Web Client\" |\n| truncated | Boolean | Indicates whether the value of the `**text**` parameter was truncated, for example, as a result of a retweet exceeding the original Tweet text length limit of 140 characters. Truncated text will end in ellipsis, like this `**...**` Since Twitter now rejects long Tweets vs truncating them, the large majority of Tweets will have this set to `**false**` . Note that while native retweets may have their toplevel `**text**` property shortened, the original text will be available under the `**retweeted_status**` object and the `**truncated**` parameter will be set to the value of the original status (in most cases, `**false**` ). Example:<br><br>\"truncated\":true |\n| in\\_reply\\_to\\_status\\_id | Int64 | _Nullable._ If the represented Tweet is a reply, this field will contain the integer representation of the original Tweet\u2019s ID. Example:<br><br>\"in\\_reply\\_to\\_status\\_id\":1051222721923756032 |\n| in\\_reply\\_to\\_status\\_id\\_str | String | _Nullable._ If the represented Tweet is a reply, this field will contain the string representation of the original Tweet\u2019s ID. Example:<br><br>\"in\\_reply\\_to\\_status\\_id\\_str\":\"1051222721923756032\" |\n| in\\_reply\\_to\\_user\\_id | Int64 | _Nullable._ If the represented Tweet is a reply, this field will contain the integer representation of the original Tweet\u2019s author ID. This will not necessarily always be the user directly mentioned in the Tweet. Example:<br><br>\"in\\_reply\\_to\\_user\\_id\":6253282 |\n| in\\_reply\\_to\\_user\\_id\\_str | String | _Nullable._ If the represented Tweet is a reply, this field will contain the string representation of the original Tweet\u2019s author ID. This will not necessarily always be the user directly mentioned in the Tweet. Example:<br><br>\"in\\_reply\\_to\\_user\\_id\\_str\":\"6253282\" |\n| in\\_reply\\_to\\_screen\\_name | String | _Nullable._ If the represented Tweet is a reply, this field will contain the screen name of the original Tweet\u2019s author. Example:<br><br>\"in\\_reply\\_to\\_screen\\_name\":\"twitterapi\" |\n| user | [User object](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/user) | The user who posted this Tweet. See User data dictionary for complete list of attributes.<br><br>Example highlighting select attributes:<br><br> { \"user\": {<br>    \"id\": 6253282,<br>    \"id\\_str\": \"6253282\",<br>    \"name\": \"Twitter API\",<br>    \"screen\\_name\": \"TwitterAPI\",<br>    \"location\": \"San Francisco, CA\",<br>    \"url\": \"https://developer.twitter.com\",<br>    \"description\": \"The Real Twitter API. Tweets about API changes, service issues and our Developer Platform. Don't get an answer? It's on my website.\",<br>    \"verified\": true,<br>    \"followers\\_count\": 6129794,<br>    \"friends\\_count\": 12,<br>    \"listed\\_count\": 12899,<br>    \"favourites\\_count\": 31,<br>    \"statuses\\_count\": 3658,<br>    \"created\\_at\": \"Wed May 23 06:01:13 +0000 2007\",<br>    \"utc\\_offset\": null,<br>    \"time\\_zone\": null,<br>    \"geo\\_enabled\": false,<br>    \"lang\": \"en\",<br>    \"contributors\\_enabled\": false,<br>    \"is\\_translator\": false,<br>    \"profile\\_background\\_color\": \"null\",<br>    \"profile\\_background\\_image\\_url\": \"null\",<br>    \"profile\\_background\\_image\\_url\\_https\": \"null\",<br>    \"profile\\_background\\_tile\": null,<br>    \"profile\\_link\\_color\": \"null\",<br>    \"profile\\_sidebar\\_border\\_color\": \"null\",<br>    \"profile\\_sidebar\\_fill\\_color\": \"null\",<br>    \"profile\\_text\\_color\": \"null\",<br>    \"profile\\_use\\_background\\_image\": null,<br>    \"profile\\_image\\_url\": \"null\",<br>    \"profile\\_image\\_url\\_https\": \"https://pbs.twimg.com/profile\\_images/942858479592554497/BbazLO9L\\_normal.jpg\",<br>    \"profile\\_banner\\_url\": \"https://pbs.twimg.com/profile\\_banners/6253282/1497491515\",<br>    \"default\\_profile\": false,<br>    \"default\\_profile\\_image\": false,<br>    \"following\": null,<br>    \"follow\\_request\\_sent\": null,<br>    \"notifications\": null<br>  }<br>} |\n| coordinates | [Coordinates](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo#coordinates-dictionary) | _Nullable._ Represents the geographic location of this Tweet as reported by the user or client application. The inner coordinates array is formatted as [geoJSON](http://www.geojson.org/) (longitude first, then latitude). Example:<br><br>\"coordinates\":<br>{<br>    \"coordinates\":<br>    \\[<br>        -75.14310264,<br>        40.05701649<br>    \\],<br>    \"type\":\"Point\"<br>} |\n| place | [Places](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo#place-dictionary) | _Nullable_ When present, indicates that the tweet is associated (but not necessarily originating from) a Place\u00a0 Example:<br><br>\"place\":<br>{<br>  \"attributes\":{},<br>   \"bounding\\_box\":<br>  {<br>     \"coordinates\":<br>     \\[\\[<br>           \\[-77.119759,38.791645\\],<br>           \\[-76.909393,38.791645\\],<br>           \\[-76.909393,38.995548\\],<br>           \\[-77.119759,38.995548\\]<br>     \\]\\],<br>     \"type\":\"Polygon\"<br>  },<br>   \"country\":\"United States\",<br>   \"country\\_code\":\"US\",<br>   \"full\\_name\":\"Washington, DC\",<br>   \"id\":\"01fbe706f872cb32\",<br>   \"name\":\"Washington\",<br>   \"place\\_type\":\"city\",<br>   \"url\":\"http://api.twitter.com/1/geo/id/0172cb32.json\"<br>} |\n| quoted\\_status\\_id | Int64 | This field only surfaces when the Tweet is a quote Tweet. This field contains the integer value Tweet ID of the quoted Tweet. Example:<br><br>\"quoted\\_status\\_id\":1050119905717055488 |\n| quoted\\_status\\_id\\_str | String | This field only surfaces when the Tweet is a quote Tweet. This is the string representation Tweet ID of the quoted Tweet. Example:<br><br>\"quoted\\_status\\_id\\_str\":\"1050119905717055488\" |\n| is\\_quote\\_status | Boolean | Indicates whether this is a Quoted Tweet. Example:<br><br>\"is\\_quote\\_status\":false |\n| quoted\\_status | Tweet | This field only surfaces when the Tweet is a quote Tweet. This attribute contains the Tweet object of the original Tweet that was quoted. |\n| retweeted\\_status | Tweet | Users can amplify the broadcast of Tweets authored by other users by Retweeting . Retweets can be distinguished from typical Tweets by the existence of a `**retweeted_status**` attribute. This attribute contains a representation of the _original_ Tweet that was retweeted. Note that retweets of retweets do not show representations of the intermediary retweet, but only the original Tweet. (Users can also unretweet a retweet they created by deleting their retweet.) |\n| quote\\_count | Integer | _Nullable._ Indicates approximately how many times this Tweet has been quoted by Twitter users. Example:<br><br>\"quote\\_count\":33<br><br>Note: This object is only available with the Premium and Enterprise tier products. |\n| reply\\_count | Int | Number of times this Tweet has been replied to. Example:<br><br>\"reply\\_count\":30<br><br>Note: This object is only available with the Premium and Enterprise tier products. |\n| retweet\\_count | Int | Number of times this Tweet has been retweeted. Example:<br><br>\"retweet\\_count\":160 |\n| favorite\\_count | Integer | _Nullable._ Indicates approximately how many times this Tweet has been liked by Twitter users. Example:<br><br>\"favorite\\_count\":295 |\n| entities | [Entities](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities) | Entities which have been parsed out of the text of the Tweet. Additionally see [Entities in Twitter Objects](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/entities.html) . Example:<br><br>\"entities\":<br>{<br>    \"hashtags\":\\[\\],<br>    \"urls\":\\[\\],<br>    \"user\\_mentions\":\\[\\],<br>    \"media\":\\[\\],<br>    \"symbols\":\\[\\]<br>    \"polls\":\\[\\]<br>} |\n| extended\\_entities | [Extended Entities](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities) | When between one and four native photos or one video or one animated GIF are in Tweet, contains an array 'media' metadata. This is also available in Quote Tweets. Additionally see [Entities in Twitter Objects](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/extended-entities.html) . Example:<br><br>\"entities\":<br>{<br>    \"media\":\\[\\]<br>} |\n| favorited | Boolean | _Nullable._ Indicates whether this Tweet has been liked by the authenticating user. Example:<br><br>\"favorited\":true |\n| retweeted | Boolean | Indicates whether this Tweet has been Retweeted by the authenticating user. Example:<br><br>\"retweeted\":false |\n| possibly\\_sensitive | Boolean | _Nullable._\u00a0This field indicates content may be recognized as sensitive. The Tweet author can select within their own account preferences and choose \u201cMark media you tweet as having material that may be sensitive\u201d so each Tweet created after has this flag set.<br><br>This may also be judged and labeled by an internal Twitter support agent.<br><br>\"possibly\\_sensitive\":false |\n| filter\\_level | String | Indicates the maximum value of the filter\\_level parameter which may be used and still stream this Tweet. So a value of `**medium**` will be streamed on `**none**`, `**low**`, and `**medium**` streams.<br><br>Example:<br><br>\"filter\\_level\": \"low\" |\n| lang | String | _Nullable._ When present, indicates a [BCP 47](http://tools.ietf.org/html/bcp47) language identifier corresponding to the machine-detected language of the Tweet text, or `**und**` if no language could be detected.\u00a0<br><br>\u00a0Example:<br><br>\"lang\": \"en\" |\n| edit\\_history | Object | Unique identifiers indicating all versions of a Tweet. For Tweets with no edits, there will be one ID. For Tweets with an edit history, there will be multiple IDs, arranged in ascending order reflecting the order of edits, with the most recent version in the last position of the array.\u00a0<br><br>The Tweet IDs can be used to hydrate and view previous versions of a Tweet.<br><br>Example:<br><br>edit\\_history\": {<br>    \"initial\\_tweet\\_id\": \"1283764123\"<br>    \"edit\\_tweet\\_ids\": \\[\"1283764123\", \"1394263866\"\\]<br>  } |\n| edit\\_controls | Object | When present, indicates how long a Tweet is still editable for and the number of remaining edits. Tweets are only editable for the first 30 minutes after creation and can be edited up to five times.\u00a0<br><br>The Tweet IDs can be used to hydrate and view previous versions of a Tweet.<br><br>Example:<br><br>\"edit\\_controls\": {  <br>     \"editable\\_until\\_ms\": 123<br>     \"edits\\_remaining\": 3   <br>  } |\n| editable | Boolean | When present, indicates if a Tweet was eligible for edit when published. This field is not dynamic and won't toggle from True to False when a Tweet reaches its editable time limit, or maximum number of edits. The following Tweet features will cause this field to be false:<br><br>* Tweets is promoted<br>* Tweet has a poll<br>* Tweet is a non-self-thread reply<br>* Tweet is a retweet (note that Quote Tweets are eligible for edit)<br>* Tweet is nullcast<br>* Community Tweet<br>* Superfollow Tweet<br>* Collaborative Tweet |\n| matching\\_rules | Array of Rule Objects | Present in _filtered_ products such as Twitter Search and PowerTrack. Provides the _id_ and _tag_ associated with the rule that matched the Tweet. More on matching rules [here](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/matching-rules.html). With PowerTrack, more than one rule can match a Tweet.\u00a0<br><br>Example:<br><br>\"matching\\_rules\": \" \\[{<br>        \"tag\": \"twitterapi emojis\",<br>        \"id\": 1050118621198921728,<br>        \"id\\_str\": \"1050118621198921728\"<br>    }\\]\" |\n|     |     |     |\n",
        "line_start": 254,
        "line_end": 293
    },
    "25": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet Object\n\tAdditional Tweet attributes\n\nContent: \n### Additional Tweet attributes  \nTwitter APIs that provide Tweets (e.g. the GET statuses/lookup endpoint) may include these additional Tweet attributes:  \n| Attribute | Type | Description |\n| --- | --- | --- |\n| current\\_user\\_retweet | Object | _Perspectival_\u00a0Only surfaces on methods supporting the\u00a0include\\_my\\_retweet parameter, when set to true. Details the Tweet ID of the user\u2019s own retweet (if existent) of this Tweet. Example:<br><br>\"current\\_user\\_retweet\": {<br>  \"id\": 6253282,<br>  \"id\\_str\": \"6253282\"<br>} |\n| scopes | Object | A set of key-value pairs indicating the intended contextual delivery of the containing Tweet. Currently used by Twitter\u2019s Promoted Products. Example:<br><br>\"scopes\":{\"followers\":false} |\n| withheld\\_copyright | Boolean | When present and set to \u201ctrue\u201d, it indicates that this piece of content has been withheld due to a\u00a0[DMCA complaint](http://en.wikipedia.org/wiki/Digital_Millennium_Copyright_Act)\u00a0. Example:<br><br>\"withheld\\_copyright\": true |\n| withheld\\_in\\_countries | Array of String | When present, indicates a list of uppercase\u00a0[two-letter country codes](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\u00a0this content is withheld from. Twitter supports the following non-country values for this field:<br><br>\u201cXX\u201d - Content is withheld in all countries \u201cXY\u201d - Content is withheld due to a DMCA request.<br><br>Example:<br><br>\"withheld\\_in\\_countries\": \\[\"GR\", \"HK\", \"MY\"\\] |\n| withheld\\_scope | String | When present, indicates whether the content being withheld is the \u201cstatus\u201d or a \u201cuser.\u201d<br><br>Example:<br><br>\"withheld\\_scope\": \"status\" |\n",
        "line_start": 296,
        "line_end": 305
    },
    "26": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet Object\n\tDeprecated Attributes\n\nContent: \n### Deprecated Attributes  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| geo | Object | **Deprecated.** _Nullable._ Use the `coordinates` field instead. This deprecated attribute has its coordinates formatted as _\\[lat, long\\]_, while all other Tweet geo is formatted as _\\[long, lat\\]_. |\n",
        "line_start": 308,
        "line_end": 313
    },
    "27": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tNested Tweet objects\n\nContent: \n## Nested Tweet objects  \nIn several cases, a Tweet object will included other nested objects.\u00a0 If you are working with nested objects, then that JSON payload will contain multiple Tweet objects, and each Tweet object may contain its own objects. The root-level object will contain information on the type of action taken, i.e. whether it is a Retweet or a Quote Tweet, and may also contain an object that describes the 'original' Tweet being shared. Extended Tweets will include a nested extended object that extends beyond 140 characters, which was used to prevent breaking changes when the update was made in 2017. Each nested object dictionary is described below.  \n#### Retweets  \nRetweets always contain two Tweet objects. The 'original' Tweet being Retweeted is provided in a \"retweeted\\_status\" object. The root-level object encapsulates the Retweet itself, including a User object for the account taking the Retweet action and the time of the Retweet. Retweeting is an action to share a Tweet with your followers, and no other new content can be added. Also, a (new) location\u00a0cannot\u00a0be provided with a Retweet. While the 'original' Tweet may have geo-tagged, the Retweet \"geo\" and \"place\" objects will always be null.  \nEven before the introduction of Extended Tweets, the root-level \"entities\" object was in some cases truncated and incomplete due to the \"RT @username \" string being appended to Tweet message being Retweeted.\u00a0 Note\u00a0that if a Retweet gets Retweeted, the \"retweet\\_status\" will still point to the original Tweet, meaning the intermediate Retweet is not included. Similar behavior is seen when using twitter.com to 'display' a Retweet. If you copy the unique Tweet ID assigned to the Retweet 'action', the original Tweet is displayed.  \nBelow is an example structure for a Retweet. Again, when parsing Retweets, it is key to parse the \"retweeted\\_status\" object for complete (original) Tweet message and entity metadata.  \n`{ \t\"tweet\": { \t\t\"text\": \"RT @author original message\", \t\t\"user\": { \t\t\t\"screen_name\": \"Retweeter\" \t\t}, \t\t\"retweeted_status\": { \t\t\t\"text\": \"original message\", \t\t\t\"user\": { \t\t\t\t\"screen_name\": \"OriginalTweeter\" \t\t\t}, \t\t\t\"place\": {}, \t\t\t\"entities\": {}, \t\t\t\"extended_entities\": {} \t\t} \t}, \t\"entities\": {}, \t\"extended_entities\": {} }`  \n#### Quote Tweets  \nQuote Tweets are much like Retweets except that they include a new Tweet message. These new messages can contain their own set of hashtags, links, and other \"entities\" metadata. Quote Tweets can also include location information shared by the user posting the Quote Tweet, along with media such as GIFs, videos, and photos.  \nQuote Tweets will contain at least two Tweet objects, and in some cases, three. The Tweet being Quoted, which itself can be a Quoted Tweet, is provided in a \"quoted\\_status\" object. The root-level object encapsulates the Quote Tweet itself, including a User object for the account taking the sharing action and the time of the Quote Tweet.  \nNote that Quote Tweets can now have photos, GIFs, or videos, added to them using the 'post Tweet' user-interface. When links to externally hosted media are included in the Quote Tweet message, the root-level \"entities.urls\" will describe those. Media attached to Quote Tweets will appear in the root-level \"extended\\_entities\" metadata.  \nWhen Quote Tweets were first launched, a shortened link (t.co URL) was appended to the 'original' Tweet message and provided in the root-level \"text\" field. In addition, metadata for that t.co URL was included in the root-level 'entities.urls' array. In May 2018, we changed this so that the shortened t.co URL to the quoted Tweet\u00a0_will not be included_\u00a0in the root-level \"text\" field. Second, the metadata for the quoted Tweet\u00a0_will not be included_\u00a0in the \"entities.urls\" metadata. Instead, URL metadata for the quoted Tweet will be in a new \"quoted\\_status\\_permalink\" object on the root-level (or top-level), so at the same level of the \"quoted\\_status\" object.  \nBelow is an example structure for a Quote Tweet using this original formatting.  \n`{ \t\"created_at\": \"Tue Feb 14 19:30:06 +0000 2017\", \t\"id_str\": \"831586333415976960\", \t\"text\": \"Definitely quotable! https:\\/\\/t.co\\/J1LKrbHpWR\", \t\"user\": { \t\t\"screen_name\": \"happycamper\" \t}, \t\"quoted_status_id_str\": \"831569219296882688\", \t\"quoted_status\": { \t\t\"created_at\": \"Tue Feb 14 18:22:06 +0000 2017\", \t\t\"id_str\": \"831569219296882688\", \t\t\"text\": \"This is a test of the tweeting system \\ud83d\\ude0e to update #supportdocs @twitterboulder here: https:\\/\\/t.co\\/NRq9UrSzm0\", \t\t\"user\": { \t\t\t\"screen_name\": \"furiouscamper\", \t\t}, \t\t\"place\": { \t\t\t\"id\": \"9a974dfc8efb32a0\", \t\t}, \t\t\"entities\": { \t\t\t\"hashtags\": [{ \t\t\t\t\"text\": \"supportdocs\", \t\t\t}], \t\t\t\"urls\": [{ \t\t\t}], \t\t\t\"user_mentions\": [{\t}], \t\t\t\"symbols\": [] \t\t}, \t}, \t\"is_quote_status\": true, \t\"entities\": {}, \t\"matching_rules\": [{}] }`  \n`{ \t\"created_at\": \"Fri Jan 04 18:47:16 +0000 2019\", \t\"id_str\": \"1081260794069671936\", \t\"text\": \"Quote test https://t.co/CE4m1qs3NJ\", \t\"user\": { \t\t\"screen_name\": \"furiouscamper\" \t}, \t\"place\": null, \t\"quoted_status_id_str\": \"1079578364904648705\", \t\"quoted_status\": { \t\t\"created_at\": \"Mon Dec 31 03:21:54 +0000 2018\", \t\t\"id_str\": \"1079578364904648705\", \t\t\"text\": \"AHHHHH\", \t\t\"user\": { \t\t\t\"screen_name\": \"infinite_scream\" \t\t}, \t\t\"place\": null, \t\t\"is_quote_status\": false, \t\t\"quote_count\": 1, \t\t\"reply_count\": 0, \t\t\"retweet_count\": 3, \t\t\"favorite_count\": 6, \t\t\"entities\": { \t\t\t\"hashtags\": [], \t\t\t\"urls\": [], \t\t\t\"user_mentions\": [], \t\t\t\"symbols\": [] \t\t} \t}, \t\"quoted_status_permalink\": { \t\t\"url\": \"https://t.co/CE4m1qs3NJ\", \t\t\"expanded\": \"https://twitter.com/infinite_scream/status/1079578364904648705\", \t\t\"display\": \"twitter.com/infinite_screa\u2026\" \t}, \t\"is_quote_status\": true, \t\"quote_count\": 0, \t\"reply_count\": 0, \t\"retweet_count\": 0, \t\"favorite_count\": 1, \t\"entities\": {} }`\n",
        "line_start": 316,
        "line_end": 331
    },
    "28": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tNested Tweet objects\n\tExtended Tweets\n\nContent: \n### Extended Tweets  \nJSON that describes\u00a0_Extended Tweets_\u00a0was introduced when 280-character Tweets\u00a0were launched in November 2017. Tweet JSON was extended to encapsulate these longer messages, while not breaking the thousands of apps parsing these fundamental Twitter objects. To provide full backward compatibility, the original 140-character 'text' field, and the entity objects parsed from that, were retained. In the case of Tweets longer than 140 characters, this root-level 'text' field would become truncated and thus incomplete. Since the root-level 'entities' objects contain arrays of key metadata parsed from the 'text' message, such\u00a0as included hashtags and links, these collections would be incomplete. For example, if a Tweet message was 200 characters long, with a hashtag included at the end, the legacy root-level 'entities.hashtags'\u00a0array\u00a0would not include it.  \nA new\u00a0'extended\\_tweet' field was introduced to hold the longer Tweet messages and complete entity metadata. The \"extended\\_tweet\" object provides the \"full\\_text\" field that contains the complete, untruncated Tweet message when longer than 140 characters. The \"extended\\_tweet\" object also contains an \"entities\" object with complete arrays of hashtags, links, mentions, etc.  \nExtended Tweets are identified with a root-level \"truncated\" boolean. When true (\"truncated\": true), the \"extended\\_tweet\" fields should be parsed instead of the root-level fields.  \nNote in the JSON example below that the root-level \"text\" field is truncated and the root-level \"entities.hashtags\" array is empty even though the Tweet message includes three hashtags. Since this is an Extended Tweet, the \"truncated\" field is set to true, and the \"extended\\_tweet\" object provides complete \"full\\_text\" and \"entities\" Tweet metadata.  \n`{ \t\"created_at\": \"Thu May 10 17:41:57 +0000 2018\", \t\"id_str\": \"994633657141813248\", \t\"text\": \"Just another Extended Tweet with more than 140 characters, generated as a documentation example, showing that [\\\"tru\u2026 https://t.co/U7Se4NM7Eu\", \t\"display_text_range\": [0, 140], \t\"truncated\": true, \t\"user\": { \t\t\"id_str\": \"944480690\", \t\t\"screen_name\": \"FloodSocial\" \t}, \t\"extended_tweet\": { \t\t\"full_text\": \"Just another Extended Tweet with more than 140 characters, generated as a documentation example, showing that [\\\"truncated\\\": true] and the presence of an \\\"extended_tweet\\\" object with complete text and \\\"entities\\\" #documentation #parsingJSON #GeoTagged https://t.co/e9yhQTJSIA\", \t\t\"display_text_range\": [0, 249], \t\t\"entities\": { \t\t\t\"hashtags\": [{ \t\t\t\t\"text\": \"documentation\", \t\t\t\t\"indices\": [211, 225] \t\t\t}, { \t\t\t\t\"text\": \"parsingJSON\", \t\t\t\t\"indices\": [226, 238] \t\t\t}, { \t\t\t\t\"text\": \"GeoTagged\", \t\t\t\t\"indices\": [239, 249] \t\t\t}] \t\t}  \t}, \t\"entities\": { \t\t\"hashtags\": [] \t} }`\n",
        "line_start": 351,
        "line_end": 357
    },
    "29": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tNested Tweet objects\n\tNext Steps\n\nContent: \n### Next Steps  \nExplore the other sub-objects that a Tweet contains:  \n* [User object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/user)\n* [Entities object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities)\n* [Extended Entities object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/extended-entities)\n* [Tweet geo objects and data dictionaries](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo)  \nUser object\n",
        "line_start": 365,
        "line_end": 372
    },
    "30": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tUser object\n\nContent: \n## User object  \nThe User object contains Twitter User account metadata that describes the Twitter User referenced.\n",
        "line_start": 376,
        "line_end": 378
    },
    "31": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tUser object\n\tUser Data Dictionary\n\nContent: \n### User Data Dictionary  \n| Attribute | Type | Description |\n| --- | --- | --- |\n| id  | Int64 | The integer representation of the unique identifier for this User. This number is greater than 53 bits and some programming languages may have difficulty/silent defects in interpreting it. Using a signed 64 bit integer for storing this identifier is safe. Use `id_str` to fetch the identifier to be safe. See [Twitter IDs](https://developer.twitter.com/en/docs/twitter-ids) for more information. Example:<br><br>\"id\": 6253282 |\n| id\\_str | String | The string representation of the unique identifier for this User. Implementations should use this rather than the large, possibly un-consumable integer in `id`. Example:<br><br>\"id\\_str\": \"6253282\" |\n| name | String | The name of the user, as they\u2019ve defined it. Not necessarily a person\u2019s name. Typically capped at 50 characters, but subject to change. Example:<br><br>\"name\": \"Twitter API\" |\n| screen\\_name | String | The screen name, handle, or alias that this user identifies themselves with. screen\\_names are unique but subject to change. Use `id_str` as a user identifier whenever possible. Typically a maximum of 15 characters long, but some historical accounts may exist with longer names. Example:<br><br>\"screen\\_name\": \"twitterapi\" |\n| location | String | _Nullable_ . The user-defined location for this account\u2019s profile. Not necessarily a location, nor machine-parseable. This field will occasionally be fuzzily interpreted by the Search service. Example:<br><br>\"location\": \"San Francisco, CA\" |\n| derived | Arrays of Enrichment Objects | Enterprise APIs only Collection of Enrichment metadata derived for\u00a0user. Provides the\u00a0[_Profile Geo_](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/enrichments/overview/profile-geo)\u00a0Enrichment metadata. See\u00a0referenced\u00a0documentation for more information, including JSON data dictionaries. Example:<br><br>\"derived\":{\"locations\": \\[{\"country\":\"United States\",\"country\\_code\":\"US\",\"locality\":\"Denver\"}\\]} |\n| url | String | _Nullable_ . A URL provided by the user in association with their profile. Example:<br><br>\"url\": \"https://developer.twitter.com\" |\n| description | String | _Nullable_ . The user-defined UTF-8 string describing their account. Example:<br><br>\"description\": \"The Real Twitter API.\" |\n| protected | Boolean | When true, indicates that this user has chosen to protect their Tweets. See [About Public and Protected Tweets](https://support.twitter.com/articles/14016-about-public-and-protected-tweets) . Example:<br><br>\"protected\": true |\n| verified | Boolean | When true, indicates that the user has a verified account. See [Verified Accounts](https://support.twitter.com/articles/119135-faqs-about-verified-accounts) . Example:<br><br>\"verified\": false |\n| followers\\_count | Int | The number of followers this account currently has. Under certain conditions of duress, this field will temporarily indicate \u201c0\u201d. Example:<br><br>\"followers\\_count\": 21 |\n| friends\\_count | Int | The number of users this account is following (AKA their \u201cfollowings\u201d). Under certain conditions of duress, this field will temporarily indicate \u201c0\u201d. Example:<br><br>\"friends\\_count\": 32 |\n| listed\\_count | Int | The number of public lists that this user is a member of. Example:<br><br>\"listed\\_count\": 9274 |\n| favourites\\_count | Int | The number of Tweets this user has liked in the account\u2019s lifetime. British spelling used in the field name for historical reasons. Example:<br><br>\"favourites\\_count\": 13 |\n| statuses\\_count | Int | The number of Tweets (including retweets) issued by the user. Example:<br><br>\"statuses\\_count\": 42 |\n| created\\_at | String | The UTC datetime that the user account was created on Twitter. Example:<br><br>\"created\\_at\": \"Mon Nov 29 21:18:15 +0000 2010\" |\n| profile\\_banner\\_url | String | The HTTPS-based URL pointing to the standard web representation of the user\u2019s uploaded profile banner. By adding a final path element of the URL, it is possible to obtain different image sizes optimized for specific displays. For size variants, please see [User Profile Images and Banners](https://developer.twitter.com/en/docs/accounts-and-users/user-profile-images-and-banners) .<br><br>Example:<br><br>\"profile\\_banner\\_url\": \"https://si0.twimg.com/profile\\_banners/819797/1348102824\" |\n| profile\\_image\\_url\\_https | String | A HTTPS-based URL pointing to the user\u2019s profile image. Example:<br><br>\"profile\\_image\\_url\\_https\":<br>\"https://abs.twimg.com/sticky/default\\_profile\\_images/default\\_profile\\_normal.png\" |\n| default\\_profile | Boolean | When true, indicates that the user has not altered the theme or background of their user profile. Example:<br><br>\"default\\_profile\": false |\n| default\\_profile\\_image | Boolean | When true, indicates that the user has not uploaded their own profile image and a default image is used instead. Example:<br><br>\"default\\_profile\\_image\": false |\n",
        "line_start": 380,
        "line_end": 403
    },
    "32": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tUser object\n\t\n\nContent: \n###\nNo longer supported (deprecated) attributes  \n| Field | Type | Description |\n| --- | --- | --- |\n| utc\\_offset | null | Value\u00a0will be set to null. Still available via [GET account/settings](https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/get-account-settings) |\n| time\\_zone | null | Value\u00a0will be set to null.\u00a0Still available via [GET account/settings](https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/get-account-settings) as tzinfo\\_name |\n| lang | null | Value\u00a0will be set to null.\u00a0Still available via [GET account/settings](https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/get-account-settings) as language |\n| geo\\_enabled | null | Value\u00a0will be set to null.\u00a0 Still available via [GET account/settings](https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/get-account-settings). This field must be true for the current user to attach geographic data when using\u00a0[POST\u00a0statuses /\u00a0update](https://developer.twitter.com/en/docs/tweets/post-and-engage/guides/post-tweet-geo-guide) |\n| following | null | Value\u00a0will be set to null.\u00a0Still available via [GET friendships/lookup](https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-friendships-lookup) |\n| follow\\_request\\_sent | null | Value\u00a0will be set to null.\u00a0Still available via [GET friendships/lookup](https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-friendships-lookup) |\n| has\\_extended\\_profile | null | **Deprecated**. Value will be set to null. |\n| notifications | null | **Deprecated**. Value will be set to null. |\n| profile\\_location | null | **Deprecated**. Value will be set to null. |\n| contributors\\_enabled | null | **Deprecated**. Value will be set to null. |\n| profile\\_image\\_url | null | **Deprecated**. Value will be set to null. NOTE: Profile images are only available using the profile\\_image\\_url\\_https field. |\n| profile\\_background\\_color | null | **Deprecated**. Value will be set to null. |\n| profile\\_background\\_image\\_url | null | **Deprecated**. Value will be set to null. |\n| profile\\_background\\_image\\_url\\_https | null | **Deprecated**. Value will be set to null. |\n| profile\\_background\\_tile | null | **Deprecated**. Value will be set to null. |\n| profile\\_link\\_color | null | **Deprecated**. Value will be set to null. |\n| profile\\_sidebar\\_border\\_color | null | **Deprecated**. Value will be set to null. |\n| profile\\_sidebar\\_fill\\_color | null | **Deprecated**. Value will be set to null. |\n| profile\\_text\\_color | null | **Deprecated**. Value will be set to null. |\n| profile\\_use\\_background\\_image | null | **Deprecated**. Value will be set to null. |\n| is\\_translator | null | **Deprecated**. Value will be set to null. |\n| is\\_translation\\_enabled | null | **Deprecated**. Value will be set to null. |\n| translator\\_type | null | **Deprecated**. Value will be set to null. |  \n###\nExample user object:  \n`\"user\": { \t\t\"id\": 2244994945, \t\t\"id_str\": \"2244994945\", \t\t\"name\": \"Twitter Dev\", \t\t\"screen_name\": \"TwitterDev\", \t\t\"location\": \"127.0.0.1\", \t\t\"url\": \"https://developer.twitter.com/en/community\", \t\t\"description\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\"translator_type\": \"regular\", \t\t\"protected\": false, \t\t\"verified\": true, \t\t\"followers_count\": 512292, \t\t\"friends_count\": 2038, \t\t\"listed_count\": 1666, \t\t\"favourites_count\": 2147, \t\t\"statuses_count\": 3634, \t\t\"created_at\": \"Sat Dec 14 04:35:55 +0000 2013\", \t\t\"utc_offset\": null, \t\t\"time_zone\": null, \t\t\"geo_enabled\": true, \t\t\"lang\": null, \t\t\"contributors_enabled\": false, \t\t\"is_translator\": false, \t\t\"profile_background_color\": \"FFFFFF\", \t\t\"profile_background_image_url\": \"http://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_image_url_https\": \"https://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_tile\": false, \t\t\"profile_link_color\": \"0084B4\", \t\t\"profile_sidebar_border_color\": \"FFFFFF\", \t\t\"profile_sidebar_fill_color\": \"DDEEF6\", \t\t\"profile_text_color\": \"333333\", \t\t\"profile_use_background_image\": false, \t\t\"profile_image_url\": \"http://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_banner_url\": \"https://pbs.twimg.com/profile_banners/2244994945/1594913664\", \t\t\"default_profile\": false, \t\t\"default_profile_image\": false, \t\t\"following\": null, \t\t\"follow_request_sent\": null, \t\t\"notifications\": null \t}`\n",
        "line_start": 405,
        "line_end": 435
    },
    "33": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tUser object\n\tNext Steps\n\nContent: \n### Next Steps  \nExplore the other sub-objects that a Tweet contains:  \n* [Tweet object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/tweet)\n* [Entities object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities)\n* [Extended Entities object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/extended-entities)\n* [Tweet geo objects and data dictionaries](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo)  \nGeo objects\n",
        "line_start": 365,
        "line_end": 372
    },
    "34": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tGeo Objects\n\nContent: \n## Geo Objects  \nTweets can be associated with a location, generating a Tweet that has been \u2018geo-tagged.\u2019 Tweet locations can be assigned by using the Twitter user-interface or when posting a Tweet using the API. Tweet locations can be an exact \u2018point\u2019 location, or a Twitter Place with a \u2018bounding box\u2019 that describes a larger area ranging from a venue to an entire region.  \nThere are three \u2018root-level\u2019 JSON objects used to describe the location associated with a Tweet: [place](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/place-dictionary), [geo](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo) and [coordinates](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/coordinates).  \nAdditionally, the native enriched format includes the [profile geo enrichment's](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/profile-geo.html) [derived location](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/derived-location) within the user object.  \nThe `place` object is always present when a Tweet is geo-tagged with a place,. Places are specific, named locations with corresponding geo coordinates. When users decide to assign a location to their Tweet, they are presented with a list of candidate Twitter Places. When using the API to post a Tweet, a Twitter Place can be attached by specifying a\u00a0place\\_id\u00a0when posting the Tweet. Tweets associated with Places are not necessarily issued from that location but could also potentially be\u00a0_about_\u00a0that location.  \nThe geo and\u00a0`coordinates`\u00a0objects only present (non-null) when the Tweet is assigned an _exact location_. If an exact location is provided, the `coordinates` object will provide a \\[long, lat\\] array with the geographical coordinates, and a Twitter Place that corresponds to that location will be assigned.\n",
        "line_start": 451,
        "line_end": 457
    },
    "35": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tPlace data dictionary\n\nContent: \n## Place data dictionary  \n| Field | Type | Description |\n| --- | --- | --- |\n| id  | String | ID representing this place. Note that this is represented as a string, not an integer. Example:<br><br>\"id\":\"01a9a39529b27f36\" |\n| url | String | URL representing the location of additional place metadata for this place. Example:<br><br>\"url\":\"https://api.twitter.com/1.1/geo/id/01a9a39529b27f36.json\" |\n| place\\_type | String | The type of location represented by this place. Example:<br><br>\"place\\_type\":\"city\" |\n| name | String | Short human-readable representation of the place\u2019s name. Example:<br><br>\"name\":\"Manhattan\" |\n| full\\_name | String | Full human-readable representation of the place\u2019s name. Example:<br><br>\"full\\_name\":\"Manhattan, NY\" |\n| country\\_code | String | Shortened country code representing the country containing this place. Example:<br><br>\"country\\_code\":\"US\" |\n| country | String | Name of the country containing this place. Example:<br><br>\"country\":\"United States\" |\n| bounding\\_box | [Object](#obj-boundingbox) | A bounding box of coordinates which encloses this place. Example:<br><br>{<br>  \"bounding\\_box\": {<br>    \"coordinates\": \\[<br>      \\[<br>        \\[<br>          -74.026675,<br>          40.683935<br>        \\],<br>        \\[<br>          -74.026675,<br>          40.877483<br>        \\],<br>        \\[<br>          -73.910408,<br>          40.877483<br>        \\],<br>        \\[<br>          -73.910408,<br>          40.3935<br>        \\]<br>      \\]<br>    \\],<br>    \"type\": \"Polygon\"<br>  }<br>} |\n| attributes | Object | When using PowerTrack, 30-Day and Full-Archive Search APIs, and Volume Streams this hash is null. Example:<br><br>\"attributes\": {} |\n",
        "line_start": 463,
        "line_end": 475
    },
    "36": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tPlace data dictionary\n\tBounding box[](#bounding-box \"Permalink to this headline\")\n\nContent: \n### Bounding box[](#bounding-box \"Permalink to this headline\")  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| coordinates | Array of Array of Array of Float | A series of longitude and latitude points, defining a box which will contain the Place entity this bounding box is related to. Each point is an array in the form of \\[longitude, latitude\\]. Points are grouped into an array per bounding box. Bounding box arrays are wrapped in one additional array to be compatible with the polygon notation. Example:<br><br>{<br>  \"coordinates\": \\[<br>    \\[<br>      \\[<br>        -74.026675,<br>        40.683935<br>      \\],<br>      \\[<br>        -74.026675,<br>        40.877483<br>      \\],<br>      \\[<br>        -73.910408,<br>        40.877483<br>      \\],<br>      \\[<br>        -73.910408,<br>        40.3935<br>      \\]<br>    \\]<br>  \\]<br>} |\n| type | String | The type of data encoded in the coordinates property. This will be \u201cPolygon\u201d for bounding boxes and \u201cPoint\u201d for Tweets with exact coordinates. Example:<br><br>\"type\":\"Polygon\" |\n",
        "line_start": 477,
        "line_end": 483
    },
    "37": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tPlace data dictionary\n\tGeo object data dictionary\n\nContent: \n### Geo object data dictionary  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| coordinates | Collection of Float | The longitude and latitude of the Tweet\u2019s location, as a collection in the form\u00a0**\\[latitude, longitude\\]**. Example:<br><br>\u00a0\u00a0**\"geo\": {**<br><br>\u00a0 \u00a0 **\"type\":** \"Point\"**,**<br><br>\u00a0 \u00a0 **\"coordinates\": \\[**<br><br>\u00a0 \u00a0 \u00a0 54.27784**,**<br><br>\u00a0 \u00a0 \u00a0 \\-0.41068<br><br>\u00a0 \u00a0 **\\]**<br><br>\u00a0 **}** |\n| type | String | The type of data encoded in the coordinates property. This will be \u201cPoint\u201d for Tweet coordinates fields. Example:<br><br>\"type\": \"Point\" |\n",
        "line_start": 485,
        "line_end": 491
    },
    "38": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tCoordinates object data dictionary\n\nContent: \n## Coordinates object data dictionary  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| coordinates | Collection of Float | The longitude and latitude of the Tweet\u2019s location, as a collection in the form **\\[longitude, latitude\\]**. Example:<br><br>\u00a0\u00a0**\"coordinates\": {**<br><br>\u00a0 \u00a0 **\"type\":** \"Point\"**,**<br><br>\u00a0 \u00a0 **\"coordinates\": \\[**<br><br>\u00a0 \u00a0 \u00a0 \\-0.41068**,**<br><br>\u00a0 \u00a0 \u00a0 54.27784<br><br>\u00a0 \u00a0 **\\]**<br><br>\u00a0 **}** |\n| type | String | The type of data encoded in the coordinates property. This will be \u201cPoint\u201d for Tweet coordinates fields. Example:<br><br>\"type\": \"Point\" |\n",
        "line_start": 493,
        "line_end": 499
    },
    "39": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tCoordinates object data dictionary\n\tDerived locations\n\nContent: \n### Derived locations  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| derived | locations object | Derived location from the profile geo enrichement  <br>  <br>\u00a0 \u00a0\u00a0**\"derived\": {**<br><br>\u00a0 \u00a0 \u00a0 **\"locations\": \\[**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **{**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"country\":** \"United Kingdom\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"country\\_code\":** \"GB\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"locality\":** \"Yorkshire\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"region\":** \"England\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"full\\_name\":** \"Yorkshire, England, United Kingdom\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"geo\": {**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"coordinates\": \\[**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \\-1.5**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 54<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\\],**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"type\":** \"point\"<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **}**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **}**<br><br>\u00a0 \u00a0 \u00a0 **\\]**<br><br>\u00a0 \u00a0 **}** |\n",
        "line_start": 501,
        "line_end": 506
    },
    "40": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tCoordinates object data dictionary\n\tExamples:\n\nContent: \n### Examples:  \n`{   \"geo\": null,   \"coordinates\": null,   \"place\": {     \"id\": \"07d9db48bc083000\",     \"url\": \"https://api.twitter.com/1.1/geo/id/07d9db48bc083000.json\",     \"place_type\": \"poi\",     \"name\": \"McIntosh Lake\",     \"full_name\": \"McIntosh Lake\",     \"country_code\": \"US\",     \"country\": \"United States\",     \"bounding_box\": {       \"type\": \"Polygon\",       \"coordinates\": [         [           [             -105.14544,             40.192138           ],           [             -105.14544,             40.192138           ],           [             -105.14544,             40.192138           ],           [             -105.14544,             40.192138           ]         ]       ]     },     \"attributes\": {            }   } }`  \n`{   \"geo\": {     \"type\": \"Point\",     \"coordinates\": [       40.74118764,       -73.9998279     ]   },   \"coordinates\": {     \"type\": \"Point\",     \"coordinates\": [       -73.9998279,       40.74118764     ]   },   \"place\": {     \"id\": \"01a9a39529b27f36\",     \"url\": \"https://api.twitter.com/1.1/geo/id/01a9a39529b27f36.json\",     \"place_type\": \"city\",     \"name\": \"Manhattan\",     \"full_name\": \"Manhattan, NY\",     \"country_code\": \"US\",     \"country\": \"United States\",     \"bounding_box\": {       \"type\": \"Polygon\",       \"coordinates\": [         [           [             -74.026675,             40.683935           ],           [             -74.026675,             40.877483           ],           [             -73.910408,             40.877483           ],           [             -73.910408,             40.683935           ]         ]       ]     },     \"attributes\": {            }   } }`\n",
        "line_start": 508,
        "line_end": 511
    },
    "41": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tCoordinates object data dictionary\n\tNext Steps\n\nContent: \n### Next Steps  \nExplore the other sub-objects that a Tweet contains:  \n* [Tweet object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/tweet)\n* [User object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/user)\n* [Entities object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities)\n* [Extended Entities object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/extended-entities)  \nEntities object\n",
        "line_start": 365,
        "line_end": 372
    },
    "42": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTwitter entities\n\nContent: \n## Twitter entities  \nJump to on this page  \n[Introduction](#intro)  \n[Entities object](#entitiesobject)  \n- [Hashtag object](#hashtags)  \n- [Media object](#media)  \n- [Media size object](#media-size)  \n- [URL object](#urls)  \n- [User mention object](#mentions)  \n- [Symbol object](#symbols)  \n- [Poll object](#polls)  \n[Retweet and Quote Tweet details](#retweets-quotes)  \n[Entities in user objects](#entities-user)  \n[Entities in Direct Messages](#entities-dm)  \n[Next Steps](#next)\n",
        "line_start": null,
        "line_end": null
    },
    "43": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tIntroduction\n\nContent: \n## Introduction  \nEntities provide metadata and additional contextual information about content posted on Twitter. The `entities` section provides arrays of common things included in Tweets: hashtags, user mentions, links, stock tickers (symbols), Twitter polls, and attached media. These arrays are convenient for developers when ingesting Tweets, since Twitter has essentially pre-processed, or pre-parsed, the text body. Instead of needing to explicitly search and find these entities in the Tweet body, your parser can go straight to this JSON section and there they are.  \nBeyond providing parsing conveniences, the `entities` section also provides useful \u2018value-add\u2019 metadata. For example, if you are using the [Enhanced URLs enrichment](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/expanded-and-enhanced-urls), URL metadata include fully-expanded URLs, as well as associated website titles and descriptions. Another example is when there are user mentions, the entities metadata include the numeric user ID, which are useful when making requests to many Twitter APIs.  \nEvery Tweet JSON payload includes an `entities` section, with the minimum set of `hashtags`, `urls`, `user_mentions`, and `symbols` attributes, even if none of those entities are part of the Tweet message. For example, if you examine the JSON for a Tweet with a body of \u201cHello World!\u201d and no attached media, the Tweet\u2019s JSON will include the following content with entity arrays containing zero items:  \n\"entities\": {\n\"hashtags\": [\n],\n\"urls\": [\n],\n\"user_mentions\": [\n],\n\"symbols\": [\n]\n}  \nNotes:  \n* media\u00a0and\u00a0polls\u00a0entities will only appear when that type of content is part of the Tweet.\n* if you are working with native media (photos, videos, or GIFs), the\u00a0[Extended Entities object](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/extended-entities)\u00a0is the way to go.\n",
        "line_start": 178,
        "line_end": 195
    },
    "44": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tEntities object\n\nContent: \n## Entities object  \nThe `entities` and `extended_entities` sections are both made up of arrays of entity _objects_. Below you will find descriptions for each of these entity objects, including data dictionaries that describe the object attribute names, types, and short description. We\u2019ll also indicate which PowerTrack Operators match these attributes, and include some sample JSON payloads.  \nA collection of common entities found in Tweets, including hashtags, links, and user mentions. This `entities` object does include a `media` attribute, but its implementation in the `entiites` section is only completely accurate for Tweets with a single photo. For all Tweets with more than one photo, a video, or animated GIF, the reader is directed to the `extended_entities` section.\n",
        "line_start": 581,
        "line_end": 584
    },
    "45": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tEntities object\n\tEntities data dictionary\n\nContent: \n### Entities data dictionary  \nThe entities object is a holder of arrays of other entity sub-objects. After illustrating the `entities` structure, data dictionaries for these sub-objects, and the Operators that match them, will be provided.  \n| Field | Type | Description |\n| --- | --- | --- |\n| hashtags | Array of [Hashtag Objects](#hashtags) | Represents hashtags which have been parsed out of the Tweet text. Example:<br><br>{<br>  \"hashtags\": \\[<br>    {<br>      \"indices\": \\[<br>        32,<br>        38<br>      \\],<br>      \"text\": \"nodejs\"<br>    }<br>  \\]<br>} |\n| media | Array of [Media Objects](#media) | Represents media elements uploaded with the Tweet. Example:<br><br>{<br>  \"media\": \\[<br>    {<br>      \"display\\_url\": \"pic.twitter.com/5J1WJSRCy9\",<br>      \"expanded\\_url\": \"https://twitter.com/nolan\\_test/status/930077847535812610/photo/1\",<br>      \"id\": 9.300778475358126e17,<br>      \"id\\_str\": \"930077847535812610\",<br>      \"indices\": \\[<br>          13,<br>          36<br>      \\],<br>      \"media\\_url\": \"http://pbs.twimg.com/media/DOhM30VVwAEpIHq.jpg\",<br>      \"media\\_url\\_https\": \"https://pbs.twimg.com/media/DOhM30VVwAEpIHq.jpg\"<br>      \"sizes\": {<br>\u00a0\u00a0 \u00a0 \u00a0    \"thumb\": {<br>               \"h\": 150,<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0 \"resize\": \"crop\",<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0 \"w\": 150<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0 },<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0 \"large\": {<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0     \"h\": 1366,<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0     \"resize\": \"fit\",<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0     \"w\": 2048<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0 },<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0 \"medium\": {<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0     \"h\": 800,<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0     \"resize\": \"fit\",<br>    \u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0 \"w\": 1200<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0 },<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0 \"small\": {<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0     \"h\": 454,<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0     \"resize\": \"fit\",<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0     \"w\": 680<br>\u00a0\u00a0 \u00a0 \u00a0\u00a0 \u00a0 }<br>\u00a0\u00a0 \u00a0 \u00a0},<br>      \"type\": \"photo\",      <br>      \"url\": \"https://t.co/5J1WJSRCy9\",<br>    }<br>  \\]<br>} |\n| urls | Array of [URL Objects](#urls) | Represents URLs included in the text of a Tweet.<br><br>Example (without Enhanced URLs enrichment enabled):<br><br>{<br>  \"urls\": \\[<br>    {<br>      \"indices\": \\[<br>        32,<br>        52<br>      \\],<br>      \"url\": \"http://t.co/IOwBrTZR\",<br>      \"display\\_url\": \"youtube.com/watch?v=oHg5SJ\u2026\",<br>      \"expanded\\_url\": \"http://www.youtube.com/watch?v=oHg5SJYRHA0\"<br>    }<br>  \\]<br>}<br><br>Example (with Enhanced URLs enrichment enabled):<br><br>{\"urls\": \\[<br>      {<br>        \"url\": \"https://t.co/D0n7a53c2l\",<br>        \"expanded\\_url\": \"http://bit.ly/18gECvy\",<br>        \"display\\_url\": \"bit.ly/18gECvy\",<br>        \"unwound\": {<br>          \"url\": \"https://www.youtube.com/watch?v=oHg5SJYRHA0\",<br>          \"status\": 200,<br>          \"title\": \"RickRoll'D\",<br>          \"description\": \"http://www.facebook.com/rickroll548 As long as trolls are still trolling, the Rick will never stop rolling.\"<br>        },<br>        \"indices\": \\[<br>          62,<br>          85<br>        \\]<br>      }<br>    \\]<br>} |\n| user\\_mentions | Array of [User Mention Objects](#mentions) | Represents other Twitter users mentioned in the text of the Tweet. Example:<br><br>{<br>  \"user\\_mentions\": \\[<br>    {<br>      \"name\": \"Twitter API\",<br>      \"indices\": \\[<br>        4,<br>        15<br>      \\],<br>      \"screen\\_name\": \"twitterapi\",<br>      \"id\": 6253282,<br>      \"id\\_str\": \"6253282\"<br>    }<br>  \\]<br>} |\n| symbols | Array of [Symbol Objects](#symbols) | Represents symbols, i.e. $cashtags, included in the text of the Tweet. Example:<br><br>{<br>  \"symbols\": \\[<br>    {<br>      \"indices\": \\[<br>        12,<br>        17<br>      \\],<br>      \"text\": \"twtr\"<br>    }<br>  \\]<br>} |\n| polls | Array of [Poll Objects](#polls) | Represents Twitter Polls included in the Tweet. Example:<br><br>{\"polls\": \\[<br>      {<br>        \"options\": \\[<br>          {<br>            \"position\": 1,<br>            \"text\": \"I read documentation once.\"<br>          },<br>          {<br>            \"position\": 2,<br>            \"text\": \"I read documentation twice.\"<br>          },<br>          {<br>            \"position\": 3,<br>            \"text\": \"I read documentation over and over again.\"<br>          }<br>        \\],<br>        \"end\\_datetime\": \"Thu May 25 22:20:27 +0000 2017\",<br>        \"duration\\_minutes\": 60<br>      }<br>    \\]<br>  } |\n",
        "line_start": 587,
        "line_end": 597
    },
    "46": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tEntities object\n\tHashtag object\n\nContent: \n### Hashtag object  \nThe `entities` section will contain a `hashtags` array containing an object for every hashtag included in the Tweet body, and include an empty array if no hashtags are present.  \nThe PowerTrack `#` Operator is used to match on the `text` attribute. The `has:hashtags` Operator will match if there is at least one item in the array.  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| indices | Array of Int | An array of integers indicating the offsets within the Tweet text where the hashtag begins and ends. The first integer represents the location of the # character in the Tweet text string. The second integer represents the location of the first character after the hashtag. Therefore the difference between the two numbers will be the length of the hashtag name plus one (for the \u2018#\u2019 character). Example:<br><br>\"indices\":\\[32,38\\] |\n| text | String | Name of the hashtag, minus the leading \u2018#\u2019 character. Example:<br><br>\"text\":\"nodejs\" |\n",
        "line_start": null,
        "line_end": null
    },
    "47": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tEntities object\n\tMedia object\n\nContent: \n### Media object  \nThe `entities` section will contain a `media` array containing a single media object if any media object has been \u2018attached\u2019 to the Tweet. If no native media has been attached, there will be no `media` array in the `entities`. For the following reasons the `extended_entities` section should be used to process Tweet native media:\n\\+ Media `type` will always indicate \u2018photo\u2019 even in cases of a video and GIF being attached to Tweet.\n\\+ Even though up to four photos can be attached, only the first one will be listed in the `entities` section.  \nThe `has:media` Operator will match if this array is populated.  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| display\\_url | String | URL of the media to display to clients. Example:<br><br>\"display\\_url\":\"pic.twitter.com/rJC5Pxsu\" |\n| expanded\\_url | String | An expanded version of display\\_url. Links to the media display page. Example:<br><br>\"expanded\\_url\": \"http://twitter.com/yunorno/status/114080493036773378/photo/1\" |\n| id  | Int64 | ID of the media expressed as a 64-bit integer. Example:<br><br>\"id\":114080493040967680 |\n| id\\_str | String | ID of the media expressed as a string. Example:<br><br>\"id\\_str\":\"114080493040967680\" |\n| indices | Array of Int | An array of integers indicating the offsets within the Tweet text where the URL begins and ends. The first integer represents the location of the first character of the URL in the Tweet text. The second integer represents the location of the first non-URL character occurring after the URL (or the end of the string if the URL is the last part of the Tweet text). Example:<br><br>\"indices\":\\[15,35\\] |\n| media\\_url | String | An http:// URL pointing directly to the uploaded media file. Example:<br><br>\"media\\_url\":\"http://pbs.twimg.com/media/DOhM30VVwAEpIHq.jpg\"<br><br>For media in direct messages, `media_url` is the same https URL as `media_url_https` and must be accessed by signing a request with the user\u2019s access token using OAuth 1.0A.<br><br>It is not possible to access images via an authenticated twitter.com session. Please visit\u00a0[this page](https://developer.twitter.com/en/docs/direct-messages/message-attachments/guides/retrieving-media)\u00a0to learn how to account for these recent change.\u00a0<br><br>You cannot directly embed these images in a web page.<br><br>See [Photo Media URL formatting](#photo_format) for how to format a photo's URL, such as `media_url_https`, based on the available `sizes`. |\n| media\\_url\\_https | String | An https:// URL pointing directly to the uploaded media file, for embedding on https pages. Example:<br><br>\"media\\_url\\_https\":\"https://p.twimg.com/AZVLmp-CIAAbkyy.jpg\"<br><br>For media in direct messages, `media_url_https` must be accessed by signing a request with the user\u2019s access token using OAuth 1.0A.<br><br>It is not possible to access images via an authenticated twitter.com session. Please visit [this page](https://developer.twitter.com/en/docs/direct-messages/message-attachments/guides/retrieving-media) to learn how to account for these recent change.\u00a0<br><br>You cannot directly embed these images in a web page.<br><br>See\u00a0[Photo Media URL formatting](#photo_format)\u00a0for\u00a0how to format a photo's URL, such as `media_url_https`, based on the available `sizes`. |\n| sizes | [Size Object](#size) | An object showing available sizes for the media file. Example:<br><br>{<br>  \"sizes\": {<br>    \"thumb\": {<br>      \"h\": 150,<br>      \"resize\": \"crop\",<br>      \"w\": 150<br>    },<br>    \"large\": {<br>      \"h\": 1366,<br>      \"resize\": \"fit\",<br>      \"w\": 2048<br>    },<br>    \"medium\": {<br>      \"h\": 800,<br>      \"resize\": \"fit\",<br>      \"w\": 1200<br>    },<br>    \"small\": {<br>      \"h\": 454,<br>      \"resize\": \"fit\",<br>      \"w\": 680<br>    }<br>  }<br>}<br><br>See\u00a0[Photo Media URL formatting](#photo_format)\u00a0for\u00a0how to format a photo's URL, such as `media_url_https`, based on the available `sizes`. |\n| source\\_status\\_id | Int64 | Nullable. For Tweets containing media that was originally associated with a different tweet, this ID points to the original Tweet. Example:<br><br>\"source\\_status\\_id\": 205282515685081088 |\n| source\\_status\\_id\\_str | Int64 | Nullable. For Tweets containing media that was originally associated with a different tweet, this string-based ID points to the original Tweet. Example:<br><br>\"source\\_status\\_id\\_str\": \"205282515685081088\" |\n| type | String | Type of uploaded media. Possible types include photo, video, and animated\\_gif. Example:<br><br>\"type\":\"photo\" |\n| url | String | Wrapped URL for the media link. This corresponds with the URL embedded directly into the raw Tweet text, and the values for the `indices` parameter. Example:<br><br>\"url\":\"http://t.co/rJC5Pxsu\" |\n",
        "line_start": null,
        "line_end": null
    },
    "48": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tEntities object\n\tMedia size objects\n\nContent: \n### Media size objects  \nAll Tweets with native media (photos, video, and GIFs) will include a set of \u2018thumb\u2019, \u2018small\u2019, \u2018medium\u2019, and \u2018large\u2019 sizes with height and width pixel sizes. \u00a0For photos and preview image media URLs,\u00a0[Photo Media URL formatting](#photo_format)\u00a0specifies how to construct different URLs for loading different sized photo media.  \n#### Sizes object  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| thumb | [Size Object](#size) | Information for a thumbnail-sized version of the media. Example:<br><br>\"thumb\":{\"h\":150, \"resize\":\"crop\", \"w\":150}<br><br>Thumbnail-sized photo media will be limited to _fill_ a 150x150 boundary and cropped. |\n| large | [Size Object](#size) | Information for a large-sized version of the media. Example:<br><br>\"large\":{\"h\":454, \"resize\":\"fit\", \"w\":680}<br><br>Small-sized photo media will be limited to _fit_ within a 680x680 boundary. |\n| medium | [Size Object](#size) | Information for a medium-sized version of the media. Example:<br><br>\"medium\":{\"h\":800, \"resize\":\"fit\", \"w\":1200}<br><br>Medium-sized photo media will be limited to _fit_ within a 1200x1200 boundary. |\n| small | [Size Object](#size) | Information for a small-sized version of the media. Example:<br><br>\"small\":{\"h\":1366, \"resize\":\"fit\", \"w\":2048}<br><br>Large-sized photo media will be limited to _fit_ within a 2048x2048 boundary. |  \n#### Size object  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| w   | Int | Width in pixels of this size. Example:<br><br>\"w\":150 |\n| h   | Int | Height in pixels of this size. Example:<br><br>\"h\":150 |\n| resize | String | Resizing method used to obtain this size. A value of\u00a0_fit_\u00a0means that the media was resized to fit one dimension, keeping its native aspect ratio. A value of\u00a0_crop_\u00a0means that the media was cropped in order to fit a specific resolution. Example:<br><br>\"resize\":\"crop\" |\n",
        "line_start": 636,
        "line_end": 653
    },
    "49": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tEntities object\n\tPhoto Media URL Formatting\n\nContent: \n### Photo Media URL Formatting  \nPhoto media on Twitter can be loaded in different sizes. \u00a0It is best to load the smallest size image that is larger enough to fit into a particular image viewport. \u00a0To load different sizes, the [Size Object](#size) and [media\\_url](#media) (or [media\\_url\\_https](#media)) need to be combined in a particular format. \u00a0We'll use the [media entity](#entitiesobject) example object already provided for our example in constructing a photo media URL.  \nThe `media_url` or `media_url_https` on their own can be loaded, which will result in the medium variant being loaded by default. \u00a0It is preferable, however, to provide a fully formatted photo media URL when possible.  \nThere are three parts of a photo media URL:  \n|     |     |\n| --- | --- |\n| Base URL | The base URL is the media URL without the file extension.<br><br>For example:  <br><br>\"media\\_url\\_https\": \"https://pbs.twimg.com/media/DOhM30VVwAEpIHq.jpg\",<br><br>The base URL is then:  <br><br>_https://pbs.twimg.com/media/DOhM30VVwAEpIHq_ |\n| Format | The format is the type of photo the image is formatted as. \u00a0Possible formats are _jpg_ or _png_, which is provided as the extension of the media URL.<br><br>For example:  <br><br>\"media\\_url\\_https\": \"https://pbs.twimg.com/media/DOhM30VVwAEpIHq.jpg\",<br><br>The format is then: _jpg_ |\n| Name | The name is the field name of the size to load.<br><br>For example:<br><br>{  <br>\u00a0\"sizes\": {  <br>\u00a0\u00a0\u00a0\"thumb\": {  <br>\u00a0\u00a0\u00a0\u00a0\u00a0\"h\": 150,  <br>\u00a0\u00a0\u00a0\u00a0\u00a0\"resize\": \"crop\",  <br>\u00a0\u00a0\u00a0\u00a0\u00a0\"w\": 150  <br>\u00a0\u00a0\u00a0},  <br>\u00a0\u00a0\u00a0\"large\": {  <br>\u00a0\u00a0\u00a0\u00a0\u00a0\"h\": 1366,  <br>\u00a0\u00a0\u00a0\u00a0\u00a0\"resize\": \"fit\",  <br>\u00a0\u00a0\u00a0\u00a0\u00a0\"w\": 2048  <br>\u00a0\u00a0\u00a0},  <br>\u00a0\u00a0\u00a0\"medium\": {  <br>\u00a0\u00a0\u00a0\u00a0\u00a0\"h\": 800,  <br>\u00a0\u00a0\u00a0\u00a0\u00a0\"resize\": \"fit\",  <br>\u00a0\u00a0\u00a0\u00a0\u00a0\"w\": 1200  <br>\u00a0\u00a0\u00a0},  <br>\u00a0\u00a0\u00a0\"small\": {  <br>\u00a0\u00a0\u00a0\u00a0\u00a0\"h\": 454,  <br>\u00a0\u00a0\u00a0\u00a0\u00a0\"resize\": \"fit\",  <br>\u00a0\u00a0\u00a0\u00a0\u00a0\"w\": 680  <br>\u00a0\u00a0\u00a0}  <br>\u00a0}  <br>}<br><br>The name when loading the large-sized photo would be: _large_ |  \nWe take these three parts (base URL, format and name) and combine them into the photo media URL to load. \u00a0There are 2 formats for loading images this way, _legacy_ and _modern_. \u00a0All image loads should stop using the _legacy_ format and use the _modern_ format. \u00a0Using the _modern_ format will result in better CDN hit rate for the caller, thus improving load latencies by being less likely to have to generate and load the media from the Data Center.  \n|     |     |\n| --- | --- |\n| Legacy format | The legacy format is deprecated. \u00a0Photo media loads should all move to the modern format.<br><br>_<base\\_url>.<format>:<name>_  <br><br>For example:  <br><br>_https://pbs.twimg.com/media/DOhM30VVwAEpIHq.jpg:large  <br>_ |\n| Modern format | The modern format for loading photos was established at Twitter in 2015 and has been defacto since 2017. \u00a0All photo media loads should move to this format.<br><br>_<base\\_url>?format=<format>&name=<name>_  <br><br>For example:  <br><br>_https://pbs.twimg.com/media/DOhM30VVwAEpIHq?format=jpg&name=large  <br>_<br><br>Note: the items in the query string for the photo media URL are in alphabetical order. \u00a0If media loading were to add any additional query items, alphabetical ordering would continue to be necessary. \u00a0For example, if there was the hypothetical new query item called _preferred\\_format_, it would go after _format_ and _name_ in the query string. |\n",
        "line_start": 659,
        "line_end": 673
    },
    "50": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tEntities object\n\tURL object\n\nContent: \n### URL object  \nThe `entities` section will contain a `urls` array containing an object for every link included in the Tweet body, and include an empty array if no links are present.  \nThe `has:links` Operator will match if there is at least one item in the array. The `url:` Operator is used to match on the `expanded_url` attribute. If you are using the [Expanded URL enrichment](http://support.gnip.com/enrichments/expanded_urls.html), the `url:` Operator is used to match on the `unwound.url` (fully unwound URL) attribute. If you are using the [Exhanced URL enrichment](http://support.gnip.com/enrichments/enhanced_urls.html), the `url_title:` and `url_decription:` Operators are used to match on the `unwound.title` and `unwound.description` attributes.  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| display\\_url | String | URL pasted/typed into Tweet. Example:<br><br>\"display\\_url\":\"bit.ly/2so49n2\" |\n| expanded\\_url | String | Expanded version of \\`\\` display\\_url\\`\\` . Example:<br><br>\"expanded\\_url\":\"http://bit.ly/2so49n2\" |\n| indices | Array of Int | An array of integers representing offsets within the Tweet text where the URL begins and ends. The first integer represents the location of the first character of the URL in the Tweet text. The second integer represents the location of the first non-URL character after the end of the URL. Example:<br><br>\"indices\":\\[30,53\\] |\n| url | String | Wrapped URL, corresponding to the value embedded directly into the raw Tweet text, and the values for the indices parameter. Example:<br><br>\"url\":\"https://t.co/yzocNFvJuL\" |  \nIf you are using the Expanded and/or Enhanced URL enrichments, the following metadata is available under the `unwound` attribute:  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| url | String | The fully unwound version of the link included in the Tweet. Example:<br><br>\"url\":\"https://blog.twitter.com/en\\_us/topics/insights/2016/using-twitter-as-a-go-to-communication-channel-during-severe-weather-events.html\" |\n| status | Int | Final HTTP status of the unwinding process, a '200' indicating success. Example:<br><br>200 |\n| title | String | HTML title for the link. Example:<br><br>\"title\":\"Using Twitter as a \u2018go-to\u2019 communication channel during severe weather\" |\n| description | String | HTML description for the link. Example:<br><br>\"description\":\"Using Twitter as a \u2018go-to\u2019 communication channel during severe weather\" |\n",
        "line_start": null,
        "line_end": null
    },
    "51": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tEntities object\n\tUser mention object\n\nContent: \n### User mention object  \nThe `entities` section will contain a `user_mentions` array containing an object for every user mention included in the Tweet body, and include an empty array if no user mention is present.  \nThe PowerTrack `@` Operator is used to match on the `screen_name` attribute. The `has:mentions` Operator will match if there is at least one item in the array.  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| id  | Int64 | ID of the mentioned user, as an integer. Example:<br><br>\"id\":6253282 |\n| id\\_str | String | If of the mentioned user, as a string. Example:<br><br>\"id\\_str\":\"6253282\" |\n| indices | Array of Int | An array of integers representing the offsets within the Tweet text where the user reference begins and ends. The first integer represents the location of the \u2018@\u2019 character of the user mention. The second integer represents the location of the first non-screenname character following the user mention. Example:<br><br>\"indices\":\\[4,15\\] |\n| name | String | Display name of the referenced user. Example:<br><br>\"name\":\"Twitter API\" |\n| screen\\_name | String | Screen name of the referenced user. Example:<br><br>\"screen\\_name\":\"twitterapi\" |\n",
        "line_start": null,
        "line_end": null
    },
    "52": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tEntities object\n\tSymbol object\n\nContent: \n### Symbol object  \nThe `entities` section will contain a `symbols` array containing an object for every $cashtag included in the Tweet body, and include an empty array if no symbol is present.  \nThe PowerTrack `$` Operator is used to match on the `text` attribute. The `has:symbols` Operator will match if there is at least one item in the array.  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| indices | Array of Int | An array of integers indicating the offsets within the Tweet text where the symbol/cashtag begins and ends. The first integer represents the location of the $ character in the Tweet text string. The second integer represents the location of the first character after the cashtag. Therefore the difference between the two numbers will be the length of the hashtag name plus one (for the \u2018$\u2019 character). Example:<br><br>\"indices\":\\[12,17\\] |\n| text | String | Name of the cashhtag, minus the leading \u2018$\u2019 character. Example:<br><br>\"text\":\"twtr\" |\n",
        "line_start": null,
        "line_end": null
    },
    "53": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tEntities object\n\tPoll object\n\nContent: \n### Poll object  \nThe `entities` section will contain a `polls` array containing a single `poll` object if the Tweet contains a poll. If no poll is included, there will be no `polls` array in the `entities` section.  \nNote that these Poll metadata are only available with the following Enterprise APIs:  \n* Volume streams ([Decahose](https://developer.twitter.com/en/docs/twitter-api/enterprise/decahose-api/overview)\u00a0)\n* [Real-time PowerTrack](https://developer.twitter.com/en/docs/twitter-api/enterprise/powertrack-api/overview)\n* [Historical PowerTrack](https://developer.twitter.com/en/docs/twitter-api/enterprise/historical-powertrack-api/overview)\n* Twitter Search APIs ([Full-Archive Search](https://developer.twitter.com/en/docs/twitter-api/enterprise/search-api/overview)\u00a0and\u00a0[30-Day Search](https://developer.twitter.com/en/docs/twitter-api/enterprise/search-api/overview))  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| options | Array of Option Object | An array of options, each having a poll position, and the text for that position. Example:<br><br>{\"options\": \\[<br>          {<br>            \"position\": 1,<br>            \"text\": \"I read documentation once.\"<br>          }<br>      \\]<br>} |\n| end\\_datetime | String | Time stamp (UTC) of when poll ends. Example:<br><br>\"end\\_datetime\": \"Thu May 25 22:20:27 +0000 2017\" |\n| duration\\_minutes | String | Duration of poll in minutes. Example:<br><br>\"duration\\_minutes\": 60 |\n",
        "line_start": 731,
        "line_end": 744
    },
    "54": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tRetweet and Quote Tweet details\n\nContent: \n## Retweet and Quote Tweet details  \nFrom the Twitter API perspective, Retweet and Quote Tweets are special kinds of Tweets that contain the original Tweet as an embedded object. So Retweets and Quote Tweet objects are parents of a child 'original' Tweet (and thus double the size).\u00a0Retweets have a top-level \"retweeted\\_status\" object, and Quoted Tweets have a \"quoted\\_status\" object. For consistency, these top-level Retweet and Quote Tweet objects also have a\u00a0text\u00a0property and associated\u00a0entities. However, the entities at the top level can differ from the entities provided by the embedded 'original' entities. In case of Retweets, new text is prepended to the original Tweet body. For Quoted Tweets, new text is appended to the Tweet body.  \nIn general, the best practice is to retrieve the text, entities, original author and date from the original Tweet in\u00a0retweeted\\_status\u00a0whenever this exists. An exception is getting Twitter entities that are part of the additive Quote. See below for more details and tips.\n",
        "line_start": 749,
        "line_end": 752
    },
    "55": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tRetweet and Quote Tweet details\n\tRetweets\n\nContent: \n### Retweets  \nAn important detail with Retweets is that no additional Twitter _entities_ can be added to the Tweet. Users can not add hashtags, URLs or other details when they Retweet. However, the Retweet (top-level) text\u00a0attribute is composed of the original Tweet text with \u201cRT @username: \u201d prepended.  \nIn some cases, especially with accounts with long user names, the combination of these new characters and the original Tweet body can easily exceed the original Tweet text length limit of 140 characters. In order to preserve support for 140 character based display and storage, the top-level body truncates the end of the Tweet body and adds an ellipsis (\u201c\u2026\u201d).\u00a0Consequently, some top-level\u00a0entities positioned at the end of the original Tweet might be incorrect or missing, for instance in the case of a truncated hashtag or URL\u00a0entry.  \nThis Tweet,\u00a0 https://twitter.com/FloodSocial/status/907974220298125312, has the following Tweet text:  \nJust another test Tweet that needs to be exactly 140 characters with trailing URL and hashtag [http://wapo.st/2w8iwPQ](https://t.co/R5iMzxWelp \"http://wapo.st/2w8iwPQ\")\u00a0 [#Testing](https://twitter.com/hashtag/Testing?src=hash)  \nIn the above example, both the URL and hashtag were affected. Since the hashtag was completely truncated and the URL partially truncated, these are missing from the the top-level\u00a0entities. You will also notice the additional\u00a0user\\_mentions\u00a0top-level entity coming from the \u201cRT @floodsocial: \u201d prefix on the\u00a0text\u00a0field.  \nHowever, the Tweet\u00a0text\u00a0and\u00a0entities\u00a0in\u00a0retweeted\\_status\u00a0perfectly reflect the original Tweet with no truncation or incorrect entities, hence our recommendation to rely on the nested _retweeted\\_status_\u00a0object for Retweets.\n",
        "line_start": 755,
        "line_end": 762
    },
    "56": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tRetweet and Quote Tweet details\n\tQuote Tweets\n\nContent: \n### Quote Tweets  \nQuote Tweets were introduced in 2016, and differ from Retweets in that when you \"quote\" a Tweet you are adding new content \"on top\" of a shared Tweet. This new content can include nearly anything an original Tweet can have, including new text, hashtags, mentions, and URLs.  \nQuote Tweets can contain native media (photos, videos, and GIFs), and will appear under the entities object.  \nSince Twitter entities can be added, the Quote entities are likely different from the original entities.  \nIn this example, a new URL and hashtag were positioned at the end of the Quote Tweet.  \nThis Tweet, https://twitter.com/FloodSocial/status/907983973225160704, has the following Tweet text:  \nstrange and equally tragic when islands flood... trans-atlantic testing of quote tweets | [@thisuser](https://twitter.com/andypiper)\u00a0[@thatuser](https://twitter.com/johnd)\u00a0[http://bit.ly/2vMMDuu](https://t.co/fzFgMhWlPO \"http://bit.ly/2vMMDuu\")\u00a0 [#testing](https://twitter.com/hashtag/testing?src=hash)  \nIn this case, the top-level entities do not reflect the Quote details.  \nHowever, the Tweet\u00a0text\u00a0and\u00a0entities\u00a0in extended\\_tweet perfectly reflect the Quote Tweet with no truncation or incorrect entities, hence our recommendation to rely on the nested _extended\\_tweet_\u00a0object for Quote Tweets.\n",
        "line_start": 769,
        "line_end": 778
    },
    "57": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tEntities for user object\n\nContent: \n## Entities for user object  \nEntities for User Objects describe URLs that appear in the user defined profile URL and description fields. They do not describe\u00a0hashtags\u00a0or\u00a0user\\_mentions. Unlike Tweet entities, user entities can apply to multiple fields within its parent object \u2014 to disambiguate, you will find a parent nodes called\u00a0url\u00a0and\u00a0description\u00a0that indicate which field contains the entitized URL.  \nIn this example, the user\u00a0url\u00a0field contains a\u00a0t.co\u00a0link that is fully expanded within the\u00a0entities/url/urls\\[0\\]\u00a0node of the response. The user does not have a wrapped URL in their description.\n",
        "line_start": 787,
        "line_end": 790
    },
    "58": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tEntities for user object\n\tJSON example\n\nContent: \n### JSON example  \n`{   \"id\": 6253282,   \"id_str\": \"6253282\",   \"name\": \"Twitter API\",   \"screen_name\": \"twitterapi\",   \"location\": \"San Francisco, CA\",   \"description\": \"The Real Twitter API. I tweet about API changes, service issues and happily answer questions about Twitter and our API. Don't get an answer? It's on my website.\",   \"url\": \"http:\\/\\/t.co\\/78pYTvWfJd\",   \"entities\": {     \"url\": {       \"urls\": [         {           \"url\": \"http:\\/\\/t.co\\/78pYTvWfJd\",           \"expanded_url\": \"http:\\/\\/dev.twitter.com\",           \"display_url\": \"dev.twitter.com\",           \"indices\": [             0,             22           ]         }       ]     },     \"description\": {       \"urls\": [                ]     }   } }`\n",
        "line_start": 793,
        "line_end": 795
    },
    "59": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tEntities for user object\n\tNext Steps\n\nContent: \n### Next Steps  \nExplore the other sub-objects that a Tweet contains:  \n* [Tweet object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/tweet)\n* [User object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/user)\n* [Extended Entities object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/extended-entities)\n* [Tweet geo objects and data dictionaries](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo)  \nExtended entities object\n",
        "line_start": 365,
        "line_end": 372
    },
    "60": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTwitter extended entities\n\nContent: \n## Twitter extended entities  \nJump to on this page  \n[Introduction](#intro)  \n[Extended Entities object](#extended-entities-object)  \n[Example Tweets and JSON payloads](#example-json)  \n- [Tweet with four native photos](#tweet-photos)  \n- [Tweet with native video](#tweet-video)  \n- [Tweet with an animated GIF](#tweet-gif)  \n[Next Steps](#next)\n",
        "line_start": null,
        "line_end": null
    },
    "61": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tIntroduction\n\nContent: \n## Introduction  \nIf a Tweet contains native media (shared with the Tweet user-interface as opposed via a link to elsewhere), there will also be a\u00a0extended\\_entities\u00a0section. When it comes to any native media (photo, video, or GIF), the\u00a0extended\\_entities\u00a0is the preferred metadata source for several reasons. Currently, up to four photos can be attached to a Tweet. The\u00a0entities\u00a0metadata will only contain the first photo (until 2014, only one photo could be included), while the\u00a0extended\\_entities\u00a0section will include all attached photos. With native media, another deficiency of the\u00a0entities.media\u00a0metadata is that the media type will always indicate \u2018photo\u2019, even in cases where the attached media is a video or animated GIF. The actual type of media is specified in the\u00a0extended\\_entities.media\\[\\].type\u00a0attribute and is set to either\u00a0_photo_,\u00a0_video_, or\u00a0_animated\\_gif_. For these reasons, if you are working with native media, the\u00a0extended\\_entities\u00a0metadata is the way to go.  \nAll Tweets with attached photos, videos and animated GIFs will include an `extended_entities` JSON object. The `extended_entities` object contains a single `media` array of `media` objects (see the `entities` section for its data dictionary). No other entity types, such as hashtags and links, are included in the `extended_entities` section. The `media` object in the `extended_entities` section is identical in structure to the one included in the `entities` section.  \nTweets can only have one type of media attached to it. For photos, up to four photos can be attached. For videos and GIFs, one can be attached. Since the media `type` metadata in the `extended_entities` section correctly indicates the media type (\u2018photo\u2019, \u2018video\u2019 or \u2018animated\\_gif\u2019), and supports up to 4 photos, it is the preferred metadata source for native media.  \n{\n\"extended_entities\": {\n\"media\": [  \n]\n}\n}\n",
        "line_start": 178,
        "line_end": 188
    },
    "62": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tExample Tweets and JSON payloads\n\nContent: \n## Example Tweets and JSON payloads  \nBelow are some example Tweets and their associated entities metadata.  \nTweet with four native photos  \nTweet with hashtag, user mention, cashtag, URL, and four native photos:  \n> Test Tweet with [@mentionThis](https://twitter.com/MentionThis) [$twtr](https://twitter.com/search?q=%24twtr&src=ctag) [https://t.co/RzmrQ6wAzD](https://t.co/RzmrQ6wAzD) [#hashtag](https://twitter.com/hashtag/hashtag?src=hash) [pic.twitter.com/9r69akA484](https://t.co/9r69akA484)\n>\n> \u2014 @FloodSocial (@FloodSocial) [May 8, 2017](https://twitter.com/FloodSocial/status/861627479294746624)  \nHere is the `entities` section for this Tweet:  \n{\n\"entities\": {\n\"hashtags\": [\n{\n\"text\": \"hashtag\",\n\"indices\": [\n59,\n67\n]\n}\n],\n\"urls\": [\n{\n\"url\": \"https://t.co/RzmrQ6wAzD\",\n\"expanded_url\": \"http://bit.ly/2pUk4be\",\n\"display_url\": \"bit.ly/2pUk4be\",\n\"unwound\": {\n\"url\": \"https://blog.gnip.com/tweeting-in-the-rain/\",\n\"status\": 200,\n\"title\": \"Tweeting in the Rain, Part 1 - Gnip Blog - Social Data and Data Science Blog\",\n\"description\": \"If you would have told me a few years ago that one day I\u2019d be comparing precipitation and social media time-series data, I would have assumed you were joking. \u00a0For 13 years at OneRain I helped develop software and monitoring \u2026 Continue reading \u2192\"\n},\n\"indices\": [\n35,\n58\n]\n}\n],\n\"user_mentions\": [\n{\n\"screen_name\": \"MentionThis\",\n\"name\": \"Just Me\",\n\"id\": 50247739,\n\"id_str\": \"50247739\",\n\"indices\": [\n16,\n28\n]\n}\n],\n\"symbols\": [\n{\n\"text\": \"twtr\",\n\"indices\": [\n29,\n34\n]\n}\n],\n\"media\": [\n{\n\"id\": 861627472244162561,\n\"id_str\": \"861627472244162561\",\n\"indices\": [\n68,\n91\n],\n\"media_url\": \"http://pbs.twimg.com/media/C_UdnvPUwAE3Dnn.jpg\",\n\"media_url_https\": \"https://pbs.twimg.com/media/C_UdnvPUwAE3Dnn.jpg\",\n\"url\": \"https://t.co/9r69akA484\",\n\"display_url\": \"pic.twitter.com/9r69akA484\",\n\"expanded_url\": \"https://twitter.com/FloodSocial/status/861627479294746624/photo/1\",\n\"type\": \"photo\",\n\"sizes\": {\n\"medium\": {\n\"w\": 1200,\n\"h\": 900,\n\"resize\": \"fit\"\n},\n\"small\": {\n\"w\": 680,\n\"h\": 510,\n\"resize\": \"fit\"\n},\n\"thumb\": {\n\"w\": 150,\n\"h\": 150,\n\"resize\": \"crop\"\n},\n\"large\": {\n\"w\": 2048,\n\"h\": 1536,\n\"resize\": \"fit\"\n}\n}\n}\n]\n}\n}  \nOnly in this \u2018extended\u2019 payload below will you find the four (maximum) native photos. Notice that the first photo in the array is the same as the single photo included in the non-extended Twitter _entities_ section. The _media_ metadata structure for photos is the same for both _entities_ and _extended\\_entities_ sections.  \nHere is the `extented_entities` section for this Tweet:  \n{\n\"extended_entities\": {\n\"media\": [\n{\n\"id\": 861627472244162561,\n\"id_str\": \"861627472244162561\",\n\"indices\": [\n68,\n91\n],\n\"media_url\": \"http://pbs.twimg.com/media/C_UdnvPUwAE3Dnn.jpg\",\n\"media_url_https\": \"https://pbs.twimg.com/media/C_UdnvPUwAE3Dnn.jpg\",\n\"url\": \"https://t.co/9r69akA484\",\n\"display_url\": \"pic.twitter.com/9r69akA484\",\n\"expanded_url\": \"https://twitter.com/FloodSocial/status/861627479294746624/photo/1\",\n\"type\": \"photo\",\n\"sizes\": {\n\"medium\": {\n\"w\": 1200,\n\"h\": 900,\n\"resize\": \"fit\"\n},\n\"small\": {\n\"w\": 680,\n\"h\": 510,\n\"resize\": \"fit\"\n},\n\"thumb\": {\n\"w\": 150,\n\"h\": 150,\n\"resize\": \"crop\"\n},\n\"large\": {\n\"w\": 2048,\n\"h\": 1536,\n\"resize\": \"fit\"\n}\n}\n},\n{\n\"id\": 861627472244203520,\n\"id_str\": \"861627472244203520\",\n\"indices\": [\n68,\n91\n],\n\"media_url\": \"http://pbs.twimg.com/media/C_UdnvPVYAAZbEs.jpg\",\n\"media_url_https\": \"https://pbs.twimg.com/media/C_UdnvPVYAAZbEs.jpg\",\n\"url\": \"https://t.co/9r69akA484\",\n\"display_url\": \"pic.twitter.com/9r69akA484\",\n\"expanded_url\": \"https://twitter.com/FloodSocial/status/861627479294746624/photo/1\",\n\"type\": \"photo\",\n\"sizes\": {\n\"small\": {\n\"w\": 680,\n\"h\": 680,\n\"resize\": \"fit\"\n},\n\"thumb\": {\n\"w\": 150,\n\"h\": 150,\n\"resize\": \"crop\"\n},\n\"medium\": {\n\"w\": 1200,\n\"h\": 1200,\n\"resize\": \"fit\"\n},\n\"large\": {\n\"w\": 2048,\n\"h\": 2048,\n\"resize\": \"fit\"\n}\n}\n},\n{\n\"id\": 861627474144149504,\n\"id_str\": \"861627474144149504\",\n\"indices\": [\n68,\n91\n],\n\"media_url\": \"http://pbs.twimg.com/media/C_Udn2UUQAADZIS.jpg\",\n\"media_url_https\": \"https://pbs.twimg.com/media/C_Udn2UUQAADZIS.jpg\",\n\"url\": \"https://t.co/9r69akA484\",\n\"display_url\": \"pic.twitter.com/9r69akA484\",\n\"expanded_url\": \"https://twitter.com/FloodSocial/status/861627479294746624/photo/1\",\n\"type\": \"photo\",\n\"sizes\": {\n\"medium\": {\n\"w\": 1200,\n\"h\": 900,\n\"resize\": \"fit\"\n},\n\"small\": {\n\"w\": 680,\n\"h\": 510,\n\"resize\": \"fit\"\n},\n\"thumb\": {\n\"w\": 150,\n\"h\": 150,\n\"resize\": \"crop\"\n},\n\"large\": {\n\"w\": 2048,\n\"h\": 1536,\n\"resize\": \"fit\"\n}\n}\n},\n{\n\"id\": 861627474760708096,\n\"id_str\": \"861627474760708096\",\n\"indices\": [\n68,\n91\n],\n\"media_url\": \"http://pbs.twimg.com/media/C_Udn4nUMAAgcIa.jpg\",\n\"media_url_https\": \"https://pbs.twimg.com/media/C_Udn4nUMAAgcIa.jpg\",\n\"url\": \"https://t.co/9r69akA484\",\n\"display_url\": \"pic.twitter.com/9r69akA484\",\n\"expanded_url\": \"https://twitter.com/FloodSocial/status/861627479294746624/photo/1\",\n\"type\": \"photo\",\n\"sizes\": {\n\"small\": {\n\"w\": 680,\n\"h\": 680,\n\"resize\": \"fit\"\n},\n\"thumb\": {\n\"w\": 150,\n\"h\": 150,\n\"resize\": \"crop\"\n},\n\"medium\": {\n\"w\": 1200,\n\"h\": 1200,\n\"resize\": \"fit\"\n},\n\"large\": {\n\"w\": 2048,\n\"h\": 2048,\n\"resize\": \"fit\"\n}\n}\n}\n]\n}\n}\n",
        "line_start": 843,
        "line_end": 1092
    },
    "63": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet with native video\n\nContent: \n## Tweet with native video  \nBelow is the extended entities metadata for this Tweet with a video:  \n> St. Vrain River @ Crane Hollow [pic.twitter.com/TLSTTOvvmP](https://t.co/TLSTTOvvmP)\n>\n> \u2014 @FloodSocial demo (@FloodSocial) [May 29, 2017](https://twitter.com/FloodSocial/status/869318041078820864)  \n{\n\"extended_entities\": {\n\"media\": [\n{\n\"id\": 869317980307415040,\n\"id_str\": \"869317980307415040\",\n\"indices\": [\n31,\n54\n],\n\"media_url\": \"http://pbs.twimg.com/ext_tw_video_thumb/869317980307415040/pu/img/t_E6wyADk_PvxuzF.jpg\",\n\"media_url_https\": \"https://pbs.twimg.com/ext_tw_video_thumb/869317980307415040/pu/img/t_E6wyADk_PvxuzF.jpg\",\n\"url\": \"https://t.co/TLSTTOvvmP\",\n\"display_url\": \"pic.twitter.com/TLSTTOvvmP\",\n\"expanded_url\": \"https://twitter.com/FloodSocial/status/869318041078820864/video/1\",\n\"type\": \"video\",\n\"sizes\": {\n\"small\": {\n\"w\": 340,\n\"h\": 604,\n\"resize\": \"fit\"\n},\n\"large\": {\n\"w\": 720,\n\"h\": 1280,\n\"resize\": \"fit\"\n},\n\"thumb\": {\n\"w\": 150,\n\"h\": 150,\n\"resize\": \"crop\"\n},\n\"medium\": {\n\"w\": 600,\n\"h\": 1067,\n\"resize\": \"fit\"\n}\n},\n\"video_info\": {\n\"aspect_ratio\": [\n9,\n16\n],\n\"duration_millis\": 10704,\n\"variants\": [\n{\n\"bitrate\": 320000,\n\"content_type\": \"video/mp4\",\n\"url\": \"https://video.twimg.com/ext_tw_video/869317980307415040/pu/vid/180x320/FMei8yCw7yc_Z7e-.mp4\"\n},\n{\n\"bitrate\": 2176000,\n\"content_type\": \"video/mp4\",\n\"url\": \"https://video.twimg.com/ext_tw_video/869317980307415040/pu/vid/720x1280/octt5pFbISkef8RB.mp4\"\n},\n{\n\"bitrate\": 832000,\n\"content_type\": \"video/mp4\",\n\"url\": \"https://video.twimg.com/ext_tw_video/869317980307415040/pu/vid/360x640/2OmqK74SQ9jNX8mZ.mp4\"\n},\n{\n\"content_type\": \"application/x-mpegURL\",\n\"url\": \"https://video.twimg.com/ext_tw_video/869317980307415040/pu/pl/wcJQJ2nxiFU4ZZng.m3u8\"\n}\n]\n}\n}\n]\n}\n}  \nWhen an advertiser chooses to limit video playback to just Twitter owned and operated platforms, the `video_info` object will be replaced with an `additional_media_info` object.  \nThe `additional_media_info` will contain additional media info provided by the publisher, such as `title`, `description` and `embeddable flag`. Video content is made available only to Twitter official clients when `embeddable=false`. In this case, all video URLs provided in the payload will be Twitter-based, so the user can open the video in a Twitter owned property by clicking the link.  \nHere is an example of what the extended entities object will look like in this situation:  \n{\n\"extended_entities\": {\n\"media\": [\n{\n\"id\": 924685332347469824,\n\"id_str\": \"924685332347469824\",\n\"indices\": [\n49,\n72\n],\n\"media_url\": \"http://pbs.twimg.com/media/DNUkdLMVwAEzj8K.jpg\",\n\"media_url_https\": \"https://pbs.twimg.com/media/DNUkdLMVwAEzj8K.jpg\",\n\"url\": \"https://t.co/90xOJqKMox\",\n\"display_url\": \"pic.twitter.com/90xOJqKMox\",\n\"expanded_url\": \"https://twitter.com/nyjets/status/924685391524798464/video/1\",\n\"type\": \"photo\",\n\"sizes\": {\n\"small\": {\n\"w\": 680,\n\"h\": 383,\n\"resize\": \"fit\"\n},\n\"medium\": {\n\"w\": 1200,\n\"h\": 675,\n\"resize\": \"fit\"\n},\n\"large\": {\n\"w\": 1280,\n\"h\": 720,\n\"resize\": \"fit\"\n},\n\"thumb\": {\n\"w\": 150,\n\"h\": 150,\n\"resize\": \"crop\"\n}\n},\n\"additional_media_info\": {\n\"title\": \"#ATLvsNYJ: Tomlinson TD from McCown\",\n\"description\": \"NFL\",\n\"embeddable\": false,\n\"monetizable\": true\n}\n}\n]\n}\n}  \nAs discussed above, here is the `entities` section that incorrectly has the `type` set to \u2018photo\u2019. Again, the `extended_entities` section is preferred for all native media types, including \u2018video\u2019 and \u2018animated\\_gif\u2019.  \n{\n\"entities\": {\n\"hashtags\": [  \n],\n\"urls\": [  \n],\n\"user_mentions\": [  \n],\n\"symbols\": [  \n],\n\"media\": [\n{\n\"id\": 869317980307415040,\n\"id_str\": \"869317980307415040\",\n\"indices\": [\n31,\n54\n],\n\"media_url\": \"http://pbs.twimg.com/ext_tw_video_thumb/869317980307415040/pu/img/t_E6wyADk_PvxuzF.jpg\",\n\"media_url_https\": \"https://pbs.twimg.com/ext_tw_video_thumb/869317980307415040/pu/img/t_E6wyADk_PvxuzF.jpg\",\n\"url\": \"https://t.co/TLSTTOvvmP\",\n\"display_url\": \"pic.twitter.com/TLSTTOvvmP\",\n\"expanded_url\": \"https://twitter.com/FloodSocial/status/869318041078820864/video/1\",\n\"type\": \"photo\",\n\"sizes\": {\n\"small\": {\n\"w\": 340,\n\"h\": 604,\n\"resize\": \"fit\"\n},\n\"large\": {\n\"w\": 720,\n\"h\": 1280,\n\"resize\": \"fit\"\n},\n\"thumb\": {\n\"w\": 150,\n\"h\": 150,\n\"resize\": \"crop\"\n},\n\"medium\": {\n\"w\": 600,\n\"h\": 1067,\n\"resize\": \"fit\"\n}\n}\n}\n]\n}  \n}\n",
        "line_start": 1102,
        "line_end": 1279
    },
    "64": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet with an animated GIF\n\nContent: \n## Tweet with an animated GIF  \nBelow is the extended entities metadata for this Tweet with an animated GIF:  \n> Test Tweet with animated GIF [pic.twitter.com/nD6G4bWSKb](https://t.co/nD6G4bWSKb)\n>\n> \u2014 @FloodSocial demo (@FloodSocial) [May 31, 2017](https://twitter.com/FloodSocial/status/870042717589340160)  \n{\n\"extended_entities\": {\n\"media\": [\n{\n\"id\": 870042654213459968,\n\"id_str\": \"870042654213459968\",\n\"indices\": [\n29,\n52\n],\n\"media_url\": \"http://pbs.twimg.com/tweet_video_thumb/DBMDLy_U0AAqUWP.jpg\",\n\"media_url_https\": \"https://pbs.twimg.com/tweet_video_thumb/DBMDLy_U0AAqUWP.jpg\",\n\"url\": \"https://t.co/nD6G4bWSKb\",\n\"display_url\": \"pic.twitter.com/nD6G4bWSKb\",\n\"expanded_url\": \"https://twitter.com/FloodSocial/status/870042717589340160/photo/1\",\n\"type\": \"animated_gif\",\n\"sizes\": {\n\"medium\": {\n\"w\": 350,\n\"h\": 262,\n\"resize\": \"fit\"\n},\n\"small\": {\n\"w\": 340,\n\"h\": 255,\n\"resize\": \"fit\"\n},\n\"thumb\": {\n\"w\": 150,\n\"h\": 150,\n\"resize\": \"crop\"\n},\n\"large\": {\n\"w\": 350,\n\"h\": 262,\n\"resize\": \"fit\"\n}\n},\n\"video_info\": {\n\"aspect_ratio\": [\n175,\n131\n],\n\"variants\": [\n{\n\"bitrate\": 0,\n\"content_type\": \"video/mp4\",\n\"url\": \"https://video.twimg.com/tweet_video/DBMDLy_U0AAqUWP.mp4\"\n}\n]\n}\n}\n]\n}\n}\n",
        "line_start": 1295,
        "line_end": 1355
    },
    "65": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet with an animated GIF\n\tNext Steps\n\nContent: \n### Next Steps  \nExplore the other sub-objects that a Tweet contains:  \n* [Tweet object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/tweet)\n* [User object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/user)\n* [Entities object and data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities)\n* [Tweet geo objects and data dictionaries](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo)  \nNative Enriched example payloads\n",
        "line_start": 365,
        "line_end": 372
    },
    "66": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet with an animated GIF\n\tTweet\n\nContent: \n### Tweet  \n`{ \t\"created_at\": \"Fri Sep 18 18:36:15 +0000 2020\", \t\"id\": 1307025659294675000, \t\"id_str\": \"1307025659294674945\", \t\"text\": \"Here\u2019s an article that highlights the updates in the new Tweet payload v2 https://t.co/oeF3ZHeKQQ\", \t\"source\": \"<a href=\\\"https://mobile.twitter.com\\\" rel=\\\"nofollow\\\">Twitter Web App</a>\", \t\"truncated\": false, \t\"in_reply_to_status_id\": 1304102743196356600, \t\"in_reply_to_status_id_str\": \"1304102743196356610\", \t\"in_reply_to_user_id\": 2244994945, \t\"in_reply_to_user_id_str\": \"2244994945\", \t\"in_reply_to_screen_name\": \"TwitterDev\", \t\"user\": { \t\t\"id\": 2244994945, \t\t\"id_str\": \"2244994945\", \t\t\"name\": \"Twitter Dev\", \t\t\"screen_name\": \"TwitterDev\", \t\t\"location\": \"127.0.0.1\", \t\t\"url\": \"https://developer.twitter.com/en/community\", \t\t\"description\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\"translator_type\": \"regular\", \t\t\"protected\": false, \t\t\"verified\": true, \t\t\"followers_count\": 512292, \t\t\"friends_count\": 2038, \t\t\"listed_count\": 1666, \t\t\"favourites_count\": 2147, \t\t\"statuses_count\": 3634, \t\t\"created_at\": \"Sat Dec 14 04:35:55 +0000 2013\", \t\t\"utc_offset\": null, \t\t\"time_zone\": null, \t\t\"geo_enabled\": true, \t\t\"lang\": null, \t\t\"contributors_enabled\": false, \t\t\"is_translator\": false, \t\t\"profile_background_color\": \"FFFFFF\", \t\t\"profile_background_image_url\": \"http://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_image_url_https\": \"https://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_tile\": false, \t\t\"profile_link_color\": \"0084B4\", \t\t\"profile_sidebar_border_color\": \"FFFFFF\", \t\t\"profile_sidebar_fill_color\": \"DDEEF6\", \t\t\"profile_text_color\": \"333333\", \t\t\"profile_use_background_image\": false, \t\t\"profile_image_url\": \"http://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_banner_url\": \"https://pbs.twimg.com/profile_banners/2244994945/1594913664\", \t\t\"default_profile\": false, \t\t\"default_profile_image\": false, \t\t\"following\": null, \t\t\"follow_request_sent\": null, \t\t\"notifications\": null \t}, \t\"geo\": null, \t\"coordinates\": null, \t\"place\": null, \t\"contributors\": null, \t\"is_quote_status\": false, \t\"quote_count\": 1, \t\"reply_count\": 2, \t\"retweet_count\": 11, \t\"favorite_count\": 70, \t\"entities\": { \t\t\"hashtags\": [], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/oeF3ZHeKQQ\", \t\t\t\"expanded_url\": \"https://dev.to/twitterdev/understanding-the-new-tweet-payload-in-the-twitter-api-v2-1fg5\", \t\t\t\"display_url\": \"dev.to/twitterdev/und\u2026\", \t\t\t\"unwound\": { \t\t\t\t\"url\": \"https://dev.to/twitterdev/understanding-the-new-tweet-payload-in-the-twitter-api-v2-1fg5\", \t\t\t\t\"status\": 200, \t\t\t\t\"title\": \"Understanding the new Tweet payload in the Twitter API v2\", \t\t\t\t\"description\": \"Twitter recently announced the new Twitter API v2, rebuilt from the ground up to deliver new features...\" \t\t\t}, \t\t\t\"indices\": [ \t\t\t\t74, \t\t\t\t97 \t\t\t] \t\t}], \t\t\"user_mentions\": [], \t\t\"symbols\": [] \t}, \t\"favorited\": false, \t\"retweeted\": false, \t\"possibly_sensitive\": false, \t\"filter_level\": \"low\", \t\"lang\": \"en\", \t\"matching_rules\": [{ \t\t\"tag\": null \t}] }`\n",
        "line_start": 1370,
        "line_end": 1372
    },
    "67": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet with an animated GIF\n\tTweet reply\n\nContent: \n### Tweet reply  \n`{ \t\"created_at\": \"Fri Aug 21 19:10:05 +0000 2020\", \t\"id\": 1296887316556980200, \t\"id_str\": \"1296887316556980230\", \t\"text\": \"See how @PennMedCDH are using Twitter data to understand the COVID-19 health crisis \ud83d\udcca\\n\\nhttps://t.co/1tdA8uDWes\", \t\"source\": \"<a href=\\\"https://mobile.twitter.com\\\" rel=\\\"nofollow\\\">Twitter Web App</a>\", \t\"truncated\": false, \t\"in_reply_to_status_id\": 1296887091901718500, \t\"in_reply_to_status_id_str\": \"1296887091901718529\", \t\"in_reply_to_user_id\": 2244994945, \t\"in_reply_to_user_id_str\": \"2244994945\", \t\"in_reply_to_screen_name\": \"TwitterDev\", \t\"user\": { \t\t\"id\": 2244994945, \t\t\"id_str\": \"2244994945\", \t\t\"name\": \"Twitter Dev\", \t\t\"screen_name\": \"TwitterDev\", \t\t\"location\": \"127.0.0.1\", \t\t\"url\": \"https://developer.twitter.com/en/community\", \t\t\"description\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\"translator_type\": \"regular\", \t\t\"protected\": false, \t\t\"verified\": true, \t\t\"followers_count\": 512292, \t\t\"friends_count\": 2038, \t\t\"listed_count\": 1666, \t\t\"favourites_count\": 2147, \t\t\"statuses_count\": 3634, \t\t\"created_at\": \"Sat Dec 14 04:35:55 +0000 2013\", \t\t\"utc_offset\": null, \t\t\"time_zone\": null, \t\t\"geo_enabled\": true, \t\t\"lang\": null, \t\t\"contributors_enabled\": false, \t\t\"is_translator\": false, \t\t\"profile_background_color\": \"FFFFFF\", \t\t\"profile_background_image_url\": \"http://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_image_url_https\": \"https://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_tile\": false, \t\t\"profile_link_color\": \"0084B4\", \t\t\"profile_sidebar_border_color\": \"FFFFFF\", \t\t\"profile_sidebar_fill_color\": \"DDEEF6\", \t\t\"profile_text_color\": \"333333\", \t\t\"profile_use_background_image\": false, \t\t\"profile_image_url\": \"http://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_banner_url\": \"https://pbs.twimg.com/profile_banners/2244994945/1594913664\", \t\t\"default_profile\": false, \t\t\"default_profile_image\": false, \t\t\"following\": null, \t\t\"follow_request_sent\": null, \t\t\"notifications\": null \t}, \t\"geo\": null, \t\"coordinates\": null, \t\"place\": null, \t\"contributors\": null, \t\"is_quote_status\": false, \t\"quote_count\": 2, \t\"reply_count\": 3, \t\"retweet_count\": 9, \t\"favorite_count\": 26, \t\"entities\": { \t\t\"hashtags\": [], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/1tdA8uDWes\", \t\t\t\"expanded_url\": \"https://developer.twitter.com/en/use-cases/success-stories/penn\", \t\t\t\"display_url\": \"developer.twitter.com/en/use-cases/s\u2026\", \t\t\t\"unwound\": { \t\t\t\t\"url\": \"https://developer.twitter.com/en/use-cases/success-stories/penn\", \t\t\t\t\"status\": 200, \t\t\t\t\"title\": \"Penn Medicine Center for Digital Health\", \t\t\t\t\"description\": \"Penn Med Center for Digital Health has created a COVID-19 Twitter map that includes charts detailing sentiment, symptoms reported, state-by-state data cuts, and border data on the COVID-19 outbreak. In addition, their Penn Med With You initiative uses aggregate regional information from Twitter to inform their website and text-messaging service. The service uses this information to disseminate relevant and timely resources.\" \t\t\t}, \t\t\t\"indices\": [ \t\t\t\t87, \t\t\t\t110 \t\t\t] \t\t}], \t\t\"user_mentions\": [{ \t\t\t\"screen_name\": \"PennMedCDH\", \t\t\t\"name\": \"Penn Med CDH\", \t\t\t\"id\": 1615654896, \t\t\t\"id_str\": \"1615654896\", \t\t\t\"indices\": [ \t\t\t\t8, \t\t\t\t19 \t\t\t] \t\t}], \t\t\"symbols\": [] \t}, \t\"favorited\": false, \t\"retweeted\": false, \t\"possibly_sensitive\": false, \t\"filter_level\": \"low\", \t\"lang\": \"en\", \t\"matching_rules\": [{ \t\t\"tag\": null \t}] }`\n",
        "line_start": 1375,
        "line_end": 1377
    },
    "68": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet with an animated GIF\n\tExtended Tweet\n\nContent: \n### Extended Tweet  \n`{ \t\"created_at\": \"Wed Aug 19 16:26:16 +0000 2020\", \t\"id\": 1296121314218897400, \t\"id_str\": \"1296121314218897408\", \t\"text\": \"The hide replies endpoint is launching today! \\n\\nDevelopers can hide replies to Tweets - a crucial way developers ca\u2026 https://t.co/VyfXs1RTXn\", \t\"source\": \"<a href=\\\"https://mobile.twitter.com\\\" rel=\\\"nofollow\\\">Twitter Web App</a>\", \t\"truncated\": true, \t\"in_reply_to_status_id\": null, \t\"in_reply_to_status_id_str\": null, \t\"in_reply_to_user_id\": null, \t\"in_reply_to_user_id_str\": null, \t\"in_reply_to_screen_name\": null, \t\"user\": { \t\t\"id\": 2244994945, \t\t\"id_str\": \"2244994945\", \t\t\"name\": \"Twitter Dev\", \t\t\"screen_name\": \"TwitterDev\", \t\t\"location\": \"127.0.0.1\", \t\t\"url\": \"https://developer.twitter.com/en/community\", \t\t\"description\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\"translator_type\": \"regular\", \t\t\"protected\": false, \t\t\"verified\": true, \t\t\"followers_count\": 512292, \t\t\"friends_count\": 2038, \t\t\"listed_count\": 1666, \t\t\"favourites_count\": 2147, \t\t\"statuses_count\": 3634, \t\t\"created_at\": \"Sat Dec 14 04:35:55 +0000 2013\", \t\t\"utc_offset\": null, \t\t\"time_zone\": null, \t\t\"geo_enabled\": true, \t\t\"lang\": null, \t\t\"contributors_enabled\": false, \t\t\"is_translator\": false, \t\t\"profile_background_color\": \"FFFFFF\", \t\t\"profile_background_image_url\": \"http://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_image_url_https\": \"https://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_tile\": false, \t\t\"profile_link_color\": \"0084B4\", \t\t\"profile_sidebar_border_color\": \"FFFFFF\", \t\t\"profile_sidebar_fill_color\": \"DDEEF6\", \t\t\"profile_text_color\": \"333333\", \t\t\"profile_use_background_image\": false, \t\t\"profile_image_url\": \"http://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_banner_url\": \"https://pbs.twimg.com/profile_banners/2244994945/1594913664\", \t\t\"default_profile\": false, \t\t\"default_profile_image\": false, \t\t\"following\": null, \t\t\"follow_request_sent\": null, \t\t\"notifications\": null \t}, \t\"geo\": null, \t\"coordinates\": null, \t\"place\": null, \t\"contributors\": null, \t\"is_quote_status\": false, \t\"extended_tweet\": { \t\t\"full_text\": \"The hide replies endpoint is launching today! \\n\\nDevelopers can hide replies to Tweets - a crucial way developers can help improve the health of the public conversation using the #TwitterAPI.\\n\\nhttps://t.co/khXhTurm9x\", \t\t\"display_text_range\": [ \t\t\t0, \t\t\t215 \t\t], \t\t\"entities\": { \t\t\t\"hashtags\": [{ \t\t\t\t\"text\": \"TwitterAPI\", \t\t\t\t\"indices\": [ \t\t\t\t\t178, \t\t\t\t\t189 \t\t\t\t] \t\t\t}], \t\t\t\"urls\": [{ \t\t\t\t\"url\": \"https://t.co/khXhTurm9x\", \t\t\t\t\"expanded_url\": \"https://twittercommunity.com/t/hide-replies-now-available-in-the-new-twitter-api/140996\", \t\t\t\t\"display_url\": \"twittercommunity.com/t/hide-replies\u2026\", \t\t\t\t\"unwound\": { \t\t\t\t\t\"url\": \"https://twittercommunity.com/t/hide-replies-now-available-in-the-new-twitter-api/140996\", \t\t\t\t\t\"status\": 200, \t\t\t\t\t\"title\": \"Hide replies now available in the new Twitter API\", \t\t\t\t\t\"description\": \"Today, we\u2019re happy to announce the general availability of the hide replies endpoint in the new Twitter API. The hide replies endpoint allows you to build tools that help people hide or unhide replies to their Tweets. People manage their replies for many reasons, including to give less attention to comments that are abusive, distracting, misleading, or to make conversations more engaging. Through this endpoint, you can build tools to help people on Twitter hide or unhide replies faster and more...\" \t\t\t\t}, \t\t\t\t\"indices\": [ \t\t\t\t\t192, \t\t\t\t\t215 \t\t\t\t] \t\t\t}], \t\t\t\"user_mentions\": [], \t\t\t\"symbols\": [] \t\t} \t}, \t\"quote_count\": 23, \t\"reply_count\": 9, \t\"retweet_count\": 54, \t\"favorite_count\": 172, \t\"entities\": { \t\t\"hashtags\": [], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/VyfXs1RTXn\", \t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1296121314218897408\", \t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\", \t\t\t\"indices\": [ \t\t\t\t117, \t\t\t\t140 \t\t\t] \t\t}], \t\t\"user_mentions\": [], \t\t\"symbols\": [] \t}, \t\"favorited\": false, \t\"retweeted\": false, \t\"possibly_sensitive\": false, \t\"filter_level\": \"low\", \t\"lang\": \"en\", \t\"matching_rules\": [{ \t\t\"tag\": null \t}] }`\n",
        "line_start": 1380,
        "line_end": 1382
    },
    "69": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet with an animated GIF\n\tTweet with extended\\_entitites\n\nContent: \n### Tweet with extended\\_entitites  \n`{ \t\"created_at\": \"Wed Aug 12 17:01:42 +0000 2020\", \t\"id\": 1293593516040269800, \t\"id_str\": \"1293593516040269825\", \t\"text\": \"It\u2019s finally here! \ud83e\udd41 Say hello to the new #TwitterAPI.\\n\\nWe\u2019re rebuilding the Twitter API v2 from the ground up to b\u2026 https://t.co/UeCndQGMjx\", \t\"display_text_range\": [ \t\t0, \t\t140 \t], \t\"source\": \"<a href=\\\"https://mobile.twitter.com\\\" rel=\\\"nofollow\\\">Twitter Web App</a>\", \t\"truncated\": true, \t\"in_reply_to_status_id\": null, \t\"in_reply_to_status_id_str\": null, \t\"in_reply_to_user_id\": null, \t\"in_reply_to_user_id_str\": null, \t\"in_reply_to_screen_name\": null, \t\"user\": { \t\t\"id\": 2244994945, \t\t\"id_str\": \"2244994945\", \t\t\"name\": \"Twitter Dev\", \t\t\"screen_name\": \"TwitterDev\", \t\t\"location\": \"127.0.0.1\", \t\t\"url\": \"https://developer.twitter.com/en/community\", \t\t\"description\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\"translator_type\": \"regular\", \t\t\"protected\": false, \t\t\"verified\": true, \t\t\"followers_count\": 512292, \t\t\"friends_count\": 2038, \t\t\"listed_count\": 1666, \t\t\"favourites_count\": 2147, \t\t\"statuses_count\": 3634, \t\t\"created_at\": \"Sat Dec 14 04:35:55 +0000 2013\", \t\t\"utc_offset\": null, \t\t\"time_zone\": null, \t\t\"geo_enabled\": true, \t\t\"lang\": null, \t\t\"contributors_enabled\": false, \t\t\"is_translator\": false, \t\t\"profile_background_color\": \"FFFFFF\", \t\t\"profile_background_image_url\": \"http://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_image_url_https\": \"https://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_tile\": false, \t\t\"profile_link_color\": \"0084B4\", \t\t\"profile_sidebar_border_color\": \"FFFFFF\", \t\t\"profile_sidebar_fill_color\": \"DDEEF6\", \t\t\"profile_text_color\": \"333333\", \t\t\"profile_use_background_image\": false, \t\t\"profile_image_url\": \"http://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_banner_url\": \"https://pbs.twimg.com/profile_banners/2244994945/1594913664\", \t\t\"default_profile\": false, \t\t\"default_profile_image\": false, \t\t\"following\": null, \t\t\"follow_request_sent\": null, \t\t\"notifications\": null \t}, \t\"geo\": null, \t\"coordinates\": null, \t\"place\": null, \t\"contributors\": null, \t\"is_quote_status\": false, \t\"extended_tweet\": { \t\t\"full_text\": \"It\u2019s finally here! \ud83e\udd41 Say hello to the new #TwitterAPI.\\n\\nWe\u2019re rebuilding the Twitter API v2 from the ground up to better serve our developer community. And today\u2019s launch is only the beginning.\\n\\nhttps://t.co/32VrwpGaJw https://t.co/KaFSbjWUA8\", \t\t\"display_text_range\": [ \t\t\t0, \t\t\t218 \t\t], \t\t\"entities\": { \t\t\t\"hashtags\": [{ \t\t\t\t\"text\": \"TwitterAPI\", \t\t\t\t\"indices\": [ \t\t\t\t\t42, \t\t\t\t\t53 \t\t\t\t] \t\t\t}], \t\t\t\"urls\": [{ \t\t\t\t\"url\": \"https://t.co/32VrwpGaJw\", \t\t\t\t\"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/introducing_new_twitter_api.html\", \t\t\t\t\"display_url\": \"blog.twitter.com/developer/en_u\u2026\", \t\t\t\t\"unwound\": { \t\t\t\t\t\"url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/introducing_new_twitter_api.html\", \t\t\t\t\t\"status\": 200, \t\t\t\t\t\"title\": \"Introducing a new and improved Twitter API\", \t\t\t\t\t\"description\": \"Introducing the new Twitter API - rebuilt from the ground up to deliver new features faster so developers can help the world connect to the public conversation happening on Twitter.\" \t\t\t\t}, \t\t\t\t\"indices\": [ \t\t\t\t\t195, \t\t\t\t\t218 \t\t\t\t] \t\t\t}], \t\t\t\"user_mentions\": [], \t\t\t\"symbols\": [], \t\t\t\"media\": [{ \t\t\t\t\"id\": 1293565706408038400, \t\t\t\t\"id_str\": \"1293565706408038401\", \t\t\t\t\"indices\": [ \t\t\t\t\t219, \t\t\t\t\t242 \t\t\t\t], \t\t\t\t\"additional_media_info\": { \t\t\t\t\t\"monetizable\": false \t\t\t\t}, \t\t\t\t\"media_url\": \"http://pbs.twimg.com/ext_tw_video_thumb/1293565706408038401/pu/img/66P2dvbU4a02jYbV.jpg\", \t\t\t\t\"media_url_https\": \"https://pbs.twimg.com/ext_tw_video_thumb/1293565706408038401/pu/img/66P2dvbU4a02jYbV.jpg\", \t\t\t\t\"url\": \"https://t.co/KaFSbjWUA8\", \t\t\t\t\"display_url\": \"pic.twitter.com/KaFSbjWUA8\", \t\t\t\t\"expanded_url\": \"https://twitter.com/TwitterDev/status/1293593516040269825/video/1\", \t\t\t\t\"type\": \"video\", \t\t\t\t\"video_info\": { \t\t\t\t\t\"aspect_ratio\": [ \t\t\t\t\t\t16, \t\t\t\t\t\t9 \t\t\t\t\t], \t\t\t\t\t\"duration_millis\": 34875, \t\t\t\t\t\"variants\": [{ \t\t\t\t\t\t\t\"bitrate\": 256000, \t\t\t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/480x270/Fg9lnGGsITO0uq2K.mp4?tag=10\" \t\t\t\t\t\t}, \t\t\t\t\t\t{ \t\t\t\t\t\t\t\"bitrate\": 832000, \t\t\t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/640x360/-crbtZE4y8vKN_uF.mp4?tag=10\" \t\t\t\t\t\t}, \t\t\t\t\t\t{ \t\t\t\t\t\t\t\"content_type\": \"application/x-mpegURL\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/pl/OvIqQojosF6sMIHR.m3u8?tag=10\" \t\t\t\t\t\t}, \t\t\t\t\t\t{ \t\t\t\t\t\t\t\"bitrate\": 2176000, \t\t\t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/1280x720/xkxyb-VPVY4OI0j9.mp4?tag=10\" \t\t\t\t\t\t} \t\t\t\t\t] \t\t\t\t}, \t\t\t\t\"sizes\": { \t\t\t\t\t\"thumb\": { \t\t\t\t\t\t\"w\": 150, \t\t\t\t\t\t\"h\": 150, \t\t\t\t\t\t\"resize\": \"crop\" \t\t\t\t\t}, \t\t\t\t\t\"medium\": { \t\t\t\t\t\t\"w\": 1200, \t\t\t\t\t\t\"h\": 675, \t\t\t\t\t\t\"resize\": \"fit\" \t\t\t\t\t}, \t\t\t\t\t\"small\": { \t\t\t\t\t\t\"w\": 680, \t\t\t\t\t\t\"h\": 383, \t\t\t\t\t\t\"resize\": \"fit\" \t\t\t\t\t}, \t\t\t\t\t\"large\": { \t\t\t\t\t\t\"w\": 1280, \t\t\t\t\t\t\"h\": 720, \t\t\t\t\t\t\"resize\": \"fit\" \t\t\t\t\t} \t\t\t\t} \t\t\t}] \t\t}, \t\t\"extended_entities\": { \t\t\t\"media\": [{ \t\t\t\t\"id\": 1293565706408038400, \t\t\t\t\"id_str\": \"1293565706408038401\", \t\t\t\t\"indices\": [ \t\t\t\t\t219, \t\t\t\t\t242 \t\t\t\t], \t\t\t\t\"additional_media_info\": { \t\t\t\t\t\"monetizable\": false \t\t\t\t}, \t\t\t\t\"media_url\": \"http://pbs.twimg.com/ext_tw_video_thumb/1293565706408038401/pu/img/66P2dvbU4a02jYbV.jpg\", \t\t\t\t\"media_url_https\": \"https://pbs.twimg.com/ext_tw_video_thumb/1293565706408038401/pu/img/66P2dvbU4a02jYbV.jpg\", \t\t\t\t\"url\": \"https://t.co/KaFSbjWUA8\", \t\t\t\t\"display_url\": \"pic.twitter.com/KaFSbjWUA8\", \t\t\t\t\"expanded_url\": \"https://twitter.com/TwitterDev/status/1293593516040269825/video/1\", \t\t\t\t\"type\": \"video\", \t\t\t\t\"video_info\": { \t\t\t\t\t\"aspect_ratio\": [ \t\t\t\t\t\t16, \t\t\t\t\t\t9 \t\t\t\t\t], \t\t\t\t\t\"duration_millis\": 34875, \t\t\t\t\t\"variants\": [{ \t\t\t\t\t\t\t\"bitrate\": 256000, \t\t\t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/480x270/Fg9lnGGsITO0uq2K.mp4?tag=10\" \t\t\t\t\t\t}, \t\t\t\t\t\t{ \t\t\t\t\t\t\t\"bitrate\": 832000, \t\t\t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/640x360/-crbtZE4y8vKN_uF.mp4?tag=10\" \t\t\t\t\t\t}, \t\t\t\t\t\t{ \t\t\t\t\t\t\t\"content_type\": \"application/x-mpegURL\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/pl/OvIqQojosF6sMIHR.m3u8?tag=10\" \t\t\t\t\t\t}, \t\t\t\t\t\t{ \t\t\t\t\t\t\t\"bitrate\": 2176000, \t\t\t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/1280x720/xkxyb-VPVY4OI0j9.mp4?tag=10\" \t\t\t\t\t\t} \t\t\t\t\t] \t\t\t\t}, \t\t\t\t\"sizes\": { \t\t\t\t\t\"thumb\": { \t\t\t\t\t\t\"w\": 150, \t\t\t\t\t\t\"h\": 150, \t\t\t\t\t\t\"resize\": \"crop\" \t\t\t\t\t}, \t\t\t\t\t\"medium\": { \t\t\t\t\t\t\"w\": 1200, \t\t\t\t\t\t\"h\": 675, \t\t\t\t\t\t\"resize\": \"fit\" \t\t\t\t\t}, \t\t\t\t\t\"small\": { \t\t\t\t\t\t\"w\": 680, \t\t\t\t\t\t\"h\": 383, \t\t\t\t\t\t\"resize\": \"fit\" \t\t\t\t\t}, \t\t\t\t\t\"large\": { \t\t\t\t\t\t\"w\": 1280, \t\t\t\t\t\t\"h\": 720, \t\t\t\t\t\t\"resize\": \"fit\" \t\t\t\t\t} \t\t\t\t} \t\t\t}] \t\t} \t}, \t\"quote_count\": 332, \t\"reply_count\": 172, \t\"retweet_count\": 958, \t\"favorite_count\": 2844, \t\"entities\": { \t\t\"hashtags\": [{ \t\t\t\"text\": \"TwitterAPI\", \t\t\t\"indices\": [ \t\t\t\t42, \t\t\t\t53 \t\t\t] \t\t}], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/UeCndQGMjx\", \t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1293593516040269825\", \t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\", \t\t\t\"indices\": [ \t\t\t\t117, \t\t\t\t140 \t\t\t] \t\t}], \t\t\"user_mentions\": [], \t\t\"symbols\": [] \t}, \t\"favorited\": false, \t\"retweeted\": false, \t\"possibly_sensitive\": false, \t\"filter_level\": \"low\", \t\"lang\": \"en\", \t\"matching_rules\": [{ \t\t\"tag\": null \t}] }`\n",
        "line_start": 1385,
        "line_end": 1387
    },
    "70": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet with an animated GIF\n\tRetweet\n\nContent: \n### Retweet  \n`{ \t\"created_at\": \"Tue Feb 18 19:33:59 +0000 2020\", \t\"id\": 1229851574555508700, \t\"id_str\": \"1229851574555508737\", \t\"text\": \"RT @suhemparack: I built an Alexa Skill for Twitter using APL that allows you to view Tweets and Trends on the echo show!\\n\\nCheck it out her\u2026\", \t\"source\": \"<a href=\\\"https://mobile.twitter.com\\\" rel=\\\"nofollow\\\">Twitter Web App</a>\", \t\"truncated\": false, \t\"in_reply_to_status_id\": null, \t\"in_reply_to_status_id_str\": null, \t\"in_reply_to_user_id\": null, \t\"in_reply_to_user_id_str\": null, \t\"in_reply_to_screen_name\": null, \t\"user\": { \t\t\"id\": 2244994945, \t\t\"id_str\": \"2244994945\", \t\t\"name\": \"Twitter Dev\", \t\t\"screen_name\": \"TwitterDev\", \t\t\"location\": \"127.0.0.1\", \t\t\"url\": \"https://developer.twitter.com/en/community\", \t\t\"description\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\"translator_type\": \"regular\", \t\t\"protected\": false, \t\t\"verified\": true, \t\t\"followers_count\": 512292, \t\t\"friends_count\": 2038, \t\t\"listed_count\": 1666, \t\t\"favourites_count\": 2147, \t\t\"statuses_count\": 3634, \t\t\"created_at\": \"Sat Dec 14 04:35:55 +0000 2013\", \t\t\"utc_offset\": null, \t\t\"time_zone\": null, \t\t\"geo_enabled\": true, \t\t\"lang\": null, \t\t\"contributors_enabled\": false, \t\t\"is_translator\": false, \t\t\"profile_background_color\": \"FFFFFF\", \t\t\"profile_background_image_url\": \"http://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_image_url_https\": \"https://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_tile\": false, \t\t\"profile_link_color\": \"0084B4\", \t\t\"profile_sidebar_border_color\": \"FFFFFF\", \t\t\"profile_sidebar_fill_color\": \"DDEEF6\", \t\t\"profile_text_color\": \"333333\", \t\t\"profile_use_background_image\": false, \t\t\"profile_image_url\": \"http://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_banner_url\": \"https://pbs.twimg.com/profile_banners/2244994945/1594913664\", \t\t\"default_profile\": false, \t\t\"default_profile_image\": false, \t\t\"following\": null, \t\t\"follow_request_sent\": null, \t\t\"notifications\": null \t}, \t\"geo\": null, \t\"coordinates\": null, \t\"place\": null, \t\"contributors\": null, \t\"retweeted_status\": { \t\t\"created_at\": \"Tue Feb 18 19:01:58 +0000 2020\", \t\t\"id\": 1229843515603144700, \t\t\"id_str\": \"1229843515603144704\", \t\t\"text\": \"I built an Alexa Skill for Twitter using APL that allows you to view Tweets and Trends on the echo show!\\n\\nCheck it\u2026 https://t.co/RP9NgltX7i\", \t\t\"source\": \"<a href=\\\"https://mobile.twitter.com\\\" rel=\\\"nofollow\\\">Twitter Web App</a>\", \t\t\"truncated\": true, \t\t\"in_reply_to_status_id\": null, \t\t\"in_reply_to_status_id_str\": null, \t\t\"in_reply_to_user_id\": null, \t\t\"in_reply_to_user_id_str\": null, \t\t\"in_reply_to_screen_name\": null, \t\t\"user\": { \t\t\t\"id\": 857699969263964200, \t\t\t\"id_str\": \"857699969263964161\", \t\t\t\"name\": \"Suhem Parack\", \t\t\t\"screen_name\": \"suhemparack\", \t\t\t\"location\": \"Seattle, WA\", \t\t\t\"url\": \"https://developer.twitter.com\", \t\t\t\"description\": \"Developer Relations for Academic Research @Twitter. Talk to me about research with Twitter data. Previously: Amazon Alexa. Views are my own\", \t\t\t\"translator_type\": \"none\", \t\t\t\"protected\": false, \t\t\t\"verified\": false, \t\t\t\"followers_count\": 732, \t\t\t\"friends_count\": 501, \t\t\t\"listed_count\": 12, \t\t\t\"favourites_count\": 358, \t\t\t\"statuses_count\": 458, \t\t\t\"created_at\": \"Thu Apr 27 20:56:22 +0000 2017\", \t\t\t\"utc_offset\": null, \t\t\t\"time_zone\": null, \t\t\t\"geo_enabled\": false, \t\t\t\"lang\": null, \t\t\t\"contributors_enabled\": false, \t\t\t\"is_translator\": false, \t\t\t\"profile_background_color\": \"F5F8FA\", \t\t\t\"profile_background_image_url\": \"\", \t\t\t\"profile_background_image_url_https\": \"\", \t\t\t\"profile_background_tile\": false, \t\t\t\"profile_link_color\": \"1DA1F2\", \t\t\t\"profile_sidebar_border_color\": \"C0DEED\", \t\t\t\"profile_sidebar_fill_color\": \"DDEEF6\", \t\t\t\"profile_text_color\": \"333333\", \t\t\t\"profile_use_background_image\": true, \t\t\t\"profile_image_url\": \"http://pbs.twimg.com/profile_images/1230703695051935747/TbQKe91L_normal.jpg\", \t\t\t\"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/1230703695051935747/TbQKe91L_normal.jpg\", \t\t\t\"profile_banner_url\": \"https://pbs.twimg.com/profile_banners/857699969263964161/1593055939\", \t\t\t\"default_profile\": true, \t\t\t\"default_profile_image\": false, \t\t\t\"following\": null, \t\t\t\"follow_request_sent\": null, \t\t\t\"notifications\": null \t\t}, \t\t\"geo\": null, \t\t\"coordinates\": null, \t\t\"place\": null, \t\t\"contributors\": null, \t\t\"is_quote_status\": false, \t\t\"extended_tweet\": { \t\t\t\"full_text\": \"I built an Alexa Skill for Twitter using APL that allows you to view Tweets and Trends on the echo show!\\n\\nCheck it out here \ud83d\udc47\\n\\nhttps://t.co/l5J8wq748G\", \t\t\t\"display_text_range\": [ \t\t\t\t0, \t\t\t\t150 \t\t\t], \t\t\t\"entities\": { \t\t\t\t\"hashtags\": [], \t\t\t\t\"urls\": [{ \t\t\t\t\t\"url\": \"https://t.co/l5J8wq748G\", \t\t\t\t\t\"expanded_url\": \"https://dev.to/twitterdev/building-an-alexa-skill-for-twitter-using-alexa-presentation-language-1aj0\", \t\t\t\t\t\"display_url\": \"dev.to/twitterdev/bui\u2026\", \t\t\t\t\t\"unwound\": { \t\t\t\t\t\t\"url\": \"https://dev.to/twitterdev/building-an-alexa-skill-for-twitter-using-alexa-presentation-language-1aj0\", \t\t\t\t\t\t\"status\": 200, \t\t\t\t\t\t\"title\": null, \t\t\t\t\t\t\"description\": null \t\t\t\t\t}, \t\t\t\t\t\"indices\": [ \t\t\t\t\t\t127, \t\t\t\t\t\t150 \t\t\t\t\t] \t\t\t\t}], \t\t\t\t\"user_mentions\": [], \t\t\t\t\"symbols\": [] \t\t\t} \t\t}, \t\t\"quote_count\": 6, \t\t\"reply_count\": 1, \t\t\"retweet_count\": 19, \t\t\"favorite_count\": 71, \t\t\"entities\": { \t\t\t\"hashtags\": [], \t\t\t\"urls\": [{ \t\t\t\t\"url\": \"https://t.co/RP9NgltX7i\", \t\t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1229843515603144704\", \t\t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\", \t\t\t\t\"indices\": [ \t\t\t\t\t116, \t\t\t\t\t139 \t\t\t\t] \t\t\t}], \t\t\t\"user_mentions\": [], \t\t\t\"symbols\": [] \t\t}, \t\t\"favorited\": false, \t\t\"retweeted\": false, \t\t\"possibly_sensitive\": false, \t\t\"filter_level\": \"low\", \t\t\"lang\": \"en\" \t}, \t\"is_quote_status\": false, \t\"quote_count\": 0, \t\"reply_count\": 0, \t\"retweet_count\": 0, \t\"favorite_count\": 0, \t\"entities\": { \t\t\"hashtags\": [], \t\t\"urls\": [], \t\t\"user_mentions\": [{ \t\t\t\"screen_name\": \"suhemparack\", \t\t\t\"name\": \"Suhem Parack\", \t\t\t\"id\": 857699969263964200, \t\t\t\"id_str\": \"857699969263964161\", \t\t\t\"indices\": [ \t\t\t\t3, \t\t\t\t15 \t\t\t] \t\t}], \t\t\"symbols\": [] \t}, \t\"favorited\": false, \t\"retweeted\": false, \t\"filter_level\": \"low\", \t\"lang\": \"en\", \t\"matching_rules\": [{ \t\t\"tag\": null \t}] }`\n",
        "line_start": 1390,
        "line_end": 1392
    },
    "71": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet with an animated GIF\n\tQuote Tweet\n\nContent: \n### Quote Tweet  \n`{ \t\"created_at\": \"Mon Nov 16 18:09:36 +0000 2020\", \t\"id\": 1328399838128468000, \t\"id_str\": \"1328399838128467969\", \t\"text\": \"As planned, the Labs v2 endpoints referenced below have now been retired. Please let us know in the forums if you h\u2026 https://t.co/ahQvTYaOcZ\", \t\"display_text_range\": [ \t\t0, \t\t140 \t], \t\"source\": \"<a href=\\\"https://mobile.twitter.com\\\" rel=\\\"nofollow\\\">Twitter Web App</a>\", \t\"truncated\": true, \t\"in_reply_to_status_id\": null, \t\"in_reply_to_status_id_str\": null, \t\"in_reply_to_user_id\": null, \t\"in_reply_to_user_id_str\": null, \t\"in_reply_to_screen_name\": null, \t\"user\": { \t\t\"id\": 2244994945, \t\t\"id_str\": \"2244994945\", \t\t\"name\": \"Twitter Dev\", \t\t\"screen_name\": \"TwitterDev\", \t\t\"location\": \"127.0.0.1\", \t\t\"url\": \"https://developer.twitter.com/en/community\", \t\t\"description\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\"translator_type\": \"regular\", \t\t\"protected\": false, \t\t\"verified\": true, \t\t\"followers_count\": 512292, \t\t\"friends_count\": 2038, \t\t\"listed_count\": 1666, \t\t\"favourites_count\": 2147, \t\t\"statuses_count\": 3634, \t\t\"created_at\": \"Sat Dec 14 04:35:55 +0000 2013\", \t\t\"utc_offset\": null, \t\t\"time_zone\": null, \t\t\"geo_enabled\": true, \t\t\"lang\": null, \t\t\"contributors_enabled\": false, \t\t\"is_translator\": false, \t\t\"profile_background_color\": \"FFFFFF\", \t\t\"profile_background_image_url\": \"http://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_image_url_https\": \"https://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\"profile_background_tile\": false, \t\t\"profile_link_color\": \"0084B4\", \t\t\"profile_sidebar_border_color\": \"FFFFFF\", \t\t\"profile_sidebar_fill_color\": \"DDEEF6\", \t\t\"profile_text_color\": \"333333\", \t\t\"profile_use_background_image\": false, \t\t\"profile_image_url\": \"http://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"profile_banner_url\": \"https://pbs.twimg.com/profile_banners/2244994945/1594913664\", \t\t\"default_profile\": false, \t\t\"default_profile_image\": false, \t\t\"following\": null, \t\t\"follow_request_sent\": null, \t\t\"notifications\": null \t}, \t\"geo\": null, \t\"coordinates\": null, \t\"place\": null, \t\"contributors\": null, \t\"quoted_status_id\": 1327011423252144000, \t\"quoted_status_id_str\": \"1327011423252144128\", \t\"quoted_status\": { \t\t\"created_at\": \"Thu Nov 12 22:12:32 +0000 2020\", \t\t\"id\": 1327011423252144000, \t\t\"id_str\": \"1327011423252144128\", \t\t\"text\": \"\ud83d\udc4b Friendly reminder that Twitter Developer Labs v2 hide replies and recent search will be retired next Monday, Nove\u2026 https://t.co/EEWN2Q9aXh\", \t\t\"source\": \"<a href=\\\"https://mobile.twitter.com\\\" rel=\\\"nofollow\\\">Twitter Web App</a>\", \t\t\"truncated\": true, \t\t\"in_reply_to_status_id\": null, \t\t\"in_reply_to_status_id_str\": null, \t\t\"in_reply_to_user_id\": null, \t\t\"in_reply_to_user_id_str\": null, \t\t\"in_reply_to_screen_name\": null, \t\t\"user\": { \t\t\t\"id\": 2244994945, \t\t\t\"id_str\": \"2244994945\", \t\t\t\"name\": \"Twitter Dev\", \t\t\t\"screen_name\": \"TwitterDev\", \t\t\t\"location\": \"127.0.0.1\", \t\t\t\"url\": \"https://developer.twitter.com/en/community\", \t\t\t\"description\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\t\"translator_type\": \"regular\", \t\t\t\"protected\": false, \t\t\t\"verified\": true, \t\t\t\"followers_count\": 512292, \t\t\t\"friends_count\": 2038, \t\t\t\"listed_count\": 1666, \t\t\t\"favourites_count\": 2147, \t\t\t\"statuses_count\": 3634, \t\t\t\"created_at\": \"Sat Dec 14 04:35:55 +0000 2013\", \t\t\t\"utc_offset\": null, \t\t\t\"time_zone\": null, \t\t\t\"geo_enabled\": true, \t\t\t\"lang\": null, \t\t\t\"contributors_enabled\": false, \t\t\t\"is_translator\": false, \t\t\t\"profile_background_color\": \"FFFFFF\", \t\t\t\"profile_background_image_url\": \"http://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\t\"profile_background_image_url_https\": \"https://abs.twimg.com/images/themes/theme1/bg.png\", \t\t\t\"profile_background_tile\": false, \t\t\t\"profile_link_color\": \"0084B4\", \t\t\t\"profile_sidebar_border_color\": \"FFFFFF\", \t\t\t\"profile_sidebar_fill_color\": \"DDEEF6\", \t\t\t\"profile_text_color\": \"333333\", \t\t\t\"profile_use_background_image\": false, \t\t\t\"profile_image_url\": \"http://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\t\"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\t\"profile_banner_url\": \"https://pbs.twimg.com/profile_banners/2244994945/1594913664\", \t\t\t\"default_profile\": false, \t\t\t\"default_profile_image\": false, \t\t\t\"following\": null, \t\t\t\"follow_request_sent\": null, \t\t\t\"notifications\": null \t\t}, \t\t\"geo\": null, \t\t\"coordinates\": null, \t\t\"place\": null, \t\t\"contributors\": null, \t\t\"is_quote_status\": false, \t\t\"extended_tweet\": { \t\t\t\"full_text\": \"\ud83d\udc4b Friendly reminder that Twitter Developer Labs v2 hide replies and recent search will be retired next Monday, November 16! We encourage you to migrate to the new hide replies and recent search endpoints now available in the v2 #TwitterAPI. Details: https://t.co/r6z6CI7kEy\", \t\t\t\"display_text_range\": [ \t\t\t\t0, \t\t\t\t273 \t\t\t], \t\t\t\"entities\": { \t\t\t\t\"hashtags\": [{ \t\t\t\t\t\"text\": \"TwitterAPI\", \t\t\t\t\t\"indices\": [ \t\t\t\t\t\t228, \t\t\t\t\t\t239 \t\t\t\t\t] \t\t\t\t}], \t\t\t\t\"urls\": [{ \t\t\t\t\t\"url\": \"https://t.co/r6z6CI7kEy\", \t\t\t\t\t\"expanded_url\": \"https://twittercommunity.com/t/retiring-labs-v2-recent-search-and-hide-replies/145795\", \t\t\t\t\t\"display_url\": \"twittercommunity.com/t/retiring-lab\u2026\", \t\t\t\t\t\"unwound\": { \t\t\t\t\t\t\"url\": \"https://twittercommunity.com/t/retiring-labs-v2-recent-search-and-hide-replies/145795\", \t\t\t\t\t\t\"status\": 200, \t\t\t\t\t\t\"title\": \"Retiring Labs v2 recent search and hide replies\", \t\t\t\t\t\t\"description\": \"As we said in our Early Access and hide replies announcements, the following Twitter Developer Labs v2 endpoints will be retired on November 16th. Labs v2 recent search Labs v2 hide replies If called, these endpoints will respond with an HTTP 410 status and return no data. Based on your feedback from Labs, we incorporated corresponding functionality into the Twitter API v2. The relevant documentation can be found using the links below. Click here to enroll in v2 access if you haven\u2019t already...\" \t\t\t\t\t}, \t\t\t\t\t\"indices\": [ \t\t\t\t\t\t250, \t\t\t\t\t\t273 \t\t\t\t\t] \t\t\t\t}], \t\t\t\t\"user_mentions\": [], \t\t\t\t\"symbols\": [] \t\t\t} \t\t}, \t\t\"quote_count\": 4, \t\t\"reply_count\": 2, \t\t\"retweet_count\": 8, \t\t\"favorite_count\": 33, \t\t\"entities\": { \t\t\t\"hashtags\": [], \t\t\t\"urls\": [{ \t\t\t\t\"url\": \"https://t.co/EEWN2Q9aXh\", \t\t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1327011423252144128\", \t\t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\", \t\t\t\t\"indices\": [ \t\t\t\t\t117, \t\t\t\t\t140 \t\t\t\t] \t\t\t}], \t\t\t\"user_mentions\": [], \t\t\t\"symbols\": [] \t\t}, \t\t\"favorited\": false, \t\t\"retweeted\": false, \t\t\"possibly_sensitive\": false, \t\t\"filter_level\": \"low\", \t\t\"lang\": \"en\" \t}, \t\"quoted_status_permalink\": { \t\t\"url\": \"https://t.co/JaxttUMmjX\", \t\t\"expanded\": \"https://twitter.com/TwitterDev/status/1327011423252144128\", \t\t\"display\": \"twitter.com/TwitterDev/sta\u2026\" \t}, \t\"is_quote_status\": true, \t\"extended_tweet\": { \t\t\"full_text\": \"As planned, the Labs v2 endpoints referenced below have now been retired. Please let us know in the forums if you have questions or need help with the Twitter API v2! https://t.co/JaxttUMmjX\", \t\t\"display_text_range\": [ \t\t\t0, \t\t\t166 \t\t], \t\t\"entities\": { \t\t\t\"hashtags\": [], \t\t\t\"urls\": [{ \t\t\t\t\"url\": \"https://t.co/JaxttUMmjX\", \t\t\t\t\"expanded_url\": \"https://twitter.com/TwitterDev/status/1327011423252144128\", \t\t\t\t\"display_url\": \"twitter.com/TwitterDev/sta\u2026\", \t\t\t\t\"indices\": [ \t\t\t\t\t167, \t\t\t\t\t190 \t\t\t\t] \t\t\t}], \t\t\t\"user_mentions\": [], \t\t\t\"symbols\": [] \t\t} \t}, \t\"quote_count\": 1, \t\"reply_count\": 4, \t\"retweet_count\": 7, \t\"favorite_count\": 29, \t\"entities\": { \t\t\"hashtags\": [], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/ahQvTYaOcZ\", \t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1328399838128467969\", \t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\", \t\t\t\"indices\": [ \t\t\t\t117, \t\t\t\t140 \t\t\t] \t\t}], \t\t\"user_mentions\": [], \t\t\"symbols\": [] \t}, \t\"favorited\": false, \t\"retweeted\": false, \t\"possibly_sensitive\": false, \t\"filter_level\": \"low\", \t\"lang\": \"en\", \t\"matching_rules\": [{ \t\t\"tag\": null \t}] }`\n",
        "line_start": 1395,
        "line_end": 1397
    },
    "72": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTweet with an animated GIF\n\tRetweeted Quote Tweet\n\nContent: \n### Retweeted Quote Tweet  \n` {  \t\"created_at\": \"Thu Feb 06 17:26:44 +0000 2020\",  \t\"id\": 1225470895902412800,  \t\"id_str\": \"1225470895902412800\",  \t\"text\": \"RT @AureliaSpecker: \ud83d\udce3 If you enjoyed the London commute tutorial I wrote in November last year, check out the refactored version that uses\u2026\",  \t\"source\": \"<a href=\\\"http://twitter.com/download/iphone\\\" rel=\\\"nofollow\\\">Twitter for iPhone</a>\",  \t\"truncated\": false,  \t\"in_reply_to_status_id\": null,  \t\"in_reply_to_status_id_str\": null,  \t\"in_reply_to_user_id\": null,  \t\"in_reply_to_user_id_str\": null,  \t\"in_reply_to_screen_name\": null,  \t\"user\": {  \t\t\"id\": 2244994945,  \t\t\"id_str\": \"2244994945\",  \t\t\"name\": \"Twitter Dev\",  \t\t\"screen_name\": \"TwitterDev\",  \t\t\"location\": \"127.0.0.1\",  \t\t\"url\": \"https://developer.twitter.com/en/community\",  \t\t\"description\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\",  \t\t\"translator_type\": \"regular\",  \t\t\"protected\": false,  \t\t\"verified\": true,  \t\t\"followers_count\": 512292,  \t\t\"friends_count\": 2038,  \t\t\"listed_count\": 1666,  \t\t\"favourites_count\": 2147,  \t\t\"statuses_count\": 3634,  \t\t\"created_at\": \"Sat Dec 14 04:35:55 +0000 2013\",  \t\t\"utc_offset\": null,  \t\t\"time_zone\": null,  \t\t\"geo_enabled\": true,  \t\t\"lang\": null,  \t\t\"contributors_enabled\": false,  \t\t\"is_translator\": false,  \t\t\"profile_background_color\": \"FFFFFF\",  \t\t\"profile_background_image_url\": \"http://abs.twimg.com/images/themes/theme1/bg.png\",  \t\t\"profile_background_image_url_https\": \"https://abs.twimg.com/images/themes/theme1/bg.png\",  \t\t\"profile_background_tile\": false,  \t\t\"profile_link_color\": \"0084B4\",  \t\t\"profile_sidebar_border_color\": \"FFFFFF\",  \t\t\"profile_sidebar_fill_color\": \"DDEEF6\",  \t\t\"profile_text_color\": \"333333\",  \t\t\"profile_use_background_image\": false,  \t\t\"profile_image_url\": \"http://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\",  \t\t\"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\",  \t\t\"profile_banner_url\": \"https://pbs.twimg.com/profile_banners/2244994945/1594913664\",  \t\t\"default_profile\": false,  \t\t\"default_profile_image\": false,  \t\t\"following\": null,  \t\t\"follow_request_sent\": null,  \t\t\"notifications\": null  \t},  \t\"geo\": null,  \t\"coordinates\": null,  \t\"place\": null,  \t\"contributors\": null,  \t\"retweeted_status\": {  \t\t\"created_at\": \"Tue Feb 04 15:01:25 +0000 2020\",  \t\t\"id\": 1224709550214873000,  \t\t\"id_str\": \"1224709550214873090\",  \t\t\"text\": \"\ud83d\udce3 If you enjoyed the London commute tutorial I wrote in November last year, check out the refactored version that u\u2026 https://t.co/cAepHunkFp\",  \t\t\"display_text_range\": [  \t\t\t0,  \t\t\t140  \t\t],  \t\t\"source\": \"<a href=\\\"https://mobile.twitter.com\\\" rel=\\\"nofollow\\\">Twitter Web App</a>\",  \t\t\"truncated\": true,  \t\t\"in_reply_to_status_id\": null,  \t\t\"in_reply_to_status_id_str\": null,  \t\t\"in_reply_to_user_id\": null,  \t\t\"in_reply_to_user_id_str\": null,  \t\t\"in_reply_to_screen_name\": null,  \t\t\"user\": {  \t\t\t\"id\": 1102321381,  \t\t\t\"id_str\": \"1102321381\",  \t\t\t\"name\": \"Aurelia Specker\",  \t\t\t\"screen_name\": \"AureliaSpecker\",  \t\t\t\"location\": \"London, UK\",  \t\t\t\"url\": null,  \t\t\t\"description\": \"devrel @TwitterUK \u2022 Swiss in London \u2022 mother of houseplants \u2022 personal hairdresser to @_dormrod\",  \t\t\t\"translator_type\": \"none\",  \t\t\t\"protected\": false,  \t\t\t\"verified\": false,  \t\t\t\"followers_count\": 1032,  \t\t\t\"friends_count\": 1331,  \t\t\t\"listed_count\": 26,  \t\t\t\"favourites_count\": 4979,  \t\t\t\"statuses_count\": 854,  \t\t\t\"created_at\": \"Fri Jan 18 23:45:43 +0000 2013\",  \t\t\t\"utc_offset\": null,  \t\t\t\"time_zone\": null,  \t\t\t\"geo_enabled\": true,  \t\t\t\"lang\": null,  \t\t\t\"contributors_enabled\": false,  \t\t\t\"is_translator\": false,  \t\t\t\"profile_background_color\": \"8B542B\",  \t\t\t\"profile_background_image_url\": \"http://abs.twimg.com/images/themes/theme8/bg.gif\",  \t\t\t\"profile_background_image_url_https\": \"https://abs.twimg.com/images/themes/theme8/bg.gif\",  \t\t\t\"profile_background_tile\": false,  \t\t\t\"profile_link_color\": \"5E341C\",  \t\t\t\"profile_sidebar_border_color\": \"D9B17E\",  \t\t\t\"profile_sidebar_fill_color\": \"EADEAA\",  \t\t\t\"profile_text_color\": \"333333\",  \t\t\t\"profile_use_background_image\": true,  \t\t\t\"profile_image_url\": \"http://pbs.twimg.com/profile_images/1137517534104772608/8FBYgc6G_normal.jpg\",  \t\t\t\"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/1137517534104772608/8FBYgc6G_normal.jpg\",  \t\t\t\"profile_banner_url\": \"https://pbs.twimg.com/profile_banners/1102321381/1587552672\",  \t\t\t\"default_profile\": false,  \t\t\t\"default_profile_image\": false,  \t\t\t\"following\": null,  \t\t\t\"follow_request_sent\": null,  \t\t\t\"notifications\": null  \t\t},  \t\t\"geo\": null,  \t\t\"coordinates\": null,  \t\t\"place\": null,  \t\t\"contributors\": null,  \t\t\"quoted_status_id\": 1195000047089389600,  \t\t\"quoted_status_id_str\": \"1195000047089389573\",  \t\t\"quoted_status\": {  \t\t\t\"created_at\": \"Thu Nov 14 15:26:27 +0000 2019\",  \t\t\t\"id\": 1195000047089389600,  \t\t\t\"id_str\": \"1195000047089389573\",  \t\t\t\"text\": \"I wrote a tutorial on how to get bespoke commute information using the Twitter API\ud83d\ude87\\n\\n#DEVcommunity #Pythontutorial\u2026 https://t.co/pL0qJ4vhtE\",  \t\t\t\"source\": \"<a href=\\\"https://mobile.twitter.com\\\" rel=\\\"nofollow\\\">Twitter Web App</a>\",  \t\t\t\"truncated\": true,  \t\t\t\"in_reply_to_status_id\": null,  \t\t\t\"in_reply_to_status_id_str\": null,  \t\t\t\"in_reply_to_user_id\": null,  \t\t\t\"in_reply_to_user_id_str\": null,  \t\t\t\"in_reply_to_screen_name\": null,  \t\t\t\"user\": {  \t\t\t\t\"id\": 1102321381,  \t\t\t\t\"id_str\": \"1102321381\",  \t\t\t\t\"name\": \"Aurelia Specker\",  \t\t\t\t\"screen_name\": \"AureliaSpecker\",  \t\t\t\t\"location\": \"London, UK\",  \t\t\t\t\"url\": null,  \t\t\t\t\"description\": \"devrel @TwitterUK \u2022 Swiss in London \u2022 mother of houseplants \u2022 personal hairdresser to @_dormrod\",  \t\t\t\t\"translator_type\": \"none\",  \t\t\t\t\"protected\": false,  \t\t\t\t\"verified\": false,  \t\t\t\t\"followers_count\": 1032,  \t\t\t\t\"friends_count\": 1331,  \t\t\t\t\"listed_count\": 26,  \t\t\t\t\"favourites_count\": 4979,  \t\t\t\t\"statuses_count\": 854,  \t\t\t\t\"created_at\": \"Fri Jan 18 23:45:43 +0000 2013\",  \t\t\t\t\"utc_offset\": null,  \t\t\t\t\"time_zone\": null,  \t\t\t\t\"geo_enabled\": true,  \t\t\t\t\"lang\": null,  \t\t\t\t\"contributors_enabled\": false,  \t\t\t\t\"is_translator\": false,  \t\t\t\t\"profile_background_color\": \"8B542B\",  \t\t\t\t\"profile_background_image_url\": \"http://abs.twimg.com/images/themes/theme8/bg.gif\",  \t\t\t\t\"profile_background_image_url_https\": \"https://abs.twimg.com/images/themes/theme8/bg.gif\",  \t\t\t\t\"profile_background_tile\": false,  \t\t\t\t\"profile_link_color\": \"5E341C\",  \t\t\t\t\"profile_sidebar_border_color\": \"D9B17E\",  \t\t\t\t\"profile_sidebar_fill_color\": \"EADEAA\",  \t\t\t\t\"profile_text_color\": \"333333\",  \t\t\t\t\"profile_use_background_image\": true,  \t\t\t\t\"profile_image_url\": \"http://pbs.twimg.com/profile_images/1137517534104772608/8FBYgc6G_normal.jpg\",  \t\t\t\t\"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/1137517534104772608/8FBYgc6G_normal.jpg\",  \t\t\t\t\"profile_banner_url\": \"https://pbs.twimg.com/profile_banners/1102321381/1587552672\",  \t\t\t\t\"default_profile\": false,  \t\t\t\t\"default_profile_image\": false,  \t\t\t\t\"following\": null,  \t\t\t\t\"follow_request_sent\": null,  \t\t\t\t\"notifications\": null  \t\t\t},  \t\t\t\"geo\": null,  \t\t\t\"coordinates\": null,  \t\t\t\"place\": null,  \t\t\t\"contributors\": null,  \t\t\t\"is_quote_status\": false,  \t\t\t\"extended_tweet\": {  \t\t\t\t\"full_text\": \"I wrote a tutorial on how to get bespoke commute information using the Twitter API\ud83d\ude87\\n\\n#DEVcommunity #Pythontutorial \\n\\nCheck it out here \ud83d\udc47\\nhttps://t.co/sOjXW4YhbN\",  \t\t\t\t\"display_text_range\": [  \t\t\t\t\t0,  \t\t\t\t\t160  \t\t\t\t],  \t\t\t\t\"entities\": {  \t\t\t\t\t\"hashtags\": [{  \t\t\t\t\t\t\t\"text\": \"DEVcommunity\",  \t\t\t\t\t\t\t\"indices\": [  \t\t\t\t\t\t\t\t85,  \t\t\t\t\t\t\t\t98  \t\t\t\t\t\t\t]  \t\t\t\t\t\t},  \t\t\t\t\t\t{  \t\t\t\t\t\t\t\"text\": \"Pythontutorial\",  \t\t\t\t\t\t\t\"indices\": [  \t\t\t\t\t\t\t\t99,  \t\t\t\t\t\t\t\t114  \t\t\t\t\t\t\t]  \t\t\t\t\t\t}  \t\t\t\t\t],  \t\t\t\t\t\"urls\": [{  \t\t\t\t\t\t\"url\": \"https://t.co/sOjXW4YhbN\",  \t\t\t\t\t\t\"expanded_url\": \"https://dev.to/twitterdev/using-the-twitter-api-to-make-your-commute-easier-3od0\",  \t\t\t\t\t\t\"display_url\": \"dev.to/twitterdev/usi\u2026\",  \t\t\t\t\t\t\"unwound\": {  \t\t\t\t\t\t\t\"url\": \"https://dev.to/twitterdev/using-the-twitter-api-to-make-your-commute-easier-3od0\",  \t\t\t\t\t\t\t\"status\": 200,  \t\t\t\t\t\t\t\"title\": null,  \t\t\t\t\t\t\t\"description\": null  \t\t\t\t\t\t},  \t\t\t\t\t\t\"indices\": [  \t\t\t\t\t\t\t137,  \t\t\t\t\t\t\t160  \t\t\t\t\t\t]  \t\t\t\t\t}],  \t\t\t\t\t\"user_mentions\": [],  \t\t\t\t\t\"symbols\": []  \t\t\t\t}  \t\t\t},  \t\t\t\"quote_count\": 4,  \t\t\t\"reply_count\": 5,  \t\t\t\"retweet_count\": 31,  \t\t\t\"favorite_count\": 123,  \t\t\t\"entities\": {  \t\t\t\t\"hashtags\": [{  \t\t\t\t\t\t\"text\": \"DEVcommunity\",  \t\t\t\t\t\t\"indices\": [  \t\t\t\t\t\t\t85,  \t\t\t\t\t\t\t98  \t\t\t\t\t\t]  \t\t\t\t\t},  \t\t\t\t\t{  \t\t\t\t\t\t\"text\": \"Pythontutorial\",  \t\t\t\t\t\t\"indices\": [  \t\t\t\t\t\t\t99,  \t\t\t\t\t\t\t114  \t\t\t\t\t\t]  \t\t\t\t\t}  \t\t\t\t],  \t\t\t\t\"urls\": [{  \t\t\t\t\t\"url\": \"https://t.co/pL0qJ4vhtE\",  \t\t\t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1195000047089389573\",  \t\t\t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\",  \t\t\t\t\t\"indices\": [  \t\t\t\t\t\t116,  \t\t\t\t\t\t139  \t\t\t\t\t]  \t\t\t\t}],  \t\t\t\t\"user_mentions\": [],  \t\t\t\t\"symbols\": []  \t\t\t},  \t\t\t\"favorited\": false,  \t\t\t\"retweeted\": false,  \t\t\t\"possibly_sensitive\": false,  \t\t\t\"filter_level\": \"low\",  \t\t\t\"lang\": \"en\"  \t\t},  \t\t\"quoted_status_permalink\": {  \t\t\t\"url\": \"https://t.co/dXrJYvn3hY\",  \t\t\t\"expanded\": \"https://twitter.com/AureliaSpecker/status/1195000047089389573\",  \t\t\t\"display\": \"twitter.com/AureliaSpecker\u2026\"  \t\t},  \t\t\"is_quote_status\": true,  \t\t\"extended_tweet\": {  \t\t\t\"full_text\": \"\ud83d\udce3 If you enjoyed the London commute tutorial I wrote in November last year, check out the refactored version that uses Twitter's new search endpoint \ud83d\ude87 https://t.co/87XIPZmZBJ\\n\\n#DEVcommunity #Pythontutorial @TwitterDev @TwitterAPI https://t.co/dXrJYvn3hY\",  \t\t\t\"display_text_range\": [  \t\t\t\t0,  \t\t\t\t229  \t\t\t],  \t\t\t\"entities\": {  \t\t\t\t\"hashtags\": [{  \t\t\t\t\t\t\"text\": \"DEVcommunity\",  \t\t\t\t\t\t\"indices\": [  \t\t\t\t\t\t\t176,  \t\t\t\t\t\t\t189  \t\t\t\t\t\t]  \t\t\t\t\t},  \t\t\t\t\t{  \t\t\t\t\t\t\"text\": \"Pythontutorial\",  \t\t\t\t\t\t\"indices\": [  \t\t\t\t\t\t\t190,  \t\t\t\t\t\t\t205  \t\t\t\t\t\t]  \t\t\t\t\t}  \t\t\t\t],  \t\t\t\t\"urls\": [{  \t\t\t\t\t\t\"url\": \"https://t.co/87XIPZmZBJ\",  \t\t\t\t\t\t\"expanded_url\": \"https://bit.ly/2OrnrCC\",  \t\t\t\t\t\t\"display_url\": \"bit.ly/2OrnrCC\",  \t\t\t\t\t\t\"unwound\": {  \t\t\t\t\t\t\t\"url\": \"https://dev.to/twitterdev/migrate-to-twitter-s-newly-released-labs-recent-search-endpoint-3npe\",  \t\t\t\t\t\t\t\"status\": 200,  \t\t\t\t\t\t\t\"title\": null,  \t\t\t\t\t\t\t\"description\": null  \t\t\t\t\t\t},  \t\t\t\t\t\t\"indices\": [  \t\t\t\t\t\t\t151,  \t\t\t\t\t\t\t174  \t\t\t\t\t\t]  \t\t\t\t\t},  \t\t\t\t\t{  \t\t\t\t\t\t\"url\": \"https://t.co/dXrJYvn3hY\",  \t\t\t\t\t\t\"expanded_url\": \"https://twitter.com/AureliaSpecker/status/1195000047089389573\",  \t\t\t\t\t\t\"display_url\": \"twitter.com/AureliaSpecker\u2026\",  \t\t\t\t\t\t\"indices\": [  \t\t\t\t\t\t\t230,  \t\t\t\t\t\t\t253  \t\t\t\t\t\t]  \t\t\t\t\t}  \t\t\t\t],  \t\t\t\t\"user_mentions\": [{  \t\t\t\t\t\t\"screen_name\": \"TwitterDev\",  \t\t\t\t\t\t\"name\": \"Twitter Dev\",  \t\t\t\t\t\t\"id\": 2244994945,  \t\t\t\t\t\t\"id_str\": \"2244994945\",  \t\t\t\t\t\t\"indices\": [  \t\t\t\t\t\t\t206,  \t\t\t\t\t\t\t217  \t\t\t\t\t\t]  \t\t\t\t\t},  \t\t\t\t\t{  \t\t\t\t\t\t\"screen_name\": \"TwitterAPI\",  \t\t\t\t\t\t\"name\": \"Twitter API\",  \t\t\t\t\t\t\"id\": 6253282,  \t\t\t\t\t\t\"id_str\": \"6253282\",  \t\t\t\t\t\t\"indices\": [  \t\t\t\t\t\t\t218,  \t\t\t\t\t\t\t229  \t\t\t\t\t\t]  \t\t\t\t\t}  \t\t\t\t],  \t\t\t\t\"symbols\": []  \t\t\t}  \t\t},  \t\t\"quote_count\": 2,  \t\t\"reply_count\": 0,  \t\t\"retweet_count\": 12,  \t\t\"favorite_count\": 43,  \t\t\"entities\": {  \t\t\t\"hashtags\": [],  \t\t\t\"urls\": [{  \t\t\t\t\"url\": \"https://t.co/cAepHunkFp\",  \t\t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1224709550214873090\",  \t\t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\",  \t\t\t\t\"indices\": [  \t\t\t\t\t117,  \t\t\t\t\t140  \t\t\t\t]  \t\t\t}],  \t\t\t\"user_mentions\": [],  \t\t\t\"symbols\": []  \t\t},  \t\t\"favorited\": false,  \t\t\"retweeted\": false,  \t\t\"possibly_sensitive\": false,  \t\t\"filter_level\": \"low\",  \t\t\"lang\": \"en\"  \t},  \t\"quoted_status_id\": 1195000047089389600,  \t\"quoted_status_id_str\": \"1195000047089389573\",  \t\"quoted_status\": {  \t\t\"created_at\": \"Thu Nov 14 15:26:27 +0000 2019\",  \t\t\"id\": 1195000047089389600,  \t\t\"id_str\": \"1195000047089389573\",  \t\t\"text\": \"I wrote a tutorial on how to get bespoke commute information using the Twitter API\ud83d\ude87\\n\\n#DEVcommunity #Pythontutorial\u2026 https://t.co/pL0qJ4vhtE\",  \t\t\"source\": \"<a href=\\\"https://mobile.twitter.com\\\" rel=\\\"nofollow\\\">Twitter Web App</a>\",  \t\t\"truncated\": true,  \t\t\"in_reply_to_status_id\": null,  \t\t\"in_reply_to_status_id_str\": null,  \t\t\"in_reply_to_user_id\": null,  \t\t\"in_reply_to_user_id_str\": null,  \t\t\"in_reply_to_screen_name\": null,  \t\t\"user\": {  \t\t\t\"id\": 1102321381,  \t\t\t\"id_str\": \"1102321381\",  \t\t\t\"name\": \"Aurelia Specker\",  \t\t\t\"screen_name\": \"AureliaSpecker\",  \t\t\t\"location\": \"London, UK\",  \t\t\t\"url\": null,  \t\t\t\"description\": \"devrel @TwitterUK \u2022 Swiss in London \u2022 mother of houseplants \u2022 personal hairdresser to @_dormrod\",  \t\t\t\"translator_type\": \"none\",  \t\t\t\"protected\": false,  \t\t\t\"verified\": false,  \t\t\t\"followers_count\": 1032,  \t\t\t\"friends_count\": 1331,  \t\t\t\"listed_count\": 26,  \t\t\t\"favourites_count\": 4979,  \t\t\t\"statuses_count\": 854,  \t\t\t\"created_at\": \"Fri Jan 18 23:45:43 +0000 2013\",  \t\t\t\"utc_offset\": null,  \t\t\t\"time_zone\": null,  \t\t\t\"geo_enabled\": true,  \t\t\t\"lang\": null,  \t\t\t\"contributors_enabled\": false,  \t\t\t\"is_translator\": false,  \t\t\t\"profile_background_color\": \"8B542B\",  \t\t\t\"profile_background_image_url\": \"http://abs.twimg.com/images/themes/theme8/bg.gif\",  \t\t\t\"profile_background_image_url_https\": \"https://abs.twimg.com/images/themes/theme8/bg.gif\",  \t\t\t\"profile_background_tile\": false,  \t\t\t\"profile_link_color\": \"5E341C\",  \t\t\t\"profile_sidebar_border_color\": \"D9B17E\",  \t\t\t\"profile_sidebar_fill_color\": \"EADEAA\",  \t\t\t\"profile_text_color\": \"333333\",  \t\t\t\"profile_use_background_image\": true,  \t\t\t\"profile_image_url\": \"http://pbs.twimg.com/profile_images/1137517534104772608/8FBYgc6G_normal.jpg\",  \t\t\t\"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/1137517534104772608/8FBYgc6G_normal.jpg\",  \t\t\t\"profile_banner_url\": \"https://pbs.twimg.com/profile_banners/1102321381/1587552672\",  \t\t\t\"default_profile\": false,  \t\t\t\"default_profile_image\": false,  \t\t\t\"following\": null,  \t\t\t\"follow_request_sent\": null,  \t\t\t\"notifications\": null  \t\t},  \t\t\"geo\": null,  \t\t\"coordinates\": null,  \t\t\"place\": null,  \t\t\"contributors\": null,  \t\t\"is_quote_status\": false,  \t\t\"extended_tweet\": {  \t\t\t\"full_text\": \"I wrote a tutorial on how to get bespoke commute information using the Twitter API\ud83d\ude87\\n\\n#DEVcommunity #Pythontutorial \\n\\nCheck it out here \ud83d\udc47\\nhttps://t.co/sOjXW4YhbN\",  \t\t\t\"display_text_range\": [  \t\t\t\t0,  \t\t\t\t160  \t\t\t],  \t\t\t\"entities\": {  \t\t\t\t\"hashtags\": [{  \t\t\t\t\t\t\"text\": \"DEVcommunity\",  \t\t\t\t\t\t\"indices\": [  \t\t\t\t\t\t\t85,  \t\t\t\t\t\t\t98  \t\t\t\t\t\t]  \t\t\t\t\t},  \t\t\t\t\t{  \t\t\t\t\t\t\"text\": \"Pythontutorial\",  \t\t\t\t\t\t\"indices\": [  \t\t\t\t\t\t\t99,  \t\t\t\t\t\t\t114  \t\t\t\t\t\t]  \t\t\t\t\t}  \t\t\t\t],  \t\t\t\t\"urls\": [{  \t\t\t\t\t\"url\": \"https://t.co/sOjXW4YhbN\",  \t\t\t\t\t\"expanded_url\": \"https://dev.to/twitterdev/using-the-twitter-api-to-make-your-commute-easier-3od0\",  \t\t\t\t\t\"display_url\": \"dev.to/twitterdev/usi\u2026\",  \t\t\t\t\t\"unwound\": {  \t\t\t\t\t\t\"url\": \"https://dev.to/twitterdev/using-the-twitter-api-to-make-your-commute-easier-3od0\",  \t\t\t\t\t\t\"status\": 200,  \t\t\t\t\t\t\"title\": null,  \t\t\t\t\t\t\"description\": null  \t\t\t\t\t},  \t\t\t\t\t\"indices\": [  \t\t\t\t\t\t137,  \t\t\t\t\t\t160  \t\t\t\t\t]  \t\t\t\t}],  \t\t\t\t\"user_mentions\": [],  \t\t\t\t\"symbols\": []  \t\t\t}  \t\t},  \t\t\"quote_count\": 4,  \t\t\"reply_count\": 5,  \t\t\"retweet_count\": 31,  \t\t\"favorite_count\": 123,  \t\t\"entities\": {  \t\t\t\"hashtags\": [{  \t\t\t\t\t\"text\": \"DEVcommunity\",  \t\t\t\t\t\"indices\": [  \t\t\t\t\t\t85,  \t\t\t\t\t\t98  \t\t\t\t\t]  \t\t\t\t},  \t\t\t\t{  \t\t\t\t\t\"text\": \"Pythontutorial\",  \t\t\t\t\t\"indices\": [  \t\t\t\t\t\t99,  \t\t\t\t\t\t114  \t\t\t\t\t]  \t\t\t\t}  \t\t\t],  \t\t\t\"urls\": [{  \t\t\t\t\"url\": \"https://t.co/pL0qJ4vhtE\",  \t\t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1195000047089389573\",  \t\t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\",  \t\t\t\t\"indices\": [  \t\t\t\t\t116,  \t\t\t\t\t139  \t\t\t\t]  \t\t\t}],  \t\t\t\"user_mentions\": [],  \t\t\t\"symbols\": []  \t\t},  \t\t\"favorited\": false,  \t\t\"retweeted\": false,  \t\t\"possibly_sensitive\": false,  \t\t\"filter_level\": \"low\",  \t\t\"lang\": \"en\"  \t},  \t\"quoted_status_permalink\": {  \t\t\"url\": \"https://t.co/dXrJYvn3hY\",  \t\t\"expanded\": \"https://twitter.com/AureliaSpecker/status/1195000047089389573\",  \t\t\"display\": \"twitter.com/AureliaSpecker\u2026\"  \t},  \t\"is_quote_status\": true,  \t\"quote_count\": 0,  \t\"reply_count\": 0,  \t\"retweet_count\": 0,  \t\"favorite_count\": 0,  \t\"entities\": {  \t\t\"hashtags\": [],  \t\t\"urls\": [],  \t\t\"user_mentions\": [{  \t\t\t\"screen_name\": \"AureliaSpecker\",  \t\t\t\"name\": \"Aurelia Specker\",  \t\t\t\"id\": 1102321381,  \t\t\t\"id_str\": \"1102321381\",  \t\t\t\"indices\": [  \t\t\t\t3,  \t\t\t\t18  \t\t\t]  \t\t}],  \t\t\"symbols\": []  \t},  \t\"favorited\": false,  \t\"retweeted\": false,  \t\"filter_level\": \"low\",  \t\"lang\": \"en\",  \t\"matching_rules\": [{  \t\t\"tag\": null  \t}]  }`  \nActivity object  \nInterested in learning more about how the Activity Streams data format maps to the Twitter API v2 format?  \nCheck out our comparison guide:\u00a0[Activity Streams compared to Twitter API v2](https://developer.twitter.com/en/docs/twitter-api/migrate/data-formats/activity-streams-to-v2)  \nPlease note: It is highly recommended to use the [Enriched Native](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/tweet.html) format for enterprise data APIs.  \n* The Enriched Native format includes all new metadata since 2017, such as [poll metadata](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/poll-metadata.html), and additional metrics such as reply\\_count and quote\\_count.  \n* Activity Streams format has not been updated with new metadata or enrichments since the\u00a0[character update](https://blog.twitter.com/official/en_us/topics/product/2017/Giving-you-more-characters-to-express-yourself.html)\u00a0in 2017.\n",
        "line_start": 1400,
        "line_end": 1408
    },
    "73": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tActivity Object\n\nContent: \n## Activity Object  \nActivity Streams is an object schema translation of Twitter's [original data format](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/overview/intro-to-tweet-json) created by Gnip to 'normalize the format' of Tweet data and other social media data using the third party [Activity Base Schema described here](https://activitystrea.ms/head/activity-schema.html).\u00a0 Tweets are normalized into the activity streams schema, including: note, person, place and service object types as nested objects.\u00a0 Tweets can have other nested Tweet activity obejcts for Retweets, or others including twitter\\_quoted\\_status, long\\_object.  \nThe base level object type \"activity\" is similar to the [Tweet base level object](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/tweet.html) of the native enriched format.\u00a0 Example payloads in activity streams format can be found [here](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/example-payloads.html).\n",
        "line_start": 1417,
        "line_end": 1420
    },
    "74": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tActivity Object\n\tData Dictionary\n\nContent: \n### Data Dictionary  \nBelow you will find the data dictionary for these \u2018root-level\u2019 \"activity\" attributes, as well as links to child object data dictionaries.  \n|     |     |     |\n| --- | --- | --- |\n| Attribute | Type | Description |\n| id  | string | A unique IRI for the tweet. In more detail, \"tag\" is the scheme, \"search.twitter.com\" represents the domain for the scheme, and 2005 is when the scheme was derived.  <br>When storing Tweets, this should be used as the unique identifier or primary key.  <br>\"id\": \"tag:search.twitter.com,2005:1050118621198921728\" |\n| objectType | string | Type of object, always set to \"activity\"  <br>\"objectType\": \"activity\" |\n| object | object | An object representing tweet being posted or shared.  <br>For Retweets, this will contain an entire \"activity\", with the pertinent fields described in this schema.  <br>For Original Tweets, this will contain a \"note\" object, with the fields described here.  <br>\"object\":  <br>\"object\": {  <br>\"objectType\": \"note\",  <br>\"id\": \"object:search.twitter.com,2005:1050118621198921728\",  <br>\"summary\": \"To make room for more expression, we will now count all emojis as equal\u2014including those with gender\u200d\u200d\u200d \u200d\u200dand skin t\u2026 https://t.co/MkGjXf9aXm\",  <br>\"link\": \"http://twitter.com/TwitterAPI/statuses/1050118621198921728\",  <br>\"postedTime\": \"2018-10-10T20:19:24.000Z\"  <br>} |\n| long\\_object | object | An object representing the full text body if the Tweet text extends beyond 140 characters.  <br>  <br>  <br>\"long\\_object\": {  <br>\"body\": \"To make room for more expression, we will now count all emojis as equal\u2014including those with gender\u200d\u200d\u200d \u200d\u200dand skin tone modifiers \ud83d\udc4d\ud83c\udffb\ud83d\udc4d\ud83c\udffd\ud83d\udc4d\ud83c\udfff. This is now reflected in Twitter-Text, our Open Source library. \\\\n\\\\nUsing Twitter-Text? See the forum post for detail: https://t.co/Nx1XZmRCXA\",  <br>\"display\\_text\\_range\": \\[  <br>0,  <br>277  <br>\\],  <br>\"twitter\\_entities\": {  <br>\"hashtags\": \\[\\],  <br>\"urls\": \\[  <br>{  <br>\"url\": \"https://t.co/Nx1XZmRCXA\",  <br>\"expanded\\_url\": \"https://twittercommunity.com/t/new-update-to-the-twitter-text-library-emoji-character-count/114607\",  <br>\"display\\_url\": \"twittercommunity.com/t/new-update-t\u2026\",  <br>\"indices\": \\[  <br>254,  <br>277  <br>\\]  <br>}  <br>\\],  <br>\"user\\_mentions\": \\[\\],  <br>\"symbols\": \\[\\]  <br>}  <br>} |\n| display\\_text\\_range | array | if the Tweet text extends beyond 140 characters.  <br>  <br>  <br>\"display\\_text\\_range\": \\[  <br>0,  <br>142  <br>\\] |\n| verb | string | [The type of action being taken by the user.  <br>Tweets, \"post\"  <br>Retweets, \"share\"  <br>Deleted Tweets, \"delete\"  <br>The verb is the proper way to distinguish between a Tweet and a true Retweet. However, this only applies to true retweets, and not modified or quoted Tweets, which don't use Twitter's Retweet functionality. For a description of AS verbs](http://activitystrea.ms/head/activity-schema.html#verbs) [click here](http://activitystrea.ms/head/activity-schema.html#verbs).  <br>For Deletes, note that only a limited number of fields will be included, as shown in the sample payload below.  <br>\"verb\": \"post\" |\n| postedTime | date (ISO 8601) | The time the action occurred, e.g. the time the Tweet was posted.  <br>  <br>  <br>\"postedTime\": \"2018-10-10T20:19:24.000Z\" |\n| generator | object | An object representing the utility used to post the Tweet. This will contain the name (\"displayName\") and a link (\"link\") for the source application generating the Tweet.  <br>\"generator\": {  <br>\"displayName\": \"Twitter Web Client\",  <br>\"link\": \"http://twitter.com\"  <br>} |\n| provider | object | A JSON object representing the provider of the activity. This will contain an objectType (\"service\"), the name of the provider (\"displayName\"), and a link to the provider's website (\"link\").  <br>\"provider\":  <br>{  <br>\"objectType\": \"service\",  <br>\"displayName\": \"Twitter\",  <br>\"link\": \"http://www.twitter.com\"  <br>} |\n| link | string | A Permalink for the tweet.  <br>\"link\": \"http://twitter.com/TwitterAPI/statuses/1050118621198921728\" |\n| body | string | The tweet text.  <br>  <br>In Retweets, note that Twitter modifies the value of the body at the root level by adding \"RT @username\" at the beginning, and by truncating the original text and adding an ellipsis at the end. Thus, for Retweets, your app should look at the object.body to ensure that it is extracting the non-modified text of the original Tweet (being retweeted).  <br>\"body\": \"With Cardiff, Crystal Palace, and Hull City joining the EPL from the Championship it will be a great relegation battle at the end.\" |\n| display\\_text\\_range | array | Describes the range of characters within the body text that indicates the displayed Tweet. Tweets with leading @mentions will start at more than 0 and Tweets with attached media or that extened beyond 140 characters will indicate the display\\_text\\_range in the long\\_object.  <br>  <br>\"display\\_text\\_range\": \\[  <br>14,  <br>42  <br>\\]  <br>or  <br>\"long\\_object\": {  <br>\"display\\_text\\_range\": \\[  <br>0,  <br>277  <br>\\]... |\n| actor | object | [An object representing the twitter user who tweeted. The Actor Object refers to a Twitter User, and contains all metadata relevant to that user.  <br>See](https://aem.twitter.biz/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/actor.html) [actor object details](https://aem.twitter.biz/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/actor.html) |\n| inReplyTo | object | A JSON object referring to the Tweet being replied to, if applicable. Contains a link to the Tweet.  <br>\"inReplyTo\":  <br>{  <br>\"link\": \"http:\\\\/\\\\/twitter.com\\\\/GOP\\\\/statuses\\\\/349573991561838593\"  <br>} |\n| location | object | [A JSON object representing the Twitter \"Place\" where the tweet was created. This is an object passed through from the Twitter platform.  <br>  <br>See](https://aem.twitter.biz/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/location.html) [location object](https://aem.twitter.biz/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/location.html) |\n| twitter\\_entities | object | The entities object from Twitter's data format which contains lists of urls, mentions and hashtags. Please reference the Twitter documentation on Entities here Note that in Retweets, Twitter may truncate the values of entities that it extracts at the root level. So, for Retweets, your app should look at object.twitter\\_entities to ensure that you are using non-truncated values.  <br>  <br>See twitter\\_entities object details |\n| twitter\\_extended\\_entities | object | An object from Twitter's native data format containing \"media\". This will be present for any Tweet where the twitter\\_entities object has data present in the \"media\" field, and will include multiple photos where present in the post. Note that this is the correct location to retrieve media information for multi-photo posts.  <br>  <br>Multiple photos are represented by comma-separated JSON objects within the \"media\" array.  <br>  <br>See [twitter\\_extended\\_entities object details](https://aem.twitter.biz/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/twitter-extended-entities.html) |\n| gnip | object | An object added to the activity payload to indicate the matching rules, and added enriched data based on enrichments active on the stream or product.  <br>  <br>See [gnip object details](https://aem.twitter.biz/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/gnip.html) |\n| edit\\_history | Object | Unique identifiers indicating all versions of a Tweet. For Tweets with no edits, there will be one ID. For Tweets with an edit history, there will be multiple IDs, arranged in ascending order reflecting the order of edits, with the most recent version in the last position of the array.\u00a0<br><br>The Tweet IDs can be used to hydrate and view previous versions of a Tweet.<br><br>Example:<br><br>edit\\_history\": {<br>    \"initial\\_tweet\\_id\": \"1283764123\"<br>    \"edit\\_tweet\\_ids\": \\[\"1283764123\", \"1394263866\"\\]<br>  } |\n| edit\\_controls | Object | When present, indicates how long a Tweet is still editable for and the number of remaining edits. Tweets are only editable for the first 30 minutes after creation and can be edited up to five times.\u00a0<br><br>The Tweet IDs can be used to hydrate and view previous versions of a Tweet.<br><br>Example:<br><br>\"edit\\_controls\": {  <br>     \"editable\\_until\\_ms\": 123<br>     \"edits\\_remaining\": 3   <br>  } |\n| editable | Boolean | When present, indicates if a Tweet was eligible for edit when published. This field is not dynamic and won't toggle from True to False when a Tweet reaches its editable time limit, or maximum number of edits. The following Tweet features will cause this field to be false:<br><br>* Tweets is promoted<br>* Tweet has a poll<br>* Tweet is a non-self-thread reply<br>* Tweet is a retweet (note that Quote Tweets are eligible for edit)<br>* Tweet is nullcast<br>* Community Tweet<br>* Superfollow Tweet<br>* Collaborative Tweet |\n",
        "line_start": 1423,
        "line_end": 1449
    },
    "75": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tActivity Object\n\t\n\nContent: \n###\nAdditional Tweet attributes  \n| Attribute | Type | Description |\n| --- | --- | --- |\n| twitter\\_lang | string |     |\n| favoritesCount | int | _Nullable._\u00a0Indicates approximately how many times this Tweet has been\u00a0liked\u00a0by Twitter users.  <br>  <br>\"favoritesCount\":298 |\n| retweetCount | int | Number of times this Tweet has been retweeted. Example:<br><br>\"retweetCount\":153 |\n",
        "line_start": 405,
        "line_end": 412
    },
    "76": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tActivity Object\n\tDeprecated Attributes\n\nContent: \n### Deprecated Attributes  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| geo | object | Point location where the Tweet was created. |\n| twitter\\_filter\\_level | string | Deprecated field left in for non breaking change |\n",
        "line_start": 308,
        "line_end": 314
    },
    "77": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tActivity Object\n\tNested Tweet activity obejcts\n\nContent: \n### Nested Tweet activity obejcts  \nIn several cases, a Tweet object will included other nested Tweets.\u00a0\u00a0If you are working with nested objects, then that JSON payload will contain multiple objects, and each Tweet object may contain its own objects. The root-level object will contain information on the type of action taken, i.e. whether it is a Retweet or a Quote Tweet, and may also contain an object that describes the 'original' Tweet being shared. Extended Tweets will include a nested extended object that extends beyond 140 characters, which was used to prevent breaking changes when the update was made in 2017. Each nested object dictionary is described below.  \n#### Retweets  \nActivity streams format of Retweets includes a nested object with the type \"activity\" and the verb \"note\" to represent the original Tweet being Retweeted.  \n`{ \t\"id\": \"tag:search.twitter.com,2005:222222222222\", \t\"objectType\": \"activity\", \t\"verb\": \"share\", \t\"body\": \"RT @TheOriginalTweeter: Coffee and art \u2615\ufe0f\", \t\"actor\": { \t\t\"displayName\": \"TheRetweeter\" \t}, \t\"object\": { \t\t\"id\": \"tag:search.twitter.com,2005:11111111111\", \t\t\"objectType\": \"activity\", \t\t\"verb\": \"post\", \t\t\"body\": \"Coffee and art \u2615\ufe0f\", \t\t\"actor\": { \t\t\t\"displayName\": \"TheOriginalTweeter\" \t\t}, \t\t\"object\": { \t\t\t\"objectType\": \"note\", \t\t\t\"id\": \"object:search.twitter.com,2005:11111111111\", \t\t\t\"summary\": \"Coffee and art \u2615\ufe0f\", \t\t\t\"link\": \"http://twitter.com/originaltweeter/statuses/11111111111\", \t\t\t\"postedTime\": \"2020-12-04T11:00:01.000Z\" \t\t}, \t\t\"twitter_entities\": {}, \t\t\"twitter_extended_entities\": {} \t}, \t\"twitter_entities\": {}, \t\"twitter_extended_entities\": {}, \t\"gnip\": {} }`  \n#### Twitter quoted status  \nActivity streams format embeded quote Tweets  \n`{ \t\"id\": \"tag:search.twitter.com,2005:222222222222\", \t\"objectType\": \"activity\", \t\"verb\": \"post\", \t\"body\": \"Quoting a Tweet: https://t.co/mxiFJ59FlB\", \t\"actor\": { \t\t\"displayName\": \"TheQuoter2\" \t}, \t\"object\": { \t\t\"objectType\": \"note\", \t\t\"id\": \"object:search.twitter.com,2005:111111111\", \t\t\"summary\": \"https://t.co/mxiFJ59FlB\" \t}, \t\"twitter_entities\": {}, \t\"twitter_extended_entities\": {}, \t\"gnip\": {}, \t\"twitter_quoted_status\": { \t\t\"id\": \"tag:search.twitter.com,2005:111111111\", \t\t\"objectType\": \"activity\", \t\t\"verb\": \"post\", \t\t\"body\": \"console.log('Happy birthday, JavaScript!');\", \t\t\"actor\": { \t\t\t\"displayName\": \"TheOriginalTweeter\" \t\t}, \t\t\"object\": { \t\t\t\"objectType\": \"note\", \t\t\t\"id\": \"object:search.twitter.com,2005:111111111\" \t\t}, \t\t\"twitter_entities\": {} \t} }`  \nRetweeted Quote Tweet:  \n`    {     \t\"id\": \"tag:search.twitter.com,2005:1293612267087384577\",     \t\"objectType\": \"activity\",     \t\"verb\": \"share\",     \t\"postedTime\": \"2020-08-12T18:16:13.000Z\",     \t\"generator\": {},     \t\"provider\": {},     \t\"link\": \"http://twitter.com/TwitterDev/statuses/1293612267087384577\",     \t\"body\": \"RT @compston: So excited to make this first set of endpoints available - many more to come before we're done. The @TwitterDev #DevRel team\u2026\",     \t\"actor\": {},     \t\"object\": {},     \t\"favoritesCount\": 0,     \t\"twitter_entities\": {},     \t\"twitter_lang\": \"en\",     \t\"retweetCount\": 13,     \t\"gnip\": {},     \t\"twitter_filter_level\": \"low\",     \t\"twitter_quoted_status\": {}     }`\n",
        "line_start": 1469,
        "line_end": 1479
    },
    "78": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tActivity Object\n\tLong object\n\nContent: \n### Long object  \nActivity streams format of the extended\\_tweet  \n`{   \"id\": \"tag:search.twitter.com,2005:1050118621198921728\",   \"objectType\": \"activity\",   \"verb\": \"post\",   \"postedTime\": \"2018-10-10T20:19:24.000Z\",   \"generator\": {     \"displayName\": \"Twitter Web Client\",     \"link\": \"http://twitter.com\"   },   \"provider\": {     \"objectType\": \"service\",     \"displayName\": \"Twitter\",     \"link\": \"http://www.twitter.com\"   },   \"link\": \"http://twitter.com/TwitterAPI/statuses/1050118621198921728\",   \"body\": \"To make room for more expression, we will now count all emojis as equal\u2014including those with gender\u200d\u200d\u200d \u200d\u200dand skin t\u2026 https://t.co/MkGjXf9aXm\",   \"long_object\": {     \"body\": \"To make room for more expression, we will now count all emojis as equal\u2014including those with gender\u200d\u200d\u200d \u200d\u200dand skin tone modifiers \ud83d\udc4d\ud83c\udffb\ud83d\udc4d\ud83c\udffd\ud83d\udc4d\ud83c\udfff. This is now reflected in Twitter-Text, our Open Source library. \\n\\nUsing Twitter-Text? See the forum post for detail: https://t.co/Nx1XZmRCXA\",     \"display_text_range\": [       0,       277     ],     \"twitter_entities\": {see twitter_entities object},   \"actor\": {see actor object},   \"object\": {     \"objectType\": \"note\",     \"id\": \"object:search.twitter.com,2005:1050118621198921728\",     \"summary\": \"To make room for more expression, we will now count all emojis as equal\u2014including those with gender\u200d\u200d\u200d \u200d\u200dand skin t\u2026 https://t.co/MkGjXf9aXm\",     \"link\": \"http://twitter.com/TwitterAPI/statuses/1050118621198921728\",     \"postedTime\": \"2018-10-10T20:19:24.000Z\"   },   \"favoritesCount\": 298,   \"twitter_entities\": {see twitter_entities object},   \"twitter_lang\": \"en\",   \"retweetCount\": 153,   \"gnip\": {see gnip object},   \"twitter_filter_level\": \"low\" }`\n",
        "line_start": 1492,
        "line_end": 1495
    },
    "79": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tActivity Object\n\tNext Steps\n\nContent: \n### Next Steps  \nExplore the other nested objects of this format:  \n* Review actor object\n* Review location object\n* Review twitter\\_entities object\n* See migration guide from Activity Streams to Twitter API v2 format  \nActor object\n",
        "line_start": 365,
        "line_end": 372
    },
    "80": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tActor object\n\nContent: \n## Actor object  \nThe actor object contains Twitter User account metadata that describes the Twitter User which created the activity.\n",
        "line_start": 1510,
        "line_end": 1512
    },
    "81": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tActor object\n\tData Dictionary\n\nContent: \n### Data Dictionary  \n| Attribute | Type | Description |\n| --- | --- | --- |\n| objectType | string | **\"objectType\":** \"person\" |\n| id  | string | The string representation of the unique identifier for this author.\u00a0Example:<br><br>\"id:twitter.com:2244994945\" |\n| link |     | \"http://www.twitter.com/TwitterDev |\n| displayName | String | The name of the user, as they\u2019ve defined it. Not necessarily a person\u2019s name. Typically capped at 50 characters, but subject to change. Example:<br><br>**\"displayName\":** \"Twitter Dev\" |\n| preferredUsername | string | The screen name, handle, or alias that this user identifies themselves with. Unique but subject to change. Use `id` as a user identifier whenever possible. Typically a maximum of 15 characters long, but some historical accounts may exist with longer names. Example:<br><br>**\"preferredUsername\":** \"TwitterDev\" |\n| location | object | **\"location\": {**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"objectType\":** \"place\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"displayName\":** \"127.0.0.1\"<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **}** |\n| links | array | _Nullable_ . A URL provided by the user in association with their profile. Example:<br><br>\u00a0 \u00a0 \u00a0 \u00a0**\"links\": \\[**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **{**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"href\":** \"https://developer.twitter.com/en/community\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"rel\":** \"me\"<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **}**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **\\]** |\n| summary | string | _Nullable_ . The user-defined UTF-8 string describing their account. Example:<br><br>**\"summary\":** \"The voice of the #TwitterDev team...\" |\n| protected | Boolean | When true, indicates that this user has chosen to protect their Tweets. See [About Public and Protected Tweets](https://support.twitter.com/articles/14016-about-public-and-protected-tweets) . Example:<br><br>\"protected\": true |\n| verified | Boolean | When true, indicates that the user has a verified account. See [Verified Accounts](https://support.twitter.com/articles/119135-faqs-about-verified-accounts) . Example:<br><br>\"verified\": false |\n| followersCount | Int | The number of followers this account currently has. Under certain conditions of duress, this field will temporarily indicate \u201c0\u201d. Example:<br><br>\"followers\\_count\": 21 |\n| friendsCount | Int | The number of users this account is following (AKA their \u201cfollowings\u201d). Under certain conditions of duress, this field will temporarily indicate \u201c0\u201d. Example:<br><br>\"friends\\_count\": 32 |\n| listedCount | Int | The number of public lists that this user is a member of. Example:<br><br>\"listed\\_count\": 9274 |\n| favoritesCount | Int | The number of Tweets this user has liked in the account\u2019s lifetime. British spelling used in the field name for historical reasons. Example:<br><br>\"favourites\\_count\": 13 |\n| statusesCount | Int | The number of Tweets (including retweets) issued by the user. Example:<br><br>\"statuses\\_count\": 42 |\n| postedTime | date | The UTC datetime that the user account was created on Twitter. Example:<br><br>**\"postedTime\":** \"2013-12-14T04:35:55.036Z\" |\n| image | string | A HTTPS-based URL pointing to the user\u2019s profile image. Example:<br><br>**\"image\":** \"https://pbs.twimg.com/profile\\_images/1283786620521652229/lEODkLTh\\_normal.jpg\" |\n",
        "line_start": 1423,
        "line_end": 1443
    },
    "82": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tActor object\n\t\n\nContent: \n###\nNo longer supported (deprecated) attributes  \n| Field | Type | Description |\n| --- | --- | --- |\n| utcOffset | null | Value\u00a0will be set to null. Still available via [GET account/settings](https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/get-account-settings) |\n| twitterTimeZone | null | Value\u00a0will be set to null.\u00a0Still available via [GET account/settings](https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/get-account-settings) as tzinfo\\_name |\n| languages | null | Value\u00a0will be set to null.\u00a0Still available via [GET account/settings](https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/get-account-settings) as language |  \n###\nExamples:  \n`      \"actor\": {         \"objectType\": \"person\",         \"id\": \"id:twitter.com:2244994945\",         \"link\": \"http://www.twitter.com/TwitterDev\",         \"displayName\": \"Twitter Dev\",         \"postedTime\": \"2013-12-14T04:35:55.036Z\",         \"image\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\",         \"summary\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\",         \"friendsCount\": 2039,         \"followersCount\": 512197,         \"listedCount\": 1662,         \"statusesCount\": 3632,         \"twitterTimeZone\": null,         \"verified\": true,         \"utcOffset\": null,         \"preferredUsername\": \"TwitterDev\",         \"languages\": [],         \"links\": [           {             \"href\": \"https://developer.twitter.com/en/community\",             \"rel\": \"me\"           }         ],         \"location\": {           \"objectType\": \"place\",           \"displayName\": \"127.0.0.1\"         },         \"favoritesCount\": 2147       }`  \n`\"actor\": {     \"objectType\": \"person\",     \"id\": \"id:twitter.com:6253282\",     \"link\": \"http://www.twitter.com/TwitterAPI\",     \"displayName\": \"Twitter API\",     \"postedTime\": \"2007-05-23T06:01:13.000Z\",     \"image\": \"https://pbs.twimg.com/profile_images/942858479592554497/BbazLO9L_normal.jpg\",     \"summary\": \"Tweets about changes and service issues. Follow @TwitterDev\u00a0for more.\",     \"friendsCount\": 39,     \"followersCount\": 6054164,     \"listedCount\": 12285,     \"statusesCount\": 3689,     \"twitterTimeZone\": null,     \"verified\": true,     \"utcOffset\": null,     \"preferredUsername\": \"TwitterAPI\",     \"languages\": [            ],     \"links\": [       {         \"href\": \"https://developer.twitter.com\",         \"rel\": \"me\"       }     ],     \"favoritesCount\": 4   }`\n",
        "line_start": 405,
        "line_end": 416
    },
    "83": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tActor object\n\tNext Steps\n\nContent: \n### Next Steps  \nExplore the other sub-objects that a Tweet contains:  \n* [Tweet object and data dictionary](https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/tweet-object.html)\n* [Entities object and data dictionary](https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/entities-object.html)\n* [Extended Entities object and data dictionary](https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/extended-entities-object.html)\n* [Tweet geo objects and data dictionaries](https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/geo-objects.html)  \nLocation object\n",
        "line_start": 365,
        "line_end": 372
    },
    "84": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tLocation Object\n\nContent: \n## Location Object  \nLocation obejcts can exist within the actor obejct set on the Twitter account level or within the profileLocations object of the [gnip object](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/gnip.html). Location objects have a place object type and can have a name, address, or geo coordinates. Location objects are similar to [Geo](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo.html) in native enriched format.\n",
        "line_start": 1565,
        "line_end": 1567
    },
    "85": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tLocation Object\n\tLocation data dictionary\n\nContent: \n### Location data dictionary  \n| Field | Type | Description |\n| --- | --- | --- |\n| objectType | string | See [here](http://activitystrea.ms/head/activity-schema.html#place) for more detailed information. Example:<br><br>**\"objectType\":** \"place\" |\n| displayName | string | **The full name of the location.  <br>  <br>****\"displayName\":** \"United States\" |\n| name | string | Name of the location from Twitter's place JSON format. |\n| link | string | A link to the full Twitter JSON representation of the place.  <br>  <br>**\"link\":** \"https://api.twitter.com/1.1/geo/id/27c45d804c777999.json\" |\n| geo | object | The geo coordintates object from Twitter.\u00a0 Either a polygon, or point.<br><br>See [geo](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/geo.html#coordinates) |\n| countryCode | String | Shortened country code representing the country containing this place. Example:<br><br>**\"countryCode\":\u00a0\"US** |\n| country | String | Name of the country containing this place. Example:<br><br>**\"country\":**\u00a0\"United States\" |\n",
        "line_start": 1569,
        "line_end": 1579
    },
    "86": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tprofileLocations derived obejcts\n\nContent: \n## profileLocations derived obejcts  \n|     |     |     |\n| --- | --- | --- |\n| Field | Type | Description |\n| address | object | Within profileLocation location object within the [gnip object](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/gnip.html).\u00a0 Address of location derived by the [profile geo enrichement](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/profile-geo.html).\u00a0 Level of granularity will vary.\u00a0<br><br>**\"address\": {**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"country\":**\u00a0\"United States\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"countryCode\":**\u00a0\"US\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"locality\":**\u00a0\"Providence\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"region\":**\u00a0\"Rhode Island\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"subRegion\":**\u00a0\"Providence County\"<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **}** |\n| geo | object | Within profileLocation location object within the [gnip objec](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/activity-streams-objects/gnip.html)t.\u00a0Centroid coordinates of the location\u00a0derived by the [profile geo enrichement](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/profile-geo.html).<br><br>**\"geo\": {**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"coordinates\": \\[**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\\-98.5**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a039.76<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\\],**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"type\":**\u00a0\"point\"<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **}** |\n",
        "line_start": 1582,
        "line_end": 1588
    },
    "87": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tExamples\n\nContent: \n## Examples  \n`\"location\": {     \"objectType\": \"place\",     \"displayName\": \"Kansas, USA\",     \"name\": \"Kansas\",     \"country_code\": \"United States\",     \"twitter_country_code\": \"US\",     \"twitter_place_type\": \"admin\",     \"link\": \"https://api.twitter.com/1.1/geo/id/27c45d804c777999.json\",     \"geo\": {       \"type\": \"Polygon\",       \"coordinates\": [         [           [             -102.051769,             36.99311           ],           [             -102.051769,             40.003282           ],           [             -94.588081,             40.003282           ],           [             -94.588081,             36.99311           ]         ]       ]     }`  \n`    \"location\": {       \"objectType\": \"place\",       \"displayName\": \"California, USA\"     }`\n",
        "line_start": 1590,
        "line_end": 1593
    },
    "88": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tNext steps\n\nContent: \n## Next steps  \nExplore other Tweet JSON objects and data dictionaries:  \n* [Tweet object and data dictionary](https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/tweet-object)\n* [User object and data dictionary](https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/user-object)\n* [Entities object and data dictionary](https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/entities-object)\n* [Extended Entitites object and data dictionary](https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/extended-entities-object)  \nRead more about Tweets and their location metadata:  \n* [Introduction to Tweet geospatial metadata](https://developer.twitter.com/en/docs/tutorials/tweet-geo-metadata)\n* [Filtering Twitter data by location](https://developer.twitter.com/en/docs/tutorials/filtering-tweets-by-location)  \nEntities object\n",
        "line_start": 1598,
        "line_end": 1608
    },
    "89": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTwitter entities object\n\nContent: \n## Twitter entities object  \nFor Activity streams format, the twitter\\_entities is the same format and data dictionary shown on the native enriched format [entities object here](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities.html#entitiesobject).\n",
        "line_start": 1614,
        "line_end": 1616
    },
    "90": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTwitter entities object\n\tExample:\n\nContent: \n### Example:  \n`\"twitter_entities\": { \t\"hashtags\": [{ \t\t\"text\": \"TwitterAPI\", \t\t\"indices\": [ \t\t\t228, \t\t\t239 \t\t] \t}], \t\"urls\": [{ \t\t\"url\": \"https://t.co/r6z6CI7kEy\", \t\t\"expanded_url\": \"https://twittercommunity.com/t/retiring-labs-v2-recent-search-and-hide-replies/145795\", \t\t\"display_url\": \"twittercommunity.com/t/retiring-lab\u2026\", \t\t\"indices\": [ \t\t\t250, \t\t\t273 \t\t] \t}], \t\"user_mentions\": [], \t\"symbols\": [] }`\n",
        "line_start": 1618,
        "line_end": 1620
    },
    "91": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tNext steps\n\nContent: \n## Next steps  \nExplore other Tweet JSON objects and data dictionaries:  \n* [Extended Entities object and data dictionary](https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/extended-entities-object)\n* [Tweet object and data dictionary](https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/tweet-object)\n* [User object and data dictionary](https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/user-object)\n* [Tweet geo objects and data dictionaries](https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/geo-objects)  \nExtended entities object\n",
        "line_start": 1598,
        "line_end": 1605
    },
    "92": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTwitter extended entities object\n\nContent: \n## Twitter extended entities object  \nFor Activity streams format, the twitter\\_extended\\_entities is the same format and data dictionary shown on the native enriched format [extended\\_entities object here](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/extended-entities.html).\n",
        "line_start": 1634,
        "line_end": 1636
    },
    "93": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTwitter extended entities object\n\tExample:\n\nContent: \n### Example:  \n`\"twitter_extended_entities\":{ \t\"media\": [{ \t\t\"id\": 1293565706408038400, \t\t\"id_str\": \"1293565706408038401\", \t\t\"indices\": [ \t\t\t219, \t\t\t242 \t\t], \t\t\"additional_media_info\": { \t\t\t\"monetizable\": false \t\t}, \t\t\"media_url\": \"http://pbs.twimg.com/ext_tw_video_thumb/1293565706408038401/pu/img/66P2dvbU4a02jYbV.jpg\", \t\t\"media_url_https\": \"https://pbs.twimg.com/ext_tw_video_thumb/1293565706408038401/pu/img/66P2dvbU4a02jYbV.jpg\", \t\t\"url\": \"https://t.co/KaFSbjWUA8\", \t\t\"display_url\": \"pic.twitter.com/KaFSbjWUA8\", \t\t\"expanded_url\": \"https://twitter.com/TwitterDev/status/1293593516040269825/video/1\", \t\t\"type\": \"video\", \t\t\"video_info\": { \t\t\t\"aspect_ratio\": [ \t\t\t\t16, \t\t\t\t9 \t\t\t], \t\t\t\"duration_millis\": 34875, \t\t\t\"variants\": [{ \t\t\t\t\t\"bitrate\": 256000, \t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/480x270/Fg9lnGGsITO0uq2K.mp4?tag=10\" \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"bitrate\": 832000, \t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/640x360/-crbtZE4y8vKN_uF.mp4?tag=10\" \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"content_type\": \"application/x-mpegURL\", \t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/pl/OvIqQojosF6sMIHR.m3u8?tag=10\" \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"bitrate\": 2176000, \t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/1280x720/xkxyb-VPVY4OI0j9.mp4?tag=10\" \t\t\t\t} \t\t\t] \t\t}, \t\t\"sizes\": { \t\t\t\"thumb\": { \t\t\t\t\"w\": 150, \t\t\t\t\"h\": 150, \t\t\t\t\"resize\": \"crop\" \t\t\t}, \t\t\t\"medium\": { \t\t\t\t\"w\": 1200, \t\t\t\t\"h\": 675, \t\t\t\t\"resize\": \"fit\" \t\t\t}, \t\t\t\"small\": { \t\t\t\t\"w\": 680, \t\t\t\t\"h\": 383, \t\t\t\t\"resize\": \"fit\" \t\t\t}, \t\t\t\"large\": { \t\t\t\t\"w\": 1280, \t\t\t\t\"h\": 720, \t\t\t\t\"resize\": \"fit\" \t\t\t} \t\t} \t}] }`  \nGnip object\n",
        "line_start": 1618,
        "line_end": 1621
    },
    "94": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tGnip object\n\nContent: \n## Gnip object  \nThe gnip object, within Activity streams format, contains the metadata added by the active enrichments, as well as indication of the matching rules for the activity.\n",
        "line_start": 1644,
        "line_end": 1646
    },
    "95": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tGnip object\n\tData dictionary\n\nContent: \n### Data dictionary  \n|     |     |     |\n| --- | --- | --- |\n| **Field** | **Type** | **Description** |\n| matching\\_rules | array | Contains an array of matching rule objects which indicate the rule which the activity matches on.  <br>\u00a0 \u00a0\u00a0**\"matching\\_rules\": \\[**<br><br>\u00a0 \u00a0 \u00a0 **{**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **\"tag\": null,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **\"id\":** 1026514022567358500**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **\"id\\_str\":** \"1026514022567358464\"<br><br>\u00a0 \u00a0 \u00a0 **}**<br><br>\u00a0 \u00a0 **\\]** |\n| urls | array | Contains an array of the links within the activity, and the expanded url metadata for the \\*\\*\\*URL unwinding enrichement  <br>  <br>\u00a0 \u00a0\u00a0**\"urls\": \\[**<br><br>\u00a0 \u00a0 \u00a0 **{**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **\"url\":** \"https://t.co/tGQqNxxyhU\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **\"expanded\\_url\":** \"https://www.youtube.com/channel/UCwUxW2CV2p5mzjMBqvqLzJA\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **\"expanded\\_status\":** 200**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **\"expanded\\_url\\_title\":** \"Birdys Daughter\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **\"expanded\\_url\\_description\":** \"Premium, single-origin, handpicked Jamaica Blue Mountain Coffee\"<br><br>\u00a0 \u00a0 \u00a0 **}**<br><br>\u00a0 \u00a0 **\\]** |\n| profileLocations | array of location objects | Contains the derived location object from the Profile Geo enrichment  <br>  <br>\u00a0 \u00a0\u00a0**\"profileLocations\": \\[**<br><br>\u00a0 \u00a0 \u00a0 **{**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **\"address\": {**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"country\":** \"Canada\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"countryCode\":** \"CA\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"locality\":** \"Toronto\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"region\":** \"Ontario\"<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **},**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **\"displayName\":** \"Toronto, Ontario, Canada\"**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **\"geo\": {**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"coordinates\": \\[**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \\-79.4163**,**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 43.70011<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\\],**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 **\"type\":** \"point\"<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **},**<br><br>\u00a0 \u00a0 \u00a0 \u00a0 **\"objectType\":** \"place\"<br><br>\u00a0 \u00a0 \u00a0 **}**<br><br>\u00a0 \u00a0 **\\]**<br><br>\u00a0 **}** |\n",
        "line_start": 1648,
        "line_end": 1655
    },
    "96": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tGnip object\n\tExample:\n\nContent: \n### Example:  \n`  \"gnip\": {     \"matching_rules\": [       {         \"tag\": null       }     ],     \"urls\": [       {         \"url\": \"https://t.co/Nx1XZmRCXA\",         \"expanded_url\": \"https://twittercommunity.com/t/new-update-to-the-twitter-text-library-emoji-character-count/114607\",         \"expanded_status\": 200,         \"expanded_url_title\": null,         \"expanded_url_description\": null       }     ]   }`  \nActivity Streams example payloads\n",
        "line_start": 1618,
        "line_end": 1621
    },
    "97": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tActivity streams payload examples\n\nContent: \n## Activity streams payload examples  \nTweet activity  \n`{ \t\"id\": \"tag:search.twitter.com,2005:1307025659294674945\", \t\"objectType\": \"activity\", \t\"verb\": \"post\", \t\"postedTime\": \"2020-09-18T18:36:15.000Z\", \t\"generator\": { \t\t\"displayName\": \"Twitter Web App\", \t\t\"link\": \"https://mobile.twitter.com\" \t}, \t\"provider\": { \t\t\"objectType\": \"service\", \t\t\"displayName\": \"Twitter\", \t\t\"link\": \"http://www.twitter.com\" \t}, \t\"link\": \"http://twitter.com/TwitterDev/statuses/1307025659294674945\", \t\"body\": \"Here\u2019s an article that highlights the updates in the new Tweet payload v2 https://t.co/oeF3ZHeKQQ\", \t\"actor\": { \t\t\"objectType\": \"person\", \t\t\"id\": \"id:twitter.com:2244994945\", \t\t\"link\": \"http://www.twitter.com/TwitterDev\", \t\t\"displayName\": \"Twitter Dev\", \t\t\"postedTime\": \"2013-12-14T04:35:55.036Z\", \t\t\"image\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"summary\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\"friendsCount\": 2038, \t\t\"followersCount\": 512292, \t\t\"listedCount\": 1666, \t\t\"statusesCount\": 3634, \t\t\"twitterTimeZone\": null, \t\t\"verified\": true, \t\t\"utcOffset\": null, \t\t\"preferredUsername\": \"TwitterDev\", \t\t\"languages\": [], \t\t\"links\": [{ \t\t\t\"href\": \"https://developer.twitter.com/en/community\", \t\t\t\"rel\": \"me\" \t\t}], \t\t\"location\": { \t\t\t\"objectType\": \"place\", \t\t\t\"displayName\": \"127.0.0.1\" \t\t}, \t\t\"favoritesCount\": 2147 \t}, \t\"object\": { \t\t\"objectType\": \"note\", \t\t\"id\": \"object:search.twitter.com,2005:1307025659294674945\", \t\t\"summary\": \"Here\u2019s an article that highlights the updates in the new Tweet payload v2 https://t.co/oeF3ZHeKQQ\", \t\t\"link\": \"http://twitter.com/TwitterDev/statuses/1307025659294674945\", \t\t\"postedTime\": \"2020-09-18T18:36:15.000Z\" \t}, \t\"inReplyTo\": { \t\t\"link\": \"http://twitter.com/TwitterDev/statuses/1304102743196356610\" \t}, \t\"favoritesCount\": 70, \t\"twitter_entities\": { \t\t\"hashtags\": [], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/oeF3ZHeKQQ\", \t\t\t\"expanded_url\": \"https://dev.to/twitterdev/understanding-the-new-tweet-payload-in-the-twitter-api-v2-1fg5\", \t\t\t\"display_url\": \"dev.to/twitterdev/und\u2026\", \t\t\t\"indices\": [ \t\t\t\t74, \t\t\t\t97 \t\t\t] \t\t}], \t\t\"user_mentions\": [], \t\t\"symbols\": [] \t}, \t\"twitter_lang\": \"en\", \t\"retweetCount\": 11, \t\"gnip\": { \t\t\"matching_rules\": [{ \t\t\t\"tag\": null \t\t}], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/oeF3ZHeKQQ\", \t\t\t\"expanded_url\": \"https://dev.to/twitterdev/understanding-the-new-tweet-payload-in-the-twitter-api-v2-1fg5\", \t\t\t\"expanded_status\": 200, \t\t\t\"expanded_url_title\": \"Understanding the new Tweet payload in the Twitter API v2\", \t\t\t\"expanded_url_description\": \"Twitter recently announced the new Twitter API v2, rebuilt from the ground up to deliver new features...\" \t\t}] \t}, \t\"twitter_filter_level\": \"low\" }`  \nReply Tweet activity  \n`{ \t\"id\": \"tag:search.twitter.com,2005:1296887316556980230\", \t\"objectType\": \"activity\", \t\"verb\": \"post\", \t\"postedTime\": \"2020-08-21T19:10:05.000Z\", \t\"generator\": { \t\t\"displayName\": \"Twitter Web App\", \t\t\"link\": \"https://mobile.twitter.com\" \t}, \t\"provider\": { \t\t\"objectType\": \"service\", \t\t\"displayName\": \"Twitter\", \t\t\"link\": \"http://www.twitter.com\" \t}, \t\"link\": \"http://twitter.com/TwitterDev/statuses/1296887316556980230\", \t\"body\": \"See how @PennMedCDH are using Twitter data to understand the COVID-19 health crisis \ud83d\udcca\\n\\nhttps://t.co/1tdA8uDWes\", \t\"actor\": { \t\t\"objectType\": \"person\", \t\t\"id\": \"id:twitter.com:2244994945\", \t\t\"link\": \"http://www.twitter.com/TwitterDev\", \t\t\"displayName\": \"Twitter Dev\", \t\t\"postedTime\": \"2013-12-14T04:35:55.036Z\", \t\t\"image\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"summary\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\"friendsCount\": 2038, \t\t\"followersCount\": 512292, \t\t\"listedCount\": 1666, \t\t\"statusesCount\": 3634, \t\t\"twitterTimeZone\": null, \t\t\"verified\": true, \t\t\"utcOffset\": null, \t\t\"preferredUsername\": \"TwitterDev\", \t\t\"languages\": [], \t\t\"links\": [{ \t\t\t\"href\": \"https://developer.twitter.com/en/community\", \t\t\t\"rel\": \"me\" \t\t}], \t\t\"location\": { \t\t\t\"objectType\": \"place\", \t\t\t\"displayName\": \"127.0.0.1\" \t\t}, \t\t\"favoritesCount\": 2147 \t}, \t\"object\": { \t\t\"objectType\": \"note\", \t\t\"id\": \"object:search.twitter.com,2005:1296887316556980230\", \t\t\"summary\": \"See how @PennMedCDH are using Twitter data to understand the COVID-19 health crisis \ud83d\udcca\\n\\nhttps://t.co/1tdA8uDWes\", \t\t\"link\": \"http://twitter.com/TwitterDev/statuses/1296887316556980230\", \t\t\"postedTime\": \"2020-08-21T19:10:05.000Z\" \t}, \t\"inReplyTo\": { \t\t\"link\": \"http://twitter.com/TwitterDev/statuses/1296887091901718529\" \t}, \t\"favoritesCount\": 26, \t\"twitter_entities\": { \t\t\"hashtags\": [], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/1tdA8uDWes\", \t\t\t\"expanded_url\": \"https://developer.twitter.com/en/use-cases/success-stories/penn\", \t\t\t\"display_url\": \"developer.twitter.com/en/use-cases/s\u2026\", \t\t\t\"indices\": [ \t\t\t\t87, \t\t\t\t110 \t\t\t] \t\t}], \t\t\"user_mentions\": [{ \t\t\t\"screen_name\": \"PennMedCDH\", \t\t\t\"name\": \"Penn Med CDH\", \t\t\t\"id\": 1615654896, \t\t\t\"id_str\": \"1615654896\", \t\t\t\"indices\": [ \t\t\t\t8, \t\t\t\t19 \t\t\t] \t\t}], \t\t\"symbols\": [] \t}, \t\"twitter_lang\": \"en\", \t\"retweetCount\": 9, \t\"gnip\": { \t\t\"matching_rules\": [{ \t\t\t\"tag\": null \t\t}], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/1tdA8uDWes\", \t\t\t\"expanded_url\": \"https://developer.twitter.com/en/use-cases/success-stories/penn\", \t\t\t\"expanded_status\": 200, \t\t\t\"expanded_url_title\": \"Penn Medicine Center for Digital Health\", \t\t\t\"expanded_url_description\": \"Penn Med Center for Digital Health has created a COVID-19 Twitter map that includes charts detailing sentiment, symptoms reported, state-by-state data cuts, and border data on the COVID-19 outbreak. In addition, their Penn Med With You initiative uses aggregate regional information from Twitter to inform their website and text-messaging service. The service uses this information to disseminate relevant and timely resources.\" \t\t}] \t}, \t\"twitter_filter_level\": \"low\" }`  \nTweet activity with long\\_object  \n`{ \t\"id\": \"tag:search.twitter.com,2005:1296121314218897408\", \t\"objectType\": \"activity\", \t\"verb\": \"post\", \t\"postedTime\": \"2020-08-19T16:26:16.000Z\", \t\"generator\": { \t\t\"displayName\": \"Twitter Web App\", \t\t\"link\": \"https://mobile.twitter.com\" \t}, \t\"provider\": { \t\t\"objectType\": \"service\", \t\t\"displayName\": \"Twitter\", \t\t\"link\": \"http://www.twitter.com\" \t}, \t\"link\": \"http://twitter.com/TwitterDev/statuses/1296121314218897408\", \t\"body\": \"The hide replies endpoint is launching today! \\n\\nDevelopers can hide replies to Tweets - a crucial way developers ca\u2026 https://t.co/VyfXs1RTXn\", \t\"long_object\": { \t\t\"body\": \"The hide replies endpoint is launching today! \\n\\nDevelopers can hide replies to Tweets - a crucial way developers can help improve the health of the public conversation using the #TwitterAPI.\\n\\nhttps://t.co/khXhTurm9x\", \t\t\"display_text_range\": [ \t\t\t0, \t\t\t215 \t\t], \t\t\"twitter_entities\": { \t\t\t\"hashtags\": [{ \t\t\t\t\"text\": \"TwitterAPI\", \t\t\t\t\"indices\": [ \t\t\t\t\t178, \t\t\t\t\t189 \t\t\t\t] \t\t\t}], \t\t\t\"urls\": [{ \t\t\t\t\"url\": \"https://t.co/khXhTurm9x\", \t\t\t\t\"expanded_url\": \"https://twittercommunity.com/t/hide-replies-now-available-in-the-new-twitter-api/140996\", \t\t\t\t\"display_url\": \"twittercommunity.com/t/hide-replies\u2026\", \t\t\t\t\"indices\": [ \t\t\t\t\t192, \t\t\t\t\t215 \t\t\t\t] \t\t\t}], \t\t\t\"user_mentions\": [], \t\t\t\"symbols\": [] \t\t} \t}, \t\"actor\": { \t\t\"objectType\": \"person\", \t\t\"id\": \"id:twitter.com:2244994945\", \t\t\"link\": \"http://www.twitter.com/TwitterDev\", \t\t\"displayName\": \"Twitter Dev\", \t\t\"postedTime\": \"2013-12-14T04:35:55.036Z\", \t\t\"image\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"summary\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\"friendsCount\": 2038, \t\t\"followersCount\": 512292, \t\t\"listedCount\": 1666, \t\t\"statusesCount\": 3634, \t\t\"twitterTimeZone\": null, \t\t\"verified\": true, \t\t\"utcOffset\": null, \t\t\"preferredUsername\": \"TwitterDev\", \t\t\"languages\": [], \t\t\"links\": [{ \t\t\t\"href\": \"https://developer.twitter.com/en/community\", \t\t\t\"rel\": \"me\" \t\t}], \t\t\"location\": { \t\t\t\"objectType\": \"place\", \t\t\t\"displayName\": \"127.0.0.1\" \t\t}, \t\t\"favoritesCount\": 2147 \t}, \t\"object\": { \t\t\"objectType\": \"note\", \t\t\"id\": \"object:search.twitter.com,2005:1296121314218897408\", \t\t\"summary\": \"The hide replies endpoint is launching today! \\n\\nDevelopers can hide replies to Tweets - a crucial way developers ca\u2026 https://t.co/VyfXs1RTXn\", \t\t\"link\": \"http://twitter.com/TwitterDev/statuses/1296121314218897408\", \t\t\"postedTime\": \"2020-08-19T16:26:16.000Z\" \t}, \t\"favoritesCount\": 172, \t\"twitter_entities\": { \t\t\"hashtags\": [], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/VyfXs1RTXn\", \t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1296121314218897408\", \t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\", \t\t\t\"indices\": [ \t\t\t\t117, \t\t\t\t140 \t\t\t] \t\t}], \t\t\"user_mentions\": [], \t\t\"symbols\": [] \t}, \t\"twitter_lang\": \"en\", \t\"retweetCount\": 54, \t\"gnip\": { \t\t\"matching_rules\": [{ \t\t\t\"tag\": null \t\t}], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/khXhTurm9x\", \t\t\t\"expanded_url\": \"https://twittercommunity.com/t/hide-replies-now-available-in-the-new-twitter-api/140996\", \t\t\t\"expanded_status\": 200, \t\t\t\"expanded_url_title\": \"Hide replies now available in the new Twitter API\", \t\t\t\"expanded_url_description\": \"Today, we\u2019re happy to announce the general availability of the hide replies endpoint in the new Twitter API. The hide replies endpoint allows you to build tools that help people hide or unhide replies to their Tweets. People manage their replies for many reasons, including to give less attention to comments that are abusive, distracting, misleading, or to make conversations more engaging. Through this endpoint, you can build tools to help people on Twitter hide or unhide replies faster and more...\" \t\t}] \t}, \t\"twitter_filter_level\": \"low\" }`  \nTweet activity with twitter\\_extended\\_entities  \n`{ \t\"id\": \"tag:search.twitter.com,2005:1293593516040269825\", \t\"objectType\": \"activity\", \t\"verb\": \"post\", \t\"postedTime\": \"2020-08-12T17:01:42.000Z\", \t\"generator\": { \t\t\"displayName\": \"Twitter Web App\", \t\t\"link\": \"https://mobile.twitter.com\" \t}, \t\"provider\": { \t\t\"objectType\": \"service\", \t\t\"displayName\": \"Twitter\", \t\t\"link\": \"http://www.twitter.com\" \t}, \t\"link\": \"http://twitter.com/TwitterDev/statuses/1293593516040269825\", \t\"body\": \"It\u2019s finally here! \ud83e\udd41 Say hello to the new #TwitterAPI.\\n\\nWe\u2019re rebuilding the Twitter API v2 from the ground up to b\u2026 https://t.co/UeCndQGMjx\", \t\"long_object\": { \t\t\"body\": \"It\u2019s finally here! \ud83e\udd41 Say hello to the new #TwitterAPI.\\n\\nWe\u2019re rebuilding the Twitter API v2 from the ground up to better serve our developer community. And today\u2019s launch is only the beginning.\\n\\nhttps://t.co/32VrwpGaJw https://t.co/KaFSbjWUA8\", \t\t\"display_text_range\": [ \t\t\t0, \t\t\t218 \t\t], \t\t\"twitter_entities\": { \t\t\t\"hashtags\": [{ \t\t\t\t\"text\": \"TwitterAPI\", \t\t\t\t\"indices\": [ \t\t\t\t\t42, \t\t\t\t\t53 \t\t\t\t] \t\t\t}], \t\t\t\"urls\": [{ \t\t\t\t\"url\": \"https://t.co/32VrwpGaJw\", \t\t\t\t\"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/introducing_new_twitter_api.html\", \t\t\t\t\"display_url\": \"blog.twitter.com/developer/en_u\u2026\", \t\t\t\t\"indices\": [ \t\t\t\t\t195, \t\t\t\t\t218 \t\t\t\t] \t\t\t}], \t\t\t\"user_mentions\": [], \t\t\t\"symbols\": [], \t\t\t\"media\": [{ \t\t\t\t\"id\": 1293565706408038400, \t\t\t\t\"id_str\": \"1293565706408038401\", \t\t\t\t\"indices\": [ \t\t\t\t\t219, \t\t\t\t\t242 \t\t\t\t], \t\t\t\t\"additional_media_info\": { \t\t\t\t\t\"monetizable\": false \t\t\t\t}, \t\t\t\t\"media_url\": \"http://pbs.twimg.com/ext_tw_video_thumb/1293565706408038401/pu/img/66P2dvbU4a02jYbV.jpg\", \t\t\t\t\"media_url_https\": \"https://pbs.twimg.com/ext_tw_video_thumb/1293565706408038401/pu/img/66P2dvbU4a02jYbV.jpg\", \t\t\t\t\"url\": \"https://t.co/KaFSbjWUA8\", \t\t\t\t\"display_url\": \"pic.twitter.com/KaFSbjWUA8\", \t\t\t\t\"expanded_url\": \"https://twitter.com/TwitterDev/status/1293593516040269825/video/1\", \t\t\t\t\"type\": \"video\", \t\t\t\t\"video_info\": { \t\t\t\t\t\"aspect_ratio\": [ \t\t\t\t\t\t16, \t\t\t\t\t\t9 \t\t\t\t\t], \t\t\t\t\t\"duration_millis\": 34875, \t\t\t\t\t\"variants\": [{ \t\t\t\t\t\t\t\"bitrate\": 256000, \t\t\t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/480x270/Fg9lnGGsITO0uq2K.mp4?tag=10\" \t\t\t\t\t\t}, \t\t\t\t\t\t{ \t\t\t\t\t\t\t\"bitrate\": 832000, \t\t\t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/640x360/-crbtZE4y8vKN_uF.mp4?tag=10\" \t\t\t\t\t\t}, \t\t\t\t\t\t{ \t\t\t\t\t\t\t\"content_type\": \"application/x-mpegURL\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/pl/OvIqQojosF6sMIHR.m3u8?tag=10\" \t\t\t\t\t\t}, \t\t\t\t\t\t{ \t\t\t\t\t\t\t\"bitrate\": 2176000, \t\t\t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/1280x720/xkxyb-VPVY4OI0j9.mp4?tag=10\" \t\t\t\t\t\t} \t\t\t\t\t] \t\t\t\t}, \t\t\t\t\"sizes\": { \t\t\t\t\t\"thumb\": { \t\t\t\t\t\t\"w\": 150, \t\t\t\t\t\t\"h\": 150, \t\t\t\t\t\t\"resize\": \"crop\" \t\t\t\t\t}, \t\t\t\t\t\"medium\": { \t\t\t\t\t\t\"w\": 1200, \t\t\t\t\t\t\"h\": 675, \t\t\t\t\t\t\"resize\": \"fit\" \t\t\t\t\t}, \t\t\t\t\t\"small\": { \t\t\t\t\t\t\"w\": 680, \t\t\t\t\t\t\"h\": 383, \t\t\t\t\t\t\"resize\": \"fit\" \t\t\t\t\t}, \t\t\t\t\t\"large\": { \t\t\t\t\t\t\"w\": 1280, \t\t\t\t\t\t\"h\": 720, \t\t\t\t\t\t\"resize\": \"fit\" \t\t\t\t\t} \t\t\t\t} \t\t\t}] \t\t}, \t\t\"twitter_extended_entities\": { \t\t\t\"media\": [{ \t\t\t\t\"id\": 1293565706408038400, \t\t\t\t\"id_str\": \"1293565706408038401\", \t\t\t\t\"indices\": [ \t\t\t\t\t219, \t\t\t\t\t242 \t\t\t\t], \t\t\t\t\"additional_media_info\": { \t\t\t\t\t\"monetizable\": false \t\t\t\t}, \t\t\t\t\"media_url\": \"http://pbs.twimg.com/ext_tw_video_thumb/1293565706408038401/pu/img/66P2dvbU4a02jYbV.jpg\", \t\t\t\t\"media_url_https\": \"https://pbs.twimg.com/ext_tw_video_thumb/1293565706408038401/pu/img/66P2dvbU4a02jYbV.jpg\", \t\t\t\t\"url\": \"https://t.co/KaFSbjWUA8\", \t\t\t\t\"display_url\": \"pic.twitter.com/KaFSbjWUA8\", \t\t\t\t\"expanded_url\": \"https://twitter.com/TwitterDev/status/1293593516040269825/video/1\", \t\t\t\t\"type\": \"video\", \t\t\t\t\"video_info\": { \t\t\t\t\t\"aspect_ratio\": [ \t\t\t\t\t\t16, \t\t\t\t\t\t9 \t\t\t\t\t], \t\t\t\t\t\"duration_millis\": 34875, \t\t\t\t\t\"variants\": [{ \t\t\t\t\t\t\t\"bitrate\": 256000, \t\t\t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/480x270/Fg9lnGGsITO0uq2K.mp4?tag=10\" \t\t\t\t\t\t}, \t\t\t\t\t\t{ \t\t\t\t\t\t\t\"bitrate\": 832000, \t\t\t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/640x360/-crbtZE4y8vKN_uF.mp4?tag=10\" \t\t\t\t\t\t}, \t\t\t\t\t\t{ \t\t\t\t\t\t\t\"content_type\": \"application/x-mpegURL\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/pl/OvIqQojosF6sMIHR.m3u8?tag=10\" \t\t\t\t\t\t}, \t\t\t\t\t\t{ \t\t\t\t\t\t\t\"bitrate\": 2176000, \t\t\t\t\t\t\t\"content_type\": \"video/mp4\", \t\t\t\t\t\t\t\"url\": \"https://video.twimg.com/ext_tw_video/1293565706408038401/pu/vid/1280x720/xkxyb-VPVY4OI0j9.mp4?tag=10\" \t\t\t\t\t\t} \t\t\t\t\t] \t\t\t\t}, \t\t\t\t\"sizes\": { \t\t\t\t\t\"thumb\": { \t\t\t\t\t\t\"w\": 150, \t\t\t\t\t\t\"h\": 150, \t\t\t\t\t\t\"resize\": \"crop\" \t\t\t\t\t}, \t\t\t\t\t\"medium\": { \t\t\t\t\t\t\"w\": 1200, \t\t\t\t\t\t\"h\": 675, \t\t\t\t\t\t\"resize\": \"fit\" \t\t\t\t\t}, \t\t\t\t\t\"small\": { \t\t\t\t\t\t\"w\": 680, \t\t\t\t\t\t\"h\": 383, \t\t\t\t\t\t\"resize\": \"fit\" \t\t\t\t\t}, \t\t\t\t\t\"large\": { \t\t\t\t\t\t\"w\": 1280, \t\t\t\t\t\t\"h\": 720, \t\t\t\t\t\t\"resize\": \"fit\" \t\t\t\t\t} \t\t\t\t} \t\t\t}] \t\t} \t}, \t\"display_text_range\": [ \t\t0, \t\t140 \t], \t\"actor\": { \t\t\"objectType\": \"person\", \t\t\"id\": \"id:twitter.com:2244994945\", \t\t\"link\": \"http://www.twitter.com/TwitterDev\", \t\t\"displayName\": \"Twitter Dev\", \t\t\"postedTime\": \"2013-12-14T04:35:55.036Z\", \t\t\"image\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"summary\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\"friendsCount\": 2038, \t\t\"followersCount\": 512292, \t\t\"listedCount\": 1666, \t\t\"statusesCount\": 3634, \t\t\"twitterTimeZone\": null, \t\t\"verified\": true, \t\t\"utcOffset\": null, \t\t\"preferredUsername\": \"TwitterDev\", \t\t\"languages\": [], \t\t\"links\": [{ \t\t\t\"href\": \"https://developer.twitter.com/en/community\", \t\t\t\"rel\": \"me\" \t\t}], \t\t\"location\": { \t\t\t\"objectType\": \"place\", \t\t\t\"displayName\": \"127.0.0.1\" \t\t}, \t\t\"favoritesCount\": 2147 \t}, \t\"object\": { \t\t\"objectType\": \"note\", \t\t\"id\": \"object:search.twitter.com,2005:1293593516040269825\", \t\t\"summary\": \"It\u2019s finally here! \ud83e\udd41 Say hello to the new #TwitterAPI.\\n\\nWe\u2019re rebuilding the Twitter API v2 from the ground up to b\u2026 https://t.co/UeCndQGMjx\", \t\t\"link\": \"http://twitter.com/TwitterDev/statuses/1293593516040269825\", \t\t\"postedTime\": \"2020-08-12T17:01:42.000Z\" \t}, \t\"favoritesCount\": 2844, \t\"twitter_entities\": { \t\t\"hashtags\": [{ \t\t\t\"text\": \"TwitterAPI\", \t\t\t\"indices\": [ \t\t\t\t42, \t\t\t\t53 \t\t\t] \t\t}], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/UeCndQGMjx\", \t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1293593516040269825\", \t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\", \t\t\t\"indices\": [ \t\t\t\t117, \t\t\t\t140 \t\t\t] \t\t}], \t\t\"user_mentions\": [], \t\t\"symbols\": [] \t}, \t\"twitter_lang\": \"en\", \t\"retweetCount\": 958, \t\"gnip\": { \t\t\"matching_rules\": [{ \t\t\t\"tag\": null \t\t}], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/32VrwpGaJw\", \t\t\t\"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/introducing_new_twitter_api.html\", \t\t\t\"expanded_status\": 200, \t\t\t\"expanded_url_title\": \"Introducing a new and improved Twitter API\", \t\t\t\"expanded_url_description\": \"Introducing the new Twitter API - rebuilt from the ground up to deliver new features faster so developers can help the world connect to the public conversation happening on Twitter.\" \t\t}] \t}, \t\"twitter_filter_level\": \"low\" }`  \nRetweet activity  \n`{ \t\"id\": \"tag:search.twitter.com,2005:1229851574555508737\", \t\"objectType\": \"activity\", \t\"verb\": \"share\", \t\"postedTime\": \"2020-02-18T19:33:59.000Z\", \t\"generator\": { \t\t\"displayName\": \"Twitter Web App\", \t\t\"link\": \"https://mobile.twitter.com\" \t}, \t\"provider\": { \t\t\"objectType\": \"service\", \t\t\"displayName\": \"Twitter\", \t\t\"link\": \"http://www.twitter.com\" \t}, \t\"link\": \"http://twitter.com/TwitterDev/statuses/1229851574555508737\", \t\"body\": \"RT @suhemparack: I built an Alexa Skill for Twitter using APL that allows you to view Tweets and Trends on the echo show!\\n\\nCheck it out her\u2026\", \t\"actor\": { \t\t\"objectType\": \"person\", \t\t\"id\": \"id:twitter.com:2244994945\", \t\t\"link\": \"http://www.twitter.com/TwitterDev\", \t\t\"displayName\": \"Twitter Dev\", \t\t\"postedTime\": \"2013-12-14T04:35:55.036Z\", \t\t\"image\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"summary\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\"friendsCount\": 2038, \t\t\"followersCount\": 512292, \t\t\"listedCount\": 1666, \t\t\"statusesCount\": 3634, \t\t\"twitterTimeZone\": null, \t\t\"verified\": true, \t\t\"utcOffset\": null, \t\t\"preferredUsername\": \"TwitterDev\", \t\t\"languages\": [], \t\t\"links\": [{ \t\t\t\"href\": \"https://developer.twitter.com/en/community\", \t\t\t\"rel\": \"me\" \t\t}], \t\t\"location\": { \t\t\t\"objectType\": \"place\", \t\t\t\"displayName\": \"127.0.0.1\" \t\t}, \t\t\"favoritesCount\": 2147 \t}, \t\"object\": { \t\t\"id\": \"tag:search.twitter.com,2005:1229843515603144704\", \t\t\"objectType\": \"activity\", \t\t\"verb\": \"post\", \t\t\"postedTime\": \"2020-02-18T19:01:58.000Z\", \t\t\"generator\": { \t\t\t\"displayName\": \"Twitter Web App\", \t\t\t\"link\": \"https://mobile.twitter.com\" \t\t}, \t\t\"provider\": { \t\t\t\"objectType\": \"service\", \t\t\t\"displayName\": \"Twitter\", \t\t\t\"link\": \"http://www.twitter.com\" \t\t}, \t\t\"link\": \"http://twitter.com/suhemparack/statuses/1229843515603144704\", \t\t\"body\": \"I built an Alexa Skill for Twitter using APL that allows you to view Tweets and Trends on the echo show!\\n\\nCheck it\u2026 https://t.co/RP9NgltX7i\", \t\t\"long_object\": { \t\t\t\"body\": \"I built an Alexa Skill for Twitter using APL that allows you to view Tweets and Trends on the echo show!\\n\\nCheck it out here \ud83d\udc47\\n\\nhttps://t.co/l5J8wq748G\", \t\t\t\"display_text_range\": [ \t\t\t\t0, \t\t\t\t150 \t\t\t], \t\t\t\"twitter_entities\": { \t\t\t\t\"hashtags\": [], \t\t\t\t\"urls\": [{ \t\t\t\t\t\"url\": \"https://t.co/l5J8wq748G\", \t\t\t\t\t\"expanded_url\": \"https://dev.to/twitterdev/building-an-alexa-skill-for-twitter-using-alexa-presentation-language-1aj0\", \t\t\t\t\t\"display_url\": \"dev.to/twitterdev/bui\u2026\", \t\t\t\t\t\"indices\": [ \t\t\t\t\t\t127, \t\t\t\t\t\t150 \t\t\t\t\t] \t\t\t\t}], \t\t\t\t\"user_mentions\": [], \t\t\t\t\"symbols\": [] \t\t\t} \t\t}, \t\t\"actor\": { \t\t\t\"objectType\": \"person\", \t\t\t\"id\": \"id:twitter.com:857699969263964161\", \t\t\t\"link\": \"http://www.twitter.com/suhemparack\", \t\t\t\"displayName\": \"Suhem Parack\", \t\t\t\"postedTime\": \"2017-04-27T20:56:22.883Z\", \t\t\t\"image\": \"https://pbs.twimg.com/profile_images/1230703695051935747/TbQKe91L_normal.jpg\", \t\t\t\"summary\": \"Developer Relations for Academic Research @Twitter. Talk to me about research with Twitter data. Previously: Amazon Alexa. Views are my own\", \t\t\t\"friendsCount\": 501, \t\t\t\"followersCount\": 732, \t\t\t\"listedCount\": 12, \t\t\t\"statusesCount\": 458, \t\t\t\"twitterTimeZone\": null, \t\t\t\"verified\": false, \t\t\t\"utcOffset\": null, \t\t\t\"preferredUsername\": \"suhemparack\", \t\t\t\"languages\": [], \t\t\t\"links\": [{ \t\t\t\t\"href\": \"https://developer.twitter.com\", \t\t\t\t\"rel\": \"me\" \t\t\t}], \t\t\t\"location\": { \t\t\t\t\"objectType\": \"place\", \t\t\t\t\"displayName\": \"Seattle, WA\" \t\t\t}, \t\t\t\"favoritesCount\": 358 \t\t}, \t\t\"object\": { \t\t\t\"objectType\": \"note\", \t\t\t\"id\": \"object:search.twitter.com,2005:1229843515603144704\", \t\t\t\"summary\": \"I built an Alexa Skill for Twitter using APL that allows you to view Tweets and Trends on the echo show!\\n\\nCheck it\u2026 https://t.co/RP9NgltX7i\", \t\t\t\"link\": \"http://twitter.com/suhemparack/statuses/1229843515603144704\", \t\t\t\"postedTime\": \"2020-02-18T19:01:58.000Z\" \t\t}, \t\t\"favoritesCount\": 71, \t\t\"twitter_entities\": { \t\t\t\"hashtags\": [], \t\t\t\"urls\": [{ \t\t\t\t\"url\": \"https://t.co/RP9NgltX7i\", \t\t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1229843515603144704\", \t\t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\", \t\t\t\t\"indices\": [ \t\t\t\t\t116, \t\t\t\t\t139 \t\t\t\t] \t\t\t}], \t\t\t\"user_mentions\": [], \t\t\t\"symbols\": [] \t\t}, \t\t\"twitter_lang\": \"en\", \t\t\"twitter_filter_level\": \"low\" \t}, \t\"favoritesCount\": 0, \t\"twitter_entities\": { \t\t\"hashtags\": [], \t\t\"urls\": [], \t\t\"user_mentions\": [{ \t\t\t\"screen_name\": \"suhemparack\", \t\t\t\"name\": \"Suhem Parack\", \t\t\t\"id\": 857699969263964200, \t\t\t\"id_str\": \"857699969263964161\", \t\t\t\"indices\": [ \t\t\t\t3, \t\t\t\t15 \t\t\t] \t\t}], \t\t\"symbols\": [] \t}, \t\"twitter_lang\": \"en\", \t\"retweetCount\": 19, \t\"gnip\": { \t\t\"matching_rules\": [{ \t\t\t\"tag\": null \t\t}], \t\t\"urls\": [{ \t\t\t\"url\": \"https://t.co/l5J8wq748G\", \t\t\t\"expanded_url\": \"https://dev.to/twitterdev/building-an-alexa-skill-for-twitter-using-alexa-presentation-language-1aj0\", \t\t\t\"expanded_status\": 200, \t\t\t\"expanded_url_title\": null, \t\t\t\"expanded_url_description\": null \t\t}] \t}, \t\"twitter_filter_level\": \"low\" }`  \nQuote Tweet activity  \n` {  \t\"id\": \"tag:search.twitter.com,2005:1328399838128467969\",  \t\"objectType\": \"activity\",  \t\"verb\": \"post\",  \t\"postedTime\": \"2020-11-16T18:09:36.000Z\",  \t\"generator\": {  \t\t\"displayName\": \"Twitter Web App\",  \t\t\"link\": \"https://mobile.twitter.com\"  \t},  \t\"provider\": {  \t\t\"objectType\": \"service\",  \t\t\"displayName\": \"Twitter\",  \t\t\"link\": \"http://www.twitter.com\"  \t},  \t\"link\": \"http://twitter.com/TwitterDev/statuses/1328399838128467969\",  \t\"body\": \"As planned, the Labs v2 endpoints referenced below have now been retired. Please let us know in the forums if you h\u2026 https://t.co/ahQvTYaOcZ\",  \t\"long_object\": {  \t\t\"body\": \"As planned, the Labs v2 endpoints referenced below have now been retired. Please let us know in the forums if you have questions or need help with the Twitter API v2! https://t.co/JaxttUMmjX\",  \t\t\"display_text_range\": [  \t\t\t0,  \t\t\t166  \t\t],  \t\t\"twitter_entities\": {  \t\t\t\"hashtags\": [],  \t\t\t\"urls\": [{  \t\t\t\t\"url\": \"https://t.co/JaxttUMmjX\",  \t\t\t\t\"expanded_url\": \"https://twitter.com/TwitterDev/status/1327011423252144128\",  \t\t\t\t\"display_url\": \"twitter.com/TwitterDev/sta\u2026\",  \t\t\t\t\"indices\": [  \t\t\t\t\t167,  \t\t\t\t\t190  \t\t\t\t]  \t\t\t}],  \t\t\t\"user_mentions\": [],  \t\t\t\"symbols\": []  \t\t}  \t},  \t\"display_text_range\": [  \t\t0,  \t\t140  \t],  \t\"actor\": {  \t\t\"objectType\": \"person\",  \t\t\"id\": \"id:twitter.com:2244994945\",  \t\t\"link\": \"http://www.twitter.com/TwitterDev\",  \t\t\"displayName\": \"Twitter Dev\",  \t\t\"postedTime\": \"2013-12-14T04:35:55.036Z\",  \t\t\"image\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\",  \t\t\"summary\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\",  \t\t\"friendsCount\": 2038,  \t\t\"followersCount\": 512292,  \t\t\"listedCount\": 1666,  \t\t\"statusesCount\": 3634,  \t\t\"twitterTimeZone\": null,  \t\t\"verified\": true,  \t\t\"utcOffset\": null,  \t\t\"preferredUsername\": \"TwitterDev\",  \t\t\"languages\": [],  \t\t\"links\": [{  \t\t\t\"href\": \"https://developer.twitter.com/en/community\",  \t\t\t\"rel\": \"me\"  \t\t}],  \t\t\"location\": {  \t\t\t\"objectType\": \"place\",  \t\t\t\"displayName\": \"127.0.0.1\"  \t\t},  \t\t\"favoritesCount\": 2147  \t},  \t\"object\": {  \t\t\"objectType\": \"note\",  \t\t\"id\": \"object:search.twitter.com,2005:1328399838128467969\",  \t\t\"summary\": \"As planned, the Labs v2 endpoints referenced below have now been retired. Please let us know in the forums if you h\u2026 https://t.co/ahQvTYaOcZ\",  \t\t\"link\": \"http://twitter.com/TwitterDev/statuses/1328399838128467969\",  \t\t\"postedTime\": \"2020-11-16T18:09:36.000Z\"  \t},  \t\"favoritesCount\": 29,  \t\"twitter_entities\": {  \t\t\"hashtags\": [],  \t\t\"urls\": [{  \t\t\t\"url\": \"https://t.co/ahQvTYaOcZ\",  \t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1328399838128467969\",  \t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\",  \t\t\t\"indices\": [  \t\t\t\t117,  \t\t\t\t140  \t\t\t]  \t\t}],  \t\t\"user_mentions\": [],  \t\t\"symbols\": []  \t},  \t\"twitter_lang\": \"en\",  \t\"retweetCount\": 7,  \t\"gnip\": {  \t\t\"matching_rules\": [{  \t\t\t\"tag\": null  \t\t}],  \t\t\"urls\": [{  \t\t\t\"url\": \"https://t.co/r6z6CI7kEy\",  \t\t\t\"expanded_url\": \"https://twittercommunity.com/t/retiring-labs-v2-recent-search-and-hide-replies/145795\",  \t\t\t\"expanded_status\": 200,  \t\t\t\"expanded_url_title\": \"Retiring Labs v2 recent search and hide replies\",  \t\t\t\"expanded_url_description\": \"As we said in our Early Access and hide replies announcements, the following Twitter Developer Labs v2 endpoints will be retired on November 16th. Labs v2 recent search Labs v2 hide replies If called, these endpoints will respond with an HTTP 410 status and return no data. Based on your feedback from Labs, we incorporated corresponding functionality into the Twitter API v2. The relevant documentation can be found using the links below. Click here to enroll in v2 access if you haven\u2019t already...\"  \t\t}]  \t},  \t\"twitter_filter_level\": \"low\",  \t\"twitter_quoted_status\": {  \t\t\"id\": \"tag:search.twitter.com,2005:1327011423252144128\",  \t\t\"objectType\": \"activity\",  \t\t\"verb\": \"post\",  \t\t\"postedTime\": \"2020-11-12T22:12:32.000Z\",  \t\t\"generator\": {  \t\t\t\"displayName\": \"Twitter Web App\",  \t\t\t\"link\": \"https://mobile.twitter.com\"  \t\t},  \t\t\"provider\": {  \t\t\t\"objectType\": \"service\",  \t\t\t\"displayName\": \"Twitter\",  \t\t\t\"link\": \"http://www.twitter.com\"  \t\t},  \t\t\"link\": \"http://twitter.com/TwitterDev/statuses/1327011423252144128\",  \t\t\"body\": \"\ud83d\udc4b Friendly reminder that Twitter Developer Labs v2 hide replies and recent search will be retired next Monday, Nove\u2026 https://t.co/EEWN2Q9aXh\",  \t\t\"long_object\": {  \t\t\t\"body\": \"\ud83d\udc4b Friendly reminder that Twitter Developer Labs v2 hide replies and recent search will be retired next Monday, November 16! We encourage you to migrate to the new hide replies and recent search endpoints now available in the v2 #TwitterAPI. Details: https://t.co/r6z6CI7kEy\",  \t\t\t\"display_text_range\": [  \t\t\t\t0,  \t\t\t\t273  \t\t\t],  \t\t\t\"twitter_entities\": {  \t\t\t\t\"hashtags\": [{  \t\t\t\t\t\"text\": \"TwitterAPI\",  \t\t\t\t\t\"indices\": [  \t\t\t\t\t\t228,  \t\t\t\t\t\t239  \t\t\t\t\t]  \t\t\t\t}],  \t\t\t\t\"urls\": [{  \t\t\t\t\t\"url\": \"https://t.co/r6z6CI7kEy\",  \t\t\t\t\t\"expanded_url\": \"https://twittercommunity.com/t/retiring-labs-v2-recent-search-and-hide-replies/145795\",  \t\t\t\t\t\"display_url\": \"twittercommunity.com/t/retiring-lab\u2026\",  \t\t\t\t\t\"indices\": [  \t\t\t\t\t\t250,  \t\t\t\t\t\t273  \t\t\t\t\t]  \t\t\t\t}],  \t\t\t\t\"user_mentions\": [],  \t\t\t\t\"symbols\": []  \t\t\t}  \t\t},  \t\t\"actor\": {  \t\t\t\"objectType\": \"person\",  \t\t\t\"id\": \"id:twitter.com:2244994945\",  \t\t\t\"link\": \"http://www.twitter.com/TwitterDev\",  \t\t\t\"displayName\": \"Twitter Dev\",  \t\t\t\"postedTime\": \"2013-12-14T04:35:55.036Z\",  \t\t\t\"image\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\",  \t\t\t\"summary\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\",  \t\t\t\"friendsCount\": 2038,  \t\t\t\"followersCount\": 512292,  \t\t\t\"listedCount\": 1666,  \t\t\t\"statusesCount\": 3634,  \t\t\t\"twitterTimeZone\": null,  \t\t\t\"verified\": true,  \t\t\t\"utcOffset\": null,  \t\t\t\"preferredUsername\": \"TwitterDev\",  \t\t\t\"languages\": [],  \t\t\t\"links\": [{  \t\t\t\t\"href\": \"https://developer.twitter.com/en/community\",  \t\t\t\t\"rel\": \"me\"  \t\t\t}],  \t\t\t\"location\": {  \t\t\t\t\"objectType\": \"place\",  \t\t\t\t\"displayName\": \"127.0.0.1\"  \t\t\t},  \t\t\t\"favoritesCount\": 2147  \t\t},  \t\t\"object\": {  \t\t\t\"objectType\": \"note\",  \t\t\t\"id\": \"object:search.twitter.com,2005:1327011423252144128\",  \t\t\t\"summary\": \"\ud83d\udc4b Friendly reminder that Twitter Developer Labs v2 hide replies and recent search will be retired next Monday, Nove\u2026 https://t.co/EEWN2Q9aXh\",  \t\t\t\"link\": \"http://twitter.com/TwitterDev/statuses/1327011423252144128\",  \t\t\t\"postedTime\": \"2020-11-12T22:12:32.000Z\"  \t\t},  \t\t\"favoritesCount\": 33,  \t\t\"twitter_entities\": {  \t\t\t\"hashtags\": [],  \t\t\t\"urls\": [{  \t\t\t\t\"url\": \"https://t.co/EEWN2Q9aXh\",  \t\t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1327011423252144128\",  \t\t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\",  \t\t\t\t\"indices\": [  \t\t\t\t\t117,  \t\t\t\t\t140  \t\t\t\t]  \t\t\t}],  \t\t\t\"user_mentions\": [],  \t\t\t\"symbols\": []  \t\t},  \t\t\"twitter_lang\": \"en\",  \t\t\"twitter_filter_level\": \"low\"  \t}  }`  \nRetweetd Quote Tweet activity  \n`{ \t\"id\": \"tag:search.twitter.com,2005:1225470895902412800\", \t\"objectType\": \"activity\", \t\"verb\": \"share\", \t\"postedTime\": \"2020-02-06T17:26:44.000Z\", \t\"generator\": { \t\t\"displayName\": \"Twitter for iPhone\", \t\t\"link\": \"http://twitter.com/download/iphone\" \t}, \t\"provider\": { \t\t\"objectType\": \"service\", \t\t\"displayName\": \"Twitter\", \t\t\"link\": \"http://www.twitter.com\" \t}, \t\"link\": \"http://twitter.com/TwitterDev/statuses/1225470895902412800\", \t\"body\": \"RT @AureliaSpecker: \ud83d\udce3 If you enjoyed the London commute tutorial I wrote in November last year, check out the refactored version that uses\u2026\", \t\"actor\": { \t\t\"objectType\": \"person\", \t\t\"id\": \"id:twitter.com:2244994945\", \t\t\"link\": \"http://www.twitter.com/TwitterDev\", \t\t\"displayName\": \"Twitter Dev\", \t\t\"postedTime\": \"2013-12-14T04:35:55.036Z\", \t\t\"image\": \"https://pbs.twimg.com/profile_images/1283786620521652229/lEODkLTh_normal.jpg\", \t\t\"summary\": \"The voice of the #TwitterDev team and your official source for updates, news, and events, related to the #TwitterAPI.\", \t\t\"friendsCount\": 2038, \t\t\"followersCount\": 512292, \t\t\"listedCount\": 1666, \t\t\"statusesCount\": 3634, \t\t\"twitterTimeZone\": null, \t\t\"verified\": true, \t\t\"utcOffset\": null, \t\t\"preferredUsername\": \"TwitterDev\", \t\t\"languages\": [], \t\t\"links\": [{ \t\t\t\"href\": \"https://developer.twitter.com/en/community\", \t\t\t\"rel\": \"me\" \t\t}], \t\t\"location\": { \t\t\t\"objectType\": \"place\", \t\t\t\"displayName\": \"127.0.0.1\" \t\t}, \t\t\"favoritesCount\": 2147 \t}, \t\"object\": { \t\t\"id\": \"tag:search.twitter.com,2005:1224709550214873090\", \t\t\"objectType\": \"activity\", \t\t\"verb\": \"post\", \t\t\"postedTime\": \"2020-02-04T15:01:25.000Z\", \t\t\"generator\": { \t\t\t\"displayName\": \"Twitter Web App\", \t\t\t\"link\": \"https://mobile.twitter.com\" \t\t}, \t\t\"provider\": { \t\t\t\"objectType\": \"service\", \t\t\t\"displayName\": \"Twitter\", \t\t\t\"link\": \"http://www.twitter.com\" \t\t}, \t\t\"link\": \"http://twitter.com/AureliaSpecker/statuses/1224709550214873090\", \t\t\"body\": \"\ud83d\udce3 If you enjoyed the London commute tutorial I wrote in November last year, check out the refactored version that u\u2026 https://t.co/cAepHunkFp\", \t\t\"long_object\": { \t\t\t\"body\": \"\ud83d\udce3 If you enjoyed the London commute tutorial I wrote in November last year, check out the refactored version that uses Twitter's new search endpoint \ud83d\ude87 https://t.co/87XIPZmZBJ\\n\\n#DEVcommunity #Pythontutorial @TwitterDev @TwitterAPI https://t.co/dXrJYvn3hY\", \t\t\t\"display_text_range\": [ \t\t\t\t0, \t\t\t\t229 \t\t\t], \t\t\t\"twitter_entities\": { \t\t\t\t\"hashtags\": [{ \t\t\t\t\t\t\"text\": \"DEVcommunity\", \t\t\t\t\t\t\"indices\": [ \t\t\t\t\t\t\t176, \t\t\t\t\t\t\t189 \t\t\t\t\t\t] \t\t\t\t\t}, \t\t\t\t\t{ \t\t\t\t\t\t\"text\": \"Pythontutorial\", \t\t\t\t\t\t\"indices\": [ \t\t\t\t\t\t\t190, \t\t\t\t\t\t\t205 \t\t\t\t\t\t] \t\t\t\t\t} \t\t\t\t], \t\t\t\t\"urls\": [{ \t\t\t\t\t\t\"url\": \"https://t.co/87XIPZmZBJ\", \t\t\t\t\t\t\"expanded_url\": \"https://bit.ly/2OrnrCC\", \t\t\t\t\t\t\"display_url\": \"bit.ly/2OrnrCC\", \t\t\t\t\t\t\"indices\": [ \t\t\t\t\t\t\t151, \t\t\t\t\t\t\t174 \t\t\t\t\t\t] \t\t\t\t\t}, \t\t\t\t\t{ \t\t\t\t\t\t\"url\": \"https://t.co/dXrJYvn3hY\", \t\t\t\t\t\t\"expanded_url\": \"https://twitter.com/AureliaSpecker/status/1195000047089389573\", \t\t\t\t\t\t\"display_url\": \"twitter.com/AureliaSpecker\u2026\", \t\t\t\t\t\t\"indices\": [ \t\t\t\t\t\t\t230, \t\t\t\t\t\t\t253 \t\t\t\t\t\t] \t\t\t\t\t} \t\t\t\t], \t\t\t\t\"user_mentions\": [{ \t\t\t\t\t\t\"screen_name\": \"TwitterDev\", \t\t\t\t\t\t\"name\": \"Twitter Dev\", \t\t\t\t\t\t\"id\": 2244994945, \t\t\t\t\t\t\"id_str\": \"2244994945\", \t\t\t\t\t\t\"indices\": [ \t\t\t\t\t\t\t206, \t\t\t\t\t\t\t217 \t\t\t\t\t\t] \t\t\t\t\t}, \t\t\t\t\t{ \t\t\t\t\t\t\"screen_name\": \"TwitterAPI\", \t\t\t\t\t\t\"name\": \"Twitter API\", \t\t\t\t\t\t\"id\": 6253282, \t\t\t\t\t\t\"id_str\": \"6253282\", \t\t\t\t\t\t\"indices\": [ \t\t\t\t\t\t\t218, \t\t\t\t\t\t\t229 \t\t\t\t\t\t] \t\t\t\t\t} \t\t\t\t], \t\t\t\t\"symbols\": [] \t\t\t} \t\t}, \t\t\"display_text_range\": [ \t\t\t0, \t\t\t140 \t\t], \t\t\"actor\": { \t\t\t\"objectType\": \"person\", \t\t\t\"id\": \"id:twitter.com:1102321381\", \t\t\t\"link\": \"http://www.twitter.com/AureliaSpecker\", \t\t\t\"displayName\": \"Aurelia Specker\", \t\t\t\"postedTime\": \"2013-01-18T23:45:43.000Z\", \t\t\t\"image\": \"https://pbs.twimg.com/profile_images/1137517534104772608/8FBYgc6G_normal.jpg\", \t\t\t\"summary\": \"devrel @TwitterUK \u2022 Swiss in London \u2022 mother of houseplants \u2022 personal hairdresser to @_dormrod\", \t\t\t\"friendsCount\": 1331, \t\t\t\"followersCount\": 1032, \t\t\t\"listedCount\": 26, \t\t\t\"statusesCount\": 854, \t\t\t\"twitterTimeZone\": null, \t\t\t\"verified\": false, \t\t\t\"utcOffset\": null, \t\t\t\"preferredUsername\": \"AureliaSpecker\", \t\t\t\"languages\": [], \t\t\t\"links\": [{ \t\t\t\t\"href\": null, \t\t\t\t\"rel\": \"me\" \t\t\t}], \t\t\t\"location\": { \t\t\t\t\"objectType\": \"place\", \t\t\t\t\"displayName\": \"London, UK\" \t\t\t}, \t\t\t\"favoritesCount\": 4979 \t\t}, \t\t\"object\": { \t\t\t\"objectType\": \"note\", \t\t\t\"id\": \"object:search.twitter.com,2005:1224709550214873090\", \t\t\t\"summary\": \"\ud83d\udce3 If you enjoyed the London commute tutorial I wrote in November last year, check out the refactored version that u\u2026 https://t.co/cAepHunkFp\", \t\t\t\"link\": \"http://twitter.com/AureliaSpecker/statuses/1224709550214873090\", \t\t\t\"postedTime\": \"2020-02-04T15:01:25.000Z\" \t\t}, \t\t\"favoritesCount\": 43, \t\t\"twitter_entities\": { \t\t\t\"hashtags\": [], \t\t\t\"urls\": [{ \t\t\t\t\"url\": \"https://t.co/cAepHunkFp\", \t\t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1224709550214873090\", \t\t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\", \t\t\t\t\"indices\": [ \t\t\t\t\t117, \t\t\t\t\t140 \t\t\t\t] \t\t\t}], \t\t\t\"user_mentions\": [], \t\t\t\"symbols\": [] \t\t}, \t\t\"twitter_lang\": \"en\", \t\t\"twitter_filter_level\": \"low\" \t}, \t\"favoritesCount\": 0, \t\"twitter_entities\": { \t\t\"hashtags\": [], \t\t\"urls\": [], \t\t\"user_mentions\": [{ \t\t\t\"screen_name\": \"AureliaSpecker\", \t\t\t\"name\": \"Aurelia Specker\", \t\t\t\"id\": 1102321381, \t\t\t\"id_str\": \"1102321381\", \t\t\t\"indices\": [ \t\t\t\t3, \t\t\t\t18 \t\t\t] \t\t}], \t\t\"symbols\": [] \t}, \t\"twitter_lang\": \"en\", \t\"retweetCount\": 12, \t\"gnip\": { \t\t\"matching_rules\": [{ \t\t\t\"tag\": null \t\t}], \t\t\"urls\": [{ \t\t\t\t\"url\": \"https://t.co/87XIPZmZBJ\", \t\t\t\t\"expanded_url\": \"https://dev.to/twitterdev/migrate-to-twitter-s-newly-released-labs-recent-search-endpoint-3npe\", \t\t\t\t\"expanded_status\": 200, \t\t\t\t\"expanded_url_title\": null, \t\t\t\t\"expanded_url_description\": null \t\t\t}, \t\t\t{ \t\t\t\t\"url\": \"https://t.co/sOjXW4YhbN\", \t\t\t\t\"expanded_url\": \"https://dev.to/twitterdev/using-the-twitter-api-to-make-your-commute-easier-3od0\", \t\t\t\t\"expanded_status\": 200, \t\t\t\t\"expanded_url_title\": null, \t\t\t\t\"expanded_url_description\": null \t\t\t} \t\t] \t}, \t\"twitter_filter_level\": \"low\", \t\"twitter_quoted_status\": { \t\t\"id\": \"tag:search.twitter.com,2005:1195000047089389573\", \t\t\"objectType\": \"activity\", \t\t\"verb\": \"post\", \t\t\"postedTime\": \"2019-11-14T15:26:27.000Z\", \t\t\"generator\": { \t\t\t\"displayName\": \"Twitter Web App\", \t\t\t\"link\": \"https://mobile.twitter.com\" \t\t}, \t\t\"provider\": { \t\t\t\"objectType\": \"service\", \t\t\t\"displayName\": \"Twitter\", \t\t\t\"link\": \"http://www.twitter.com\" \t\t}, \t\t\"link\": \"http://twitter.com/AureliaSpecker/statuses/1195000047089389573\", \t\t\"body\": \"I wrote a tutorial on how to get bespoke commute information using the Twitter API\ud83d\ude87\\n\\n#DEVcommunity #Pythontutorial\u2026 https://t.co/pL0qJ4vhtE\", \t\t\"long_object\": { \t\t\t\"body\": \"I wrote a tutorial on how to get bespoke commute information using the Twitter API\ud83d\ude87\\n\\n#DEVcommunity #Pythontutorial \\n\\nCheck it out here \ud83d\udc47\\nhttps://t.co/sOjXW4YhbN\", \t\t\t\"display_text_range\": [ \t\t\t\t0, \t\t\t\t160 \t\t\t], \t\t\t\"twitter_entities\": { \t\t\t\t\"hashtags\": [{ \t\t\t\t\t\t\"text\": \"DEVcommunity\", \t\t\t\t\t\t\"indices\": [ \t\t\t\t\t\t\t85, \t\t\t\t\t\t\t98 \t\t\t\t\t\t] \t\t\t\t\t}, \t\t\t\t\t{ \t\t\t\t\t\t\"text\": \"Pythontutorial\", \t\t\t\t\t\t\"indices\": [ \t\t\t\t\t\t\t99, \t\t\t\t\t\t\t114 \t\t\t\t\t\t] \t\t\t\t\t} \t\t\t\t], \t\t\t\t\"urls\": [{ \t\t\t\t\t\"url\": \"https://t.co/sOjXW4YhbN\", \t\t\t\t\t\"expanded_url\": \"https://dev.to/twitterdev/using-the-twitter-api-to-make-your-commute-easier-3od0\", \t\t\t\t\t\"display_url\": \"dev.to/twitterdev/usi\u2026\", \t\t\t\t\t\"indices\": [ \t\t\t\t\t\t137, \t\t\t\t\t\t160 \t\t\t\t\t] \t\t\t\t}], \t\t\t\t\"user_mentions\": [], \t\t\t\t\"symbols\": [] \t\t\t} \t\t}, \t\t\"actor\": { \t\t\t\"objectType\": \"person\", \t\t\t\"id\": \"id:twitter.com:1102321381\", \t\t\t\"link\": \"http://www.twitter.com/AureliaSpecker\", \t\t\t\"displayName\": \"Aurelia Specker\", \t\t\t\"postedTime\": \"2013-01-18T23:45:43.000Z\", \t\t\t\"image\": \"https://pbs.twimg.com/profile_images/1137517534104772608/8FBYgc6G_normal.jpg\", \t\t\t\"summary\": \"devrel @TwitterUK \u2022 Swiss in London \u2022 mother of houseplants \u2022 personal hairdresser to @_dormrod\", \t\t\t\"friendsCount\": 1331, \t\t\t\"followersCount\": 1032, \t\t\t\"listedCount\": 26, \t\t\t\"statusesCount\": 854, \t\t\t\"twitterTimeZone\": null, \t\t\t\"verified\": false, \t\t\t\"utcOffset\": null, \t\t\t\"preferredUsername\": \"AureliaSpecker\", \t\t\t\"languages\": [], \t\t\t\"links\": [{ \t\t\t\t\"href\": null, \t\t\t\t\"rel\": \"me\" \t\t\t}], \t\t\t\"location\": { \t\t\t\t\"objectType\": \"place\", \t\t\t\t\"displayName\": \"London, UK\" \t\t\t}, \t\t\t\"favoritesCount\": 4979 \t\t}, \t\t\"object\": { \t\t\t\"objectType\": \"note\", \t\t\t\"id\": \"object:search.twitter.com,2005:1195000047089389573\", \t\t\t\"summary\": \"I wrote a tutorial on how to get bespoke commute information using the Twitter API\ud83d\ude87\\n\\n#DEVcommunity #Pythontutorial\u2026 https://t.co/pL0qJ4vhtE\", \t\t\t\"link\": \"http://twitter.com/AureliaSpecker/statuses/1195000047089389573\", \t\t\t\"postedTime\": \"2019-11-14T15:26:27.000Z\" \t\t}, \t\t\"favoritesCount\": 123, \t\t\"twitter_entities\": { \t\t\t\"hashtags\": [{ \t\t\t\t\t\"text\": \"DEVcommunity\", \t\t\t\t\t\"indices\": [ \t\t\t\t\t\t85, \t\t\t\t\t\t98 \t\t\t\t\t] \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"text\": \"Pythontutorial\", \t\t\t\t\t\"indices\": [ \t\t\t\t\t\t99, \t\t\t\t\t\t114 \t\t\t\t\t] \t\t\t\t} \t\t\t], \t\t\t\"urls\": [{ \t\t\t\t\"url\": \"https://t.co/pL0qJ4vhtE\", \t\t\t\t\"expanded_url\": \"https://twitter.com/i/web/status/1195000047089389573\", \t\t\t\t\"display_url\": \"twitter.com/i/web/status/1\u2026\", \t\t\t\t\"indices\": [ \t\t\t\t\t116, \t\t\t\t\t139 \t\t\t\t] \t\t\t}], \t\t\t\"user_mentions\": [], \t\t\t\"symbols\": [] \t\t}, \t\t\"twitter_lang\": \"en\", \t\t\"twitter_filter_level\": \"low\" \t} }`  \nTweet metadata timeline  \nJump to on this page  \n[Introduction](#intro)  \n[Key concepts](#key_concepts)  \n[Twitter timeline](#twitter_timeline)  \n[Filtering tips](#filtering_tips)  \n[Next steps](#next)\n",
        "line_start": 1663,
        "line_end": 1685
    },
    "98": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tIntroduction\n\nContent: \n## Introduction  \nAt its core, Twitter is a public, real-time, and global communication network. Since 2006, Twitter\u2019s evolution has been driven by both user use-patterns and conventions and new product features and enhancements. If you are using Twitter data for historical research, understanding the timeline of this evolution is important for surfacing Tweets of interest from the data archive.  \nTwitter was launched as a simple SMS mobile app, and has grown into a comprehensive communication platform. A platform with a complete set of APIs. APIs have always been a pillar of the Twitter network. The [first API hit the streets soon after Twitter was launched](https://blog.twitter.com/2006/introducing-the-twitter-api). When geo-tagging Tweets was first introduced in 2009, it was made available through a [Geo API](https://blog.twitter.com/2009/think-globally-tweet-locally) (and later the ability to \u2018geo-tag\u2019 a Tweet was integrated into the Twitter.com user-interface). Today, Twitter\u2019s APIs drive the two-way communication network that has become the source of breaking news and sharing information. The opportunities to build on top of this global, real-time communication channel are endless.  \nTwitter makes available two historical APIs that provide access to every publicly available Tweet: [Historical PowerTrack](https://developer.twitter.com/en/docs/tweets/batch-historical) and the [Full-Archive Search API](https://developer.twitter.com/en/docs/tweets/search). Both APIs provide a set of _operators_ used to query and collect Tweets of interest. These operators match on a variety of attributes associated with every Tweet, hundreds of attributes such as the Tweet\u2019s text content, the author\u2019s account name, and links shared in the Tweet. Tweets and their attributes are encoded in JSON, a common text-based data-interchange format. So as new features were introduced, new JSON attributes appeared, and typically new API operators were introduced to match on those attributes. If your use-case includes a need to _listen_ to what the world has said on Twitter, the better you understand when operators started having JSON metadata to match on, the more effective your historical PowerTrack filters can be.  \nNext, we will introduce some key concepts that set the stage for understanding how updates in Tweet metadata affect finding your data signal of interest.\n",
        "line_start": 178,
        "line_end": 183
    },
    "99": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tKey concepts\n\nContent: \n## Key concepts  \n#### From user-conventions to Twitter _first-class objects_  \nTwitter users organically introduced new, and now fundamental, communication patterns to the Twitter network. A seminal example is the hashtag, now nearly universally used across all social networks. Hashtags were introduced as a way to organize conversations and topics. On a network with hundreds of millions messages a day, tools to find Tweets of interest are key, and hashtags have become a fundamental method. Soon after the use of hashtags grew, they received official status and support from Twitter. As hashtags became a _\u2018first-class\u2019 object_, this meant many things. It meant hashtags became clickable/searchable in the Twitter.com user interface. It also meant hashtags became a member of the Twitter _entities_ family, along with @mentions, attached media, stock symbols, and shared links. These entities are conveniently encoded in a pre-parsed JSON array, making it easier for developers to process, scan, and store them.  \nRetweets are another example of user-driven conventions becoming official objects. Retweeting emerged as a way of \u2018forwarding\u2019 content to others. It started as a manual process of copying/pasting a Tweet and prepending it with a \u201cRT @\u201d pattern. This process was eventually automated via a new Retweet button, complete with new JSON metadata. The \u2018official\u2019 Retweet was born. Other examples include \u2018mentions\u2019, sharing of media and web links, and sharing a location with your Tweet. Each of these use-patterns resulted in new [twitter.com](https://twitter.com/) user-interface features, new supporting JSON, and thus new ways to match on Tweets. All of these fundamental Tweet attributes have resulted in PowerTrack Operators used to match on them.  \n#### Tweet metadata, mutability, updates, and currency  \nWhile Tweet messages can be up to a fixed number of characters long, the JSON description of a Tweet consists of over 100 attributes. Attributes such as who posted, at what time, whether it\u2019s an original Tweet or a Retweet, and an array of first-class objects such as hashtags, mentions, and shared links. For the account that posted, there is a User (or Actor) object with a variety of attributes that provide the user\u2019s Profile and other account metadata. Profiles include a short biographical description, a home location (freeform text), preferred language, and an optional web site link.  \nSome account metadata never change (e.g. numeric user ID and created date), some change slowly over time, while other attributes change more frequently. People change jobs and move. Companies updates their information. When you are collecting historical Tweets, it is important to understand how some metadata is _as it was when Tweeted_, and other metadata is _as it is when the query is submitted_.  \nWith all historical APIs, the user's profile description, display name, and profile 'home' attributes are updated to the values at the time of query.  \n#### \u201cNative\u201d media  \nTwitter.com and Twitter mobile apps support adding photos and videos to Tweets by clicking a button and browsing your photo galleries. Now that they are integrated as first-class actions, videos and photos shared this way are referred to as \u2018native\u2019 media.  \nMany querying Operators work with these \u2018native\u2019 resources, including `has:videos`, `has:images`, and `has:media`. These will match only on media content that was shared via Twitter features. To match on other media hosted off of the Twitter platform, you\u2019ll want to use Operators that match on URL metadata.  \nSo, before we dig into the Historical PowerTrack and Full-Archive Search product details, let\u2019s take a tour of how Twitter, as a product and platform, evolved over time.\n",
        "line_start": 1723,
        "line_end": 1735
    },
    "100": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tTwitter timeline\n\nContent: \n## Twitter timeline  \nBelow you will find a select _timeline_ of Twitter. Most of these Twitter updates in some way fundamentally affected either user behavior, Tweet JSON contents, query Operators, or all three. Looking at Twitter as a API platform, the following events in some way affected the JSON payloads that are used to encode Tweets. In turn, those JSON details affect how Twitter historical API match on them.  \nNote that this timeline list is generally precise and not exhaustive.  \n#### 2006  \n* October\n* @replies becomes a convention.\n* $cashtags first emerge, but using for stock ticker mentions does not become common until early 2009. $Cashtags became a clickable/searchable link in June 2012.\n* November - Favorites introduced.  \n#### 2007  \n* January - @replies become a first-class object with a UI reply button with `in_reply_to` metadata.\n* April - Retweets become a convention.\n* August - #hashtags emerge as a primary tool for searching and organizing Tweets.  \n#### 2009  \n* February - $cashtags become a common convention for discussing stock ticker symbols.\n* May - Retweet \u2018beta\u2019 is introduced with \u201cVia @\u201d prepended to Tweet body.\n* June - Verified accounts introduced.\n* August - Retweets a first-class object with \u201cRT @\u201d pattern and new `retweet_status` metadata.\n* October - List feature launched.\n* November - [Tweet Geotagging API is launched](https://blog.twitter.com/2009/think-globally-tweet-locally), providing the first method for users to share location via third-party apps.  \n#### 2010  \n* June - Twitter Places introduced for geo-tagging Tweets.\n* August - Tweet button for websites is launched. Made sharing links easier.  \n#### 2011  \n* May - Follow button introduced, making it easier to follow accounts associated with websites.\n* August - Native photos introduced.  \n#### 2012  \n* June - $Cashtags become a clickable/searchable link.  \n#### 2014  \n* March - [Photo tagging and up to four photos supported](https://blog.twitter.com/2014/photos-just-got-more-social). _Extended_ Twitter Entities metadata was introduced.\n* April - Emojis are natively supported in Twitter UI. Emojis were commonly used in Tweets since at least 2008.  \n#### 2015  \n* April - A change in Twitter\u2019s \u2018post Tweet\u2019 user-interface design results in fewer Tweets being geo-tagged.\n* October - [Twitter Polls introduced](https://blog.twitter.com/2015/introducing-twitter-polls). Polls originally supported two choices with a 24-hour voting period. In November, Polls started supporting four choices with voting periods from 5 minutes to seven days. Poll metadata made available (enriched native format only) in February 2017.  \n#### 2016  \n* February - [Searchable GIFs natively hosted in Tweet compose](https://blog.twitter.com/2016/introducing-gif-search-on-twitter).\n* May - [\u201cDoing More with 140\u201d](https://blog.twitter.com/express-even-more-in-140-characters) (dmw140) announced, stating plans for new ways of handling Replies and attached media with respect to a Tweet\u2019s 140-character message.\n* June - [Native video support](https://blog.twitter.com/official/en_us/a/2016/new-ways-to-tap-into-video-on-twitter.html)\n* June - Quoted Retweets generally available.\n* June - [Stickers introduced for adding to photos](https://blog.twitter.com/2016/introducing-stickers-on-twitter).\n* September - [\u2018Native attachments\u2019 introduced](https://twitter.com/Twitter/status/777915304261193728) with trailing URL not counted towards 140 characters (\u201cdmw140, part 1\u201d).  \n#### 2017  \n* February - Twitter Poll metadata included in Tweet metadata (enriched native format only).\n* April - [\u2018Simplified Replies\u2019](https://blog.twitter.com/2017/now-on-twitter-140-characters-for-your-replies) introduced with replied-to-accounts not counted towards 140 characters (\u201cdmw140, part 2\u201d).  \n2018  \n* May - [GDPR updates](https://twittercommunity.com/t/upcoming-changes-to-the-developer-platform/104603) user.time\\_zone set to null, user.utc\\_offset set to null, user.profile\\_background\\_image\\_url set to default value\n* June - Updating [quoteTweet formatting changes](https://twittercommunity.com/t/updating-how-urls-are-rendered-in-the-quote-tweet-payload/105473)  \n2022  \n* September 29 - The ability to edit Tweets is rolled out to a small test group. Edited Tweet metadata are added to the Tweet object where relevant. This includes edit\\_history and edit\\_controls objects. These metadata will not be returned for Tweets that were created before editable functionality was added. No associated Operators for these metadata. To learn more about how Tweet edits work, see the [Edit Tweets fundamentals](https://developer.twitter.com/en/docs/twitter-api/edit-tweets)\n",
        "line_start": 1747,
        "line_end": 1795
    },
    "101": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tFiltering tips\n\nContent: \n## Filtering tips  \nBeing familiar with the Twitter timeline of when and how new features were added can help you create more effective queries. Here, a query means a _filter_ or _rule_ that is applied by the Twitter historical APIs to the Tweet archive, using PowerTrack Operators to match on Tweet JSON. An example is the `lang:` Operator, which is used to match Tweets in a specified language. Twitter provides a language classification service (supporting over 50 languages), and Twitter APIs provide this metadata in the JSON that is generated for every Tweet. So, if a Tweet is written in Spanish the \u201clang\u201d JSON attribute is set to \u201ces\u201d. So, if you build a filter with the `lang:es` clause, it will only match on Tweet messages classified as Spanish.  \nThe timeline information can also help better interpret the Tweet data received. Say you were researching the sharing of content about the 2008 and 2012 Summer Olympics. If you applied only the `is:retweet` Operator to match on Retweets, no data would match in 2008. However, for 2012 there would likely be millions of Retweets. From this you potentially could erroneously conclude that in 2008 Retweets were not a user convention, or that simply no one Retweeted about those Olympics. Since Retweets became a first-class object in 2009, you need to add a `\u201dRT @\u201d` rule clause to help identify them in 2008.  \nBoth Retweets and Tweet language classifying are examples of Tweet attributes with a long history and many product details. Below we will discuss more details of these and other attribute classes important to matching on and understanding Twitter Data.  \n#### Recognizing false negatives  \nWhen it comes to writing filters, one important takeaway is that the metadata Operators match on all have \u201cborn on\u201d dates. If you build a filter with an Operator that acts on metadata introduced after the Tweet was posted, you\u2019ll have a false negative. For example, say you are interested in all Tweets that mention \u2018snow\u2019 and share a video. If you build a rule with the `has:videos` Operator, which matches on Tweets with _native_ videos, that clause will not match any Tweets before 2015.  \nHowever, sharing of videos has been common on Twitter long before 2015. Before then users shared links to videos hosted elsewhere, but in 2015, Twitter built new \u2018sharing video\u2019 features directly into the platform. For finding these earlier Tweets of interest, you would include a rule clause such as `url:\u201dyoutube.com\u201d`.  \nNote, with the Search APIs, there are some examples of metadata being \u2018backfilled\u2019 as its index was rebuilt. One good example are $cashtags, which became widely used to discuss stock symbols in 2009. After the $cashtag operator was introduced in 2015, the Search index was rebuilt, and in the process the symbol entity was extracted from all Tweet bodies, including early 2006 when `$` was used mainly for slang; \u201cI hope it $now$ $oon!\u201d.  \n#### Identifying and filtering on Tweet attributes important to your use-case  \nSome metadata, such as Twitter account numeric IDs, have existed since day one (and are an example of account metadata that never changes). Other metadata was not introduced until well after Twitter started in 2006. Examples of new metadata being introduced include Retweets metadata, Tweet locations, URL titles and descriptions, and \u2018native\u2019 media. Below are some of the most common types of Tweet attributes that have been fundamentally affected by these Twitter platform updates.  \nFiltering/matching behavior for these depends, in most cases, on which historical Tweet API is used. To help determine which product is the best fit for your research and use-case, the attribute details provided below include high-level product information.  \n#### Twitter Profiles  \nSince at its core Twitter is a global real-time communication channel, research with Tweet data commonly has an emphasis on who is communicating. Often it is helpful to know where a Twitter user calls home. Often knowing that an account bio includes mentions of interests and hobbies can lead you to Tweets of interest. It is very common to want to listen for Tweets from accounts of interest. Profile attributes are key to all of these use-cases.  \nEvery account on Twitter has a Profile that includes metadata such as Twitter @handle, display name, a short bio, home location (freeform text entered by a user), number of followers and many others. Some attributes never change, such as numeric user ID and when the account was created. Others usually change day-to-day, week-to-week, or month-to-month, such as number of Tweets posted and number of accounts followed and followers. Other account attributes can also change at any time, but tend to change less frequently: display name, home location, and bio.  \nThe JSON payload for every Tweet includes _account profile_ metadata for the Tweet\u2019s author. If it is a Retweet, it also includes profile metadata for the account that posted the original Tweet.  \nThe mutability of a Tweet\u2019s profile metadata depends entirely on the historical product used. The Search APIs serve up historical Tweets with the profile settings _as it is at the time of retrieval_. For Historical PowerTrack, the profile is _as it was at the time the Tweet was posted_, except for data before 2011. For Tweets older than 2011, the profile metadata reflects the profile as it was in September 2011.  \n#### Original Tweets and Retweets  \nRetweets are another example of user-driven conventions becoming official objects. Retweeting emerged as a way of \u2018forwarding\u2019 content to others. It started as a manual process of copying/pasting a Tweet and prepending it with a \u201cRT @\u201d pattern. This process was eventually automated via a new Retweet button, complete with new JSON metadata. The \u2018official\u2019 Retweet was born and the action of retweeting became a first-class Tweet event. Along with the new Retweet button, new metadata was introduced such as the complete payload of the original Tweet.  \nWhether a Tweet is original or shared is a common filtering \u2018switch.\u2019 In some cases, only original content is needed. In other cases, Tweet engagement is of primary importance so Retweets are key. The PowerTrack `is:retweet` Operator enables users to either include or exclude Retweets. If pulling data from before August 2009, users need to have _two_ strategies for Retweet matching (or not matching). Before August 2009, the Tweet message itself needs to be checked, using exact phrase matching, for matches on the \u201c@RT \u201d pattern. For periods after August 2009, the `is:retweet` Operator is available.  \n#### Tweet language classifications  \nThe language a Tweet is written in is a common interest. Tweet language can help infer a Tweet\u2019s location and often only a specific language is needed for analysis or display. (Twitter profiles also have a preferred language setting.)  \nFor filtering on a Tweet\u2019s language classification, Twitter\u2019s historical products ([Search API](https://developer.twitter.com/content/developer-twitter/en/docs/tweets/search/overview/enterprise) and [Historical PowerTrack](https://developer.twitter.com/content/developer-twitter/en/docs/tweets/batch-historical/overview)) are quite different. When the Search archive was built, all Tweets were backfilled with the Twitter language classification. Therefore the `lang:` Operator is available for the entire Tweet archive. With Historical PowerTrack, Twitter\u2019s language classification metadata is available in the archive beginning on March 26, 2013.  \n#### Geo-referencing Tweets  \nBeing able to tell where a Tweet was posted (i.e., geo-referencing it) is important to many use-cases. There are three primary methods for geo-referencing Tweets:  \n* Geographical references in a Tweet message\n* Tweets geo-tagged by the user.\n* Account profile \u2018home\u2019 location set by a user  \nIf geo-referencing is key to your use-case, be sure to review our [filtering tweets by location](https://developer.twitter.com/content/developer-twitter/en/docs/tutorials/filtering-tweets-by-location)and [tweet geo metadata](https://developer.twitter.com/content/developer-twitter/en/docs/tutorials/tweet-geo-metadata) tutorials.  \n##### Geographical references in a Tweet message  \nMatching on geographic references in the Tweet message, while often the most challenging method since it depends on local knowledge, is an option for the entire Tweet archive. Here is an example geo-referenced match from 2006 for the San Francisco area based on a \u2018golden gate\u2019 filter:  \nhttps://twitter.com/biz/statuses/28311  \n##### Tweets geo-tagged by the user  \nIn November 2009 Twitter introduced its Tweet Geotagging API that enabled Tweets to be geo-tagged with an exact location. In June 2010 Twitter introduced Twitter Places that represent a geographic area on the venue, neighborhood, or town scale. Approximately 1-2% of Tweets are geo-tagged using either method.  \nThe available geo-tagging history is dependent on the Historical API you are using. With the Search APIs the ability to start matching on Tweets with some Geo Operators started in March 2010, and with others on February 2015. If you are using Historical PowerTrack, geo-referencing starts on September 1, 2011. When the Historical PowerTrack archive was built, all geo-tagging before this date was not included.  \n##### Account profile \u2018home\u2019 location set by a user  \nAll Twitter users have the opportunity to set their Profile Location, indicating their home location. Millions of Twitter users provide this information, and it significantly increases the amount of geodata in the Twitter Firehose. This location metadata is a non-normalized, user-generated, free-form string. Approximately 30% of accounts have Profile Geo metadata that can be resolved to the country level.  \nAs with Tweet geo, the methods to match and the time periods available depends on the Historical API you are using. Historical PowerTrack enables users to attempt their own custom matching on these free-form strings. To help make that process easier, Twitter also provides a [Profile Geo Enrichment](https://developer.twitter.com/content/developer-twitter/en/docs/tweets/enrichments/overview/profile-geo) that performs the geocoding where possible, providing normalized metadata and corresponding Operators. Profile Geo Operators are available in both Historical PowerTrack and the Search APIs. With Historical PowerTrack, these Profile Geo metadata is available starting in June 2014. With the Search APIs, this metadata is available starting in February 2015.  \n#### Shared links and media  \nSharing web page links, photos and videos have always been a fundamental Twitter use-case. Early in its history, all of these actions involved including a URL link in the Tweet message itself. In 2011 Twitter integrated sharing photos directly into its user-interface. In 2016, native videos were added.  \nGiven this history, there are a variety of filtering Operators used for matching on this content. There are a set of Operators that match on whether Tweets have shared links, photos, and videos. Also, since most URLs shared on Twitter are shortened to use up fewer of a Tweet\u2019s characters (e.g. generated by a service such as bitly or tinyurl), Twitter provides data enrichments that generate a complete, expanded URL that can be matched on. For example, if you wanted to match on Tweets that included links discussing Twitter and Early-warning systems, a filter that references \u2018severe weather communication\u2019 would match a Tweet containing this [http://bit.ly/1XV1tG4](http://bit.ly/1XV1tG4) URL.  \nIn March 2012, the [expanded URL enrichment](https://developer.twitter.com/content/developer-twitter/en/docs/tweets/enrichments/overview/expanded-and-enhanced-urls) was introduced. Before this time, the Tweet payloads included only the URL as provided by the user. So, if the user included a shortened URL it can be challenging to match on (expanded) URLs of interest. With both Historical PowerTrack and the Search APIs, these metadata are available starting in March 2012.  \nIn July 2016, the enhanced URL enrichment was introduced. This enhanced version provides a web site\u2019s HTML title and description in the Tweet payload, along with Operators for matching on those. With Historical PowerTrack, these metadata become available in July 2016. With the Search APIs, these metadata begin emerging in December 2014.  \nIn September 2016 Twitter introduced \u2018native attachments\u2019 where a trailing shared link is not counted against the 140 Tweet character limit. Both URL enrichments still apply to these shared links.  \nFor other URL product-specific details on URL filtering, see the corresponding articles for more information.\n",
        "line_start": 1822,
        "line_end": 1866
    },
    "102": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tNext steps\n\nContent: \n## Next steps  \nNow that we\u2019ve explored the timeline of when key Twitter features were introduced and learned how these metadata changes affect filtering at a high-level, the next step is to get into the many product-specific details:  \n* [Learn more about the Historical PowerTrack API and its metadata and filtering timeline](https://developer.twitter.com/en/docs/tweets/batch-historical/guides/hpt-timeline)\n* [Learn more about the Full-Archive Search API and its metadata and filtering timeline](https://developer.twitter.com/en/docs/tweets/search/guides/fas-timeline)\n* [Choosing between Historical PowerTrack and Full-Archive Search APIs](https://developer.twitter.com/en/docs/tutorials/choosing-historical-api)  \nExpanded and Enhanced URLs\n",
        "line_start": 1598,
        "line_end": 1604
    },
    "103": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tExpanded and Enhanced URLs\n\nContent: \n## Expanded and Enhanced URLs  \nThe Expanded and Enhanced URL enrichment automatically expands shortened URLs that are included in the body of a Tweet, and includes the resulting URL as metadata within the payload. In addition, this enrichment also provides HTML page metadata from the `title` and `description` of the destination page.  \n**Important Details:**  \n* To resolve a shortened link, our system sends HTTP HEAD requests to the URL provided\u00a0and follows any redirects until it arrives at the final URL. This final URL (NOT the content of the page itself) is then included in the response payload.  \n* The URL enrichment does add between 5-10 seconds latency to realtime streams\n* For requests made to the Full Archive Search API, expanded URL enrichment data is only available\u00a0for Tweets 13 months old or newer.  \n* The URL enrichment is not available for Tweet links (including quote Tweets), Moments links, and profile links that are included within a Tweet.\n",
        "line_start": 1918,
        "line_end": 1925
    },
    "104": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tExpanded and Enhanced URLs\n\tTweet payload\n\nContent: \n### Tweet payload  \nThe Expanded and Enhanced URL enrichment can be found within the\u00a0`entities`\u00a0object of the Tweet payload - specifically in the `entitites.urls.unwound` object. It provides the following fields of metadata:  \n* Expanded URL -\u00a0`unwound.url`\n* Expanded HTTP Status -\u00a0`unwound.status`\n* Expanded URL HTML title - 300 character limit -\u00a0`unwound.title`\n* Expanded URL HTML description - 1000 character limit -\u00a0`unwound.description`  \n**This is an example of an [entities object](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities) with the URL enrichment:**  \n`\"entities\": {     \"hashtags\": [            ],     \"urls\": [       {         \"url\": \"https:\\/\\/t.co\\/HkTkwFq8UT\",         \"expanded_url\": \"http:\\/\\/bit.ly\\/2wYTb9y\",         \"display_url\": \"bit.ly\\/2wYTb9y\",         \"unwound\": {           \"url\": \"https:\\/\\/www.forbes.com\\/sites\\/laurencebradford\\/2016\\/12\\/08\\/11-websites-to-learn-to-code-for-free-in-2017\\/\",           \"status\": 200,           \"title\": \"11 Websites To Learn To Code For Free In 2017\",           \"description\": \"It\\u2019s totally possible to learn to code for free...but what are the best resources to achieve that? Here are 11 websites where you can get started.\"         },         \"indices\": [           10,           33         ]       }     ],     \"user_mentions\": [            ],     \"symbols\": [            ]   },`  \n**This is an example of an entities object containing a Tweet link that is not enriched:\n**  \n`\"entities\": {   \"urls\": [{      \"url\": \"https://t.co/SywNbZdDmb\",      \"expanded_url\": \"https://twitter.com/TwitterDev/status/1050118621198921728\",      \"display_url\": \"twitter.com/TwitterDev/s\u2026\",      \"indices\": [          142,          165      ]    }   ] }`\n",
        "line_start": 1932,
        "line_end": 1943
    },
    "105": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tExpanded and Enhanced URLs\n\tFiltering operators\n\nContent: \n### Filtering operators  \nThe following operators will filter and provide a tokenized match on the related fields of URL metadata:  \n**url:**  \n* Example: \u201curl:tennis\u201d\n* Tokenized match on any Expanded URL that includes the word tennis\n* Could also be used as a filter to include or exclude links from a\u00a0specific website using something like \u201curl:npr.org\u201d  \n**url\\_title:**  \n* Example: \u201curl\\_title:tennis\u201d\n* Tokenized match on any Expanded URL HTML title that includes the word tennis\n* Matches on the HTML title data included in the payload, which is limited to 300 characters.  \n**url\\_description:**  \n* Example: \u201curl\\_description:tennis\u201d\n* Tokenized match on any Expanded URL HTML description that includes the word tennis\n* Matches on the HTML description included in the payload, which is limited to 1000 characters.\n",
        "line_start": 1954,
        "line_end": 1968
    },
    "106": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tExpanded and Enhanced URLs\n\tHTTP Status Codes\n\nContent: \n### HTTP Status Codes  \nThe expanded URL enrichment also provides the HTTP status code for the final URL we are attempting to unwind. In normal cases, this will be a 200 value. Other 400-series values indicate problems with resolving the URL.  \nVarious status codes may be returned when attempting to unwind a URL. During the process of unwinding a URL, if we get a redirect, we will follow them indefinitely until we either:  \n* Hit a 200 series code (success)\n* Hit a non-redirect series code (failures)\n* Timeout because the final URL could not be resolved in a reasonable amount of time (returns a 408 - timeout)\n* Hit an exception of some sort  \nIf an exception is hit, we use the following mapping between reasons and status codes returned:  \n| Reason | Status Code Returned |\n| --- | --- |\n| SSL Exceptions | 403 (Forbidden) |\n| Unwinding not allowed by URL | 405 |\n| Socket Timeout | 408 (Timeout) |\n| Unknown Host Exception | 404 (Not Found) |\n| Unsupported Operation | 404 (Not Found) |\n| Connect Exception | 404 (Not Found) |\n| Illegal Argument | 400 (Bad Request) |\n| Everything else | 400 (Bad Request) |  \nMatching rules object\n",
        "line_start": 1977,
        "line_end": 1996
    },
    "107": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tMatching rules\n\nContent: \n# Matching rules  \nThe matching rules enrichment is an object of metadata that indicates which rule or rules matched the Tweets received. This is most commonly used with the PowerTrack stream.  \nMatching will be done via exact match on the terms contained in a rule, scanning the content of the activity with and without punctuation. Matching is not case sensitive. When the content is found to contain all terms defined in the rule, there will be a root-level a\u00a0matching\\_rules\u00a0object indicating the rule(s) that led to the match.\n",
        "line_start": 2004,
        "line_end": 2007
    },
    "108": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tMatching rules\n\tPowerTrack\n\nContent: \n## PowerTrack  \nTweets delivered through PowerTrack (realtime, Replay, and Historical) will contain the\u00a0matching\\_rules\u00a0object as follows:  \n`\"matching_rules\": [{         \"tag\": null,         \"id\": 907728589029646336,         \"id_str\": \"907728589029646336\"     }]`  \nIn PowerTrack, the matching\\_rules object reflects\u00a0_all_\u00a0rules that matched the given result. In other words, if more than one rule matches a specific Tweet, it will only be delivered once, but the matching\\_rules element will contain all the rules that matched.  \nPoll metadata  \nPoll metadata  \n================  \nPoll metadata is a free enrichment available across all products (Realtime & Historical APIs) in enriched native format payloads. The metadata notes the presence of the poll in a Tweet, includes the list of poll choices, and includes both the poll duration and expiration time. This enrichment makes it easy to acknowledge the presence of a poll and enables proper rendering of a poll Tweet for display.  \n##### Important Details:  \n* Available across all enterprise APIs (PowerTrack, Replay, Search, Historical PowerTrack)\n* _Note:_ For Replay and Historical PowerTrack, this metadata was first made available on 02/22/17 - see documented [enrichment availability](https://developer.twitter.com/content/developer-twitter/en/docs/tweets/batch-historical/guides/hpt-timeline).\n* Does not include vote information or poll results\n* Does not currently have filter/operator support\n* Available in **enriched native format** only\n* Enriched native format is a user-controlled setting that can be changed at any time through the Console: _Select a Product (PowerTrack, Replay, Search) > Settings tab > Output Format (Leave data in its original format)_\n",
        "line_start": 2010,
        "line_end": 2025
    },
    "109": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tMatching rules\n\tPowerTrack\n\tTweet Payload\n\nContent: \n### Tweet Payload  \nPoll Tweets will contain the following metadata in the \u201centities.polls\u201d object in the payload:  \n* An \u201coptions\u201d array with up to four options that include the position (1-4) and option text\n* Poll expiration date\n* Poll duration  \nSee the sample payload below for further reference.\n",
        "line_start": 2037,
        "line_end": 2043
    },
    "110": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tMatching rules\n\tPowerTrack\n\tSample Payload\n\nContent: \n### Sample Payload  \nBelow is a snippet of the enriched native format payload highlighting the added poll metadata:  \n\"entities\":{\n\"hashtags\":[],\n\"urls\":[],\n\"user_mentions\":[],\n\"symbols\":[],\n\"polls\":[\n{\n\"options\":[\n{\n\"position\":1,\n\"text\":\"The better answer\"\n},\n{\n\"position\":2,\n\"text\":\"The best answer\"\n}\n],\n\"end_datetime\":\"Sat Feb 04 15:33:11 +0000 2017\",\n\"duration_minutes\":1440\n}\n]\n},  \n* * *  \nProfile geo\n",
        "line_start": 2047,
        "line_end": 2073
    },
    "111": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tMatching rules\n\tProfile Geo\n\tIntroduction\n\nContent: \n## Profile Geo  \n### Introduction  \nMany Twitter user profiles include public location information provided by the user. This data is returned as a normal string in user.location (see\u00a0[User object data dictionary](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-object/user.html)). The Profile Geo Enrichment adds structured geodata relevant to the user.location value by geocoding and normalizing location strings where possible. Both latitude/longitude coordinates and related place metadata are added to user.derived.locations\u00a0_only_\u00a0when included as part of\u00a0the Tweet payload in enterprise API products.\u00a0This data is available when using [the enriched native format](https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/overview.html)\u00a0and can be filtered with a combination of\u00a0[PowerTrack rules](https://developer.twitter.com/en/docs/twitter-api/enterprise/rules-and-filtering/enterprise-operators).  \n**Note:** Some of the supporting geodata used to create the Profile Geo enrichment comes from GeoNames.org and is used by Twitter under the [Creative Commons Attribution 3.0 License](https://creativecommons.org/licenses/by/3.0/us/legalcode).  \nProfile Geo data will be included in Twitter's PowerTrack, Replay, Volume Stream, Search, and Historical PowerTrack APIs.\n",
        "line_start": 2078,
        "line_end": 2083
    },
    "112": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tMatching rules\n\tProfile Geo\n\tProfile Geo Data\n\nContent: \n### Profile Geo Data  \n| Enriched native field name | Example value | Description |\n| --- | --- | --- |\n| user.derived.locations.country | United States | The country location for where the user that created the Tweet is from. |\n| user.derived.locations.country\\_code | US  | A two-letter ISO-3166 country code that corresponds to the country location for where the user that created the Tweet is from. |\n| user.derived.locations.locality | Birmingham | The locality location (generally city) for where the user that created the Tweet is from. |\n| user.derived.locations.region | Alabama | The region location (generally state/province) for where the user that created the Tweet is from. |\n| user.derived.locations.sub\\_region | Jefferson County | The sub-region location (generally county) for where the user that created the Tweet is from. |\n| user.derived.locations.full\\_name | Birmingham, Alabama, United States | The full name (excluding sub-region) for where the user that created the Tweet is from. |\n| User.derived.locations.geo | See Below | An array that includes a lat/long value for a coordinate that corresponds to the lowers granularity location for where the user that created the Tweet is from. |  \nThe Historical PowerTrack, Search, and PowerTrack APIs supports filtering based on Profile Geo data. See the appropriate product documentation for more details on what operators are available for filtering on Profile Geo data.\n",
        "line_start": 2088,
        "line_end": 2099
    },
    "113": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tMatching rules\n\tProfile Geo\n\tSample Payload\n\nContent: \n### Sample Payload  \n{\n\"user\": {\n\"derived\": {\n\"locations\": \\[\n{\n\"country\": \"United States\",\n\"country\\_code\": \"US\",\n\"locality\": \"Birmingham\",\n\"region\": \"Alabama\",\n\"sub\\_region\": \"Jefferson County\",\n\"full\\_name\": \"Birmingham, Alabama, United States\",\n\"geo\": {\n\"coordinates\": \\[\n-86.80249,\n33.52066\n\\],\n\"type\": \"point\"\n}\n}\n\\]\n}\n}\n}\n",
        "line_start": 2047,
        "line_end": 2071
    },
    "114": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tMatching rules\n\tProfile Geo\n\tLimitations\n\nContent: \n### Limitations  \n* The Profile Geo enrichment attempts to determine the best choice for the geographic place described in the profile location string. The result may not be accurate in all cases due to factors such as multiple places with similar names or ambiguous names.\n* If a value is not provided in a user\u2019s profile location field (actor.location), we will not attempt to make a classification.\n* Precision Level: If a Profile Geo Enrichment can only be determined with confidence at the country or region level, lower-level geographies such as subRegion and locality will be omitted from the payload.\n* The Profile Geo enrichment provides lat/long coordinates (a single point) that corresponds to the Precision Level of the enrichment\u2019s results. These coordinates represent the geographic center of the enrichment location results. For example, if the Precision Level is at the Country level, then those coordinates are set to the geographic center of that Country.\n* The PowerTrack operators provided for address properties (locality/region/country/country code) are intentionally granular to allow for many rule combinations. When attempting to target a specific location that shares a name with another location, consider combining address rules. For instance, the following would avoid matches for \u201cSan Francisco, Philippines\u201d: profile\\_locality:\u201dSan Francisco\u201d profile\\_region:California When building rules that target individual Profile Geo fields, keep in mind that each increased level of granularity will limit the results you see. In some cases when attempting to look at data from a city, you may wish to only rely on a region rule where the region offers significant overlap with the city, e.g. the city of Zurich, Switzerland can be effectively targeted along with surrounding areas with profile\\_region:\u201dZurich\u201d.\n* Use with Native Geo Tweets: The Profile Geo enrichment provides an alternative type of geography for a Tweet, different from the native geo value in the payload. These two types of geography can be combined together to capture all of the possible tweets related to a given area (based on available geodata), though they are not conceptually equivalent.  \nBuilding an enterprise rule\n",
        "line_start": 2128,
        "line_end": 2136
    },
    "115": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tMatching rules\n\tGetting started with enterprise rules and queries\n\nContent: \n## Getting started with enterprise rules and queries  \nProducts utilizing enterprise operators deliver social data to you based on filtering rules you set up. Rules are made up of one or more \u2018clauses\u2019, where a clause is a keyword, exact phrase, or one of the many enterprise operators. Before beginning to build rules with enterprise operators, be sure to review the syntax described below, look through the list of available operators, and understand the restrictions around building rules. You should also be sure to understand the nuances of how rules are evaluated logically, in the \"[Order of operations](#orderofoperations)\" section.  \nMultiple clauses can be combined with both \"and\" and \"or\" logic.  \n**Please note:**\u00a0\"And\" logic is specified with a space between clauses, while or logic is specified with an upper-case `OR`.  \nEach rule can be up to 2,048 characters long with no limits on the number of positive clauses (things you want to match or filter on) and negative clauses (things you want to exclude and not match on).\n",
        "line_start": 2139,
        "line_end": 2144
    },
    "116": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tMatching rules\n\tGetting started with enterprise rules and queries\n\tBuilding rules and queries\n\nContent: \n### Building rules and queries  \n**Keyword match**  \nKeyword matches are similar to queries in a search interface. For example, the following enterprise operator rule would match activities with the term \"social\" in the text body.  \n`social`  \n**ANDing terms with white space**  \nAdding another keyword is the same as adding another requirement for finding matches. For example, this rule would only match activities where both \"social\" and \"media\" were present in the text, in either order \u2013\u00a0_having a space between terms operates as boolean AND logic_. If you include an explicit AND in your rule, it will rejected by the rules endpoint.  \n`social media`  \n**ORing terms with upper-case OR**  \nMany situations actually call for boolean OR logic, however. This is easily accomplished as well.\u00a0_Note that the OR operator must be upper-case and a lower-case \u2018or\u2019 will be treated as a regular keyword._  \n`social OR data`  \n**Negating terms**  \nStill other scenarios might call for excluding results with certain keywords (a boolean NOT logic). For instance, activities with \u2018happy\u2019, but excluding any with \u2018birthday\u2019 in the text.  \n`social -personality`  \n**Grouping with parentheses**  \nThese types of logic can be combined using grouping with parentheses, and expanded to much more complex queries.  \n`(social OR data) (academic OR research) -personality -information -university`  \nThis is just the beginning though \u2013 while the above examples rely simply on tokenized matching for keywords, enterprise products also offer operators to perform different types of matching on the text.  \n**Exact match**  \n`\"social media research\"`  \n**Substring match**  \n`contains:info`  \n**Proximity match**  \n`\"social media research\"~3`  \nFurther, other operators allow you to filter on unique aspects of social data, besides just the text.  \n**The user who is posting a Tweet**  \n`from:twitterdev`  \n**Geo-tagged Tweets within 10 miles of Pearl St. in Boulder, CO, United States**  \n`point_radius:[-105.27346517 40.01924738 10.0mi]`  \n**Putting it all together**  \nThese can be combined with text filters using the same types of logic described above.  \n`(social OR data) (academic OR research OR \"social media research\") point_radius:[-105.27346517 40.01924738 10.0mi] lang:en -personality -information -university`\n",
        "line_start": null,
        "line_end": null
    },
    "117": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tMatching rules\n\tGetting started with enterprise rules and queries\n\t\n\nContent: \n###\nBoolean Syntax  \nThe examples in the previous section, utilized various types of boolean logic and grouping. See the table below for additional detail regarding the syntax and requirements for each.  \n|     |     |     |\n| --- | --- | --- |\n| **Logic type** | **Operator syntax** | Description |\n| AND | social data | Whitespace between two operators results in AND logic between them  <br>  <br>Matches activities containing both keywords (\"social\", \"data\").  <br>  <br>**Do not use AND explicitly in your rule. Only use whitespace. An explicit AND will be treated like a regular keyword.** |\n| OR  | social OR data | To OR together two operators, insert an all-caps OR, enclosed in whitespace between them  <br>  <br>Matches activities with EITHER keyword (\"social\" OR \"data\")  <br>  <br>Note that if you combine OR and AND functionality in a single rule, you should understand the order of operations described in our \"[Order of operations](#OrderOfOperations)\" section, and consider grouping non-negated operators together using parentheses as described below to ensure your rule behaves as expected.  <br>  <br>You must use upper-case \"OR\" in your rule. Lower-case 'or' will be treated as a regular keyword. |\n| NOT | social data  <br>\\-apple -android -phone | Insert a `-` character immediately in front of the operator or group of operators.  <br>  <br>The example rule shown matches activities containing keyword \"social\", but excludes those which contain the keyword \"data.\"  <br>  <br>Negated ORs are not allowed where the rule would request \"everything in the firehose except the negation.\" For example, `apple OR -ipad` is invalid because it would match all activities except those mentioning \"ipad\". |\n| Grouping | (social OR data) -twitterdev -twitterapi | Parentheses around multiple operators create a functional \"group\".<br><br>Groups can be connected to clauses in the same manner as an individual clause via whitespace (AND) or ORs. However, note that it is a best practice to not group together negations by applying the negating \\- to the entire group. Instead, you should negate each individual operator, stringing them together via whitespace (AND).\u00a0<br><br>For example, instead of using\u00a0\\-(iphone OR imac OR macbook), use the following: \\-iphone -imac -macbook  <br>  <br>Grouping is especially important where a single rule combines AND and OR functionality, due to the order of operations used to evaluate the rule. See below for more details. |  \n**Please note:** that operators may be either positive or negative.  \n**Positive Operators**\u00a0define what you want to\u00a0**include**\u00a0in the results. E.g. the `has:hashtags` operator says \u201cI want activities containing hashtags.\u201d  \n**Negative Operators**\u00a0define what you want to\u00a0**exclude**\u00a0from the results, and are created by using the Boolean NOT logic described above. For example, `-has:hashtags` says \u201cExclude any activities containing hashtagss, even if they otherwise match my rule.\u201d  \nPremum operator products have no restriction on the number of positive and negative clauses, subject to a maximum length of 2,048 characters.  \n#### Order of Operations  \nWhen combining AND and OR functionality in a single rule, the following order of operations will dictate how your rule is evaluated.  \n1. Operators connected by AND logic are combined first\n2. Then, operators connected with OR logic are applied  \n**Example:**  \n* `apple OR iphone ipad`\u00a0would be evaluated as\u00a0`apple OR (iphone ipad)`\n* `ipad iphone OR android`\u00a0would be evaluated as\u00a0`(iphone ipad) OR android`  \nTo eliminate uncertainty and ensure that your rules are evaluated as intended, group terms together with parentheses where appropriate. For example:  \n* `(apple OR iphone) ipad`\n* `iphone (ipad OR android)`  \n####\nPunctuation, Diacritics, and Case Sensitivity  \nIf you specify a keyword or hashtag rule with character accents or diacritics for enterprise operators, it will match Tweet text honoring the diacritics (hashtags or keywords). Rule with a keyword `Diacr**\u00ed**tica` or hashtag `#cumplea**\u00f1**os` will match \"Diacr**\u00ed**tica\" or \"#cumplea**\u00f1**os\" but not \"Diacritica\" or \"#cumpleanos\" without the tilde\u00a0**\u00ed**\u00a0or\u00a0**e\u00f1e**.  \nCharacters with accents or diacritics are treated the same as normal characters and are not treated as word boundaries. For example, a rule of cumplea**\u00f1**os would only match activities containing the word cumplea\u00f1os and would not match activities containing cumplea, cumplean, or os.  \nAll operators are evaluated in a case-insensitive manner. For example, the rule `Cat` will match all of the following: \"cat\", \"CAT\", \"Cat\".  \n####\nPowerTrack rule tags  \nAs described on our \"[Matching rules](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/matching-rules)\" page, each rule may be created with a tag. These tags have no effect on filtering, but can be used to create logical groupings of rules within your app. Each rule may have only one tag, with a maximum of 255 characters. Tags are included with the JSON formatted rule at the time of creation via the API, as described on our \"Matching rules\" page.  \n####\nPutting Rules in JSON Format  \nIn order to add or delete a rule from a stream via the API, the rules must utilize JSON format. Essentially, this requires putting each rule into the following structure:  \n`{\"value\":\"insert_rule_here\"}`  \n**Rules with double-quotes**  \nIf the rule contains double-quote characters (`\u201c`) associated with exact-match or other operators, they must be escaped using a backslash to distinguish them from the structure of the JSON format.  \n`\"social data\" @twitterdev`  \nThe JSON formatted rule would be:  \n`{\"value\":\"\\\"social data\\\" @twitterdev\"}`  \n**Rules with double-quote string literals**  \nTo include a double-quote character as a string literal within an exact-match, it must be double-escaped. For example, for a rule matching on the exact phrase \"Toys \u201cR\u201d Us\", including the double-quotes around \"R\", the plain-text representation of this would look like the following:  \n`\"Toys \\\"R\\\" Us\"`  \nTranslating this to JSON format, you should use the following structure:  \n`{\"value\":\"\\\"Toys \\\\\\\"R\\\\\\\" Us\\\"\"}`  \n**Rules with Tags**  \nTo include an optional tag with your rule, as described above, simply include an additional `tag` field with the rule value.  \n`{\"value\":\"\\\"social data\\\" @twitterdev\",\"tag\":\"RULE-TAG-01\"}`  \n**Formatting for API Requests**  \nWhen adding or deleting rules from the stream via the API, multiple JSON formatted rules should be comma delimited, and wrapped in a JSON \u201crules\u201d array, as shown below:  \n`{\"rules\":[{\"value\":\"from:twitterdev\"},{\"value\":\"\\social data\\\" @twitterdev\",\"tag\":\"RULE-TAG-01\"}]}`  \n####\nOperators that match Quote Tweets  \nWhen using the [PowerTrack API](https://developer.twitter.com/en/docs/twitter-api/enterprise/powertrack-api) and [Historical PowerTrack API](https://developer.twitter.com/en/docs/twitter-api/enterprise/historical-powertrack-api), the operators below will match on content from both the original Tweet that was quoted and the new Quote Tweet.  \nHowever, if you are using the [Search API](https://developer.twitter.com/en/docs/twitter-api/enterprise/search-api), these operators will only match the contents of the Quote Tweet, and will not match on any content from the original Tweet that was quoted.  \n* `Keywords`\n* `Phrases`\n* `Proximity`\n* `#hashtags`\n* `@mentions`\n* `$cashtags`\n* `url:`\n* `url_contains:`\n* `has:links`\n* `has:mentions`\n* `has:hashtags`\n* `has:media`\n* `has:symbols`\n* `is:quote`\n* `is:reply`  \nEnterprise operators\n",
        "line_start": 405,
        "line_end": 477
    },
    "118": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\tMatching rules\n\tEnterprise operators\n\nContent: \n## Enterprise operators  \nBelow are the operators available with PowerTrack and Historical PowerTrack. A subset of these are available with the 30-Day and Full-Archive search APIs. See [this table](https://developer.twitter.com/en/docs/twitter-api/enterprise/rules-and-filtering/operators-by-product) for a product-by-product list of available operators.  \n**Operator**  \nDescriptionkeyword  \nMatches a keyword within the text body or URL of a Tweet. Keywords must start with either a digit (0-9) or any non-puncutation character.\u00a0 Keyword matching is a tokenized match, meaning that your keyword will be matched against the tokenized text of the Tweet body \u2013 tokenization is based on punctuation, symbol, and separator Unicode basic plane characters.\u00a0 To match strings containing punctuation (for example, coca-cola), symbol, or separator characters, you must use a quoted \"exact phrase match\".  \nExample:\n(social OR pizza OR wildfire) -planet  \n**Note:**\u00a0With the Search API,\u00a0accented and special characters\u00a0are normalized to standard latin characters, which can change meanings in foreign languages or return unexpected results:\nFor example,\u00a0\"m\u00fasic\" will match \u201cmusic\u201d and vice versa.\nFor example,\u00a0common phrases like \"Feliz A\u00f1o Nuevo!\" in Spanish, would be indexed as \"Feliz Ano Nuevo\", which changes the meaning of the phrase.  \n**Note:**\u00a0This operator will match on both URLs and unwound URLs within a Tweet.  \nemoji\nMatches an emoji within the body of a Tweet. Emojis are a tokenized match, meaning that your emoji will be matched against the tokenized text of the Tweet body \u2013 tokenization is based on punctuation, symbol/emoji, and separator Unicode basic plane characters. For example, a Tweet with the text \u201cI like \ud83c\udf55\u201d would be split into the following tokens: I, like, \ud83c\udf55. These tokens would then be compared to the emoji used in your rule. Note that if an emoji has a variant, you must use \u201cquotations\u201d to add to a rule.  \nExample:\n(\ud83c\udf55 OR \ud83d\udc9c OR \ud83d\udc22) -\ud83e\udd16\n\"exact phrase match\"  \nMatches an exact phrase within the body of a Tweet.  \nExample:\n(\"social media\" OR \"developer.twitter.com\" OR \"wildfire911\" OR \"coca-cola\") -\"planet earth\"  \n**Note:**\u00a0In 30 Day Search and Full Archive Search, punctuation is not tokenized and is instead treated as whitespace.\nFor example, quoted \u201c#hashtag\u201d will match \u201chashtag\u201d but not #hashtag (use the hashtag # operator without quotes to match on actual hashtags)\nFor example, quoted \u201c$cashtag\u201d will match \u201ccashtag\u201d but not $cashtag (use the cashtag $ operator without quotes to match on actual cashtags)  \n**Note:**\u00a0This operator will match on both URLs and unwound URLs within a Tweet.\n",
        "line_start": 2330,
        "line_end": 2353
    },
    "119": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\t\n\nContent: \n#  \nMatches any Tweet with the given hashtag.  \nThis operator performs an exact match, NOT a tokenized match, meaning the rule \u201c2016\u201d will match posts with the exact hashtag \u201c2016\u201d, but not those with the hashtag \u201c2016election\u201d  \nExample:\n(#social OR #pizza OR #2016election) -#planet  \n**Note**: that the hashtag operator relies on Twitter\u2019s entity extraction to match hashtags, rather than extracting the hashtag from the body itself.\u00a0See\u00a0[HERE](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities)\u00a0for more information on Twitter Entities JSON attributes.  \n@  \nMatches any Tweet that mentions the given username.  \nThe to: operator returns a subset match of the @mention operator.  \nExample:\n(@twitterdev OR @twitterapi OR @twittereng) -@jack  \n**Note**: that the mention operator relies on Twitter\u2019s entity extraction to match mentioned users, rather than extracting the mention from the body itself.\u00a0See\u00a0[HERE](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities)\u00a0for more information on Twitter Entities JSON attributes.  \n\"keyword1 keyword2\"~N  \nCommonly referred to as a proximity operator, this matches a Tweet where the keywords are no more than N tokens from each other.  \nIf the keywords are in the opposite order, they can not be more than N-2 tokens from each other.  \nCan have any number of keywords in quotes.  \nN cannot be greater than 6.  \nExample:\n\"social media\"~5 OR \"twitter API\"~3  \n**Note**:\u00a0Only available with PowerTrack and Historical PowerTrack.  \ncontains:  \nSubstring match for Tweets that have the given substring in the body, regardless of tokenization. In other words, this does a pure substring match, and does not consider word boundaries.  \nUse double quotes to match substrings that contain whitespace or punctuation.  \nExample:\n(contains:social OR contains:\"wikipedia.com\") -contains:\"buy now\"  \n**Note**: Only available with PowerTrack and Historical PowerTrack.  \nfrom:  \nMatches any Tweet from a specific user.  \nExample:\n(from:2244994945 OR from:twitterapi OR from:twittereng) -from:jack  \nThe value must be the user\u2019s Twitter numeric Account ID or username (excluding the @ character). See\u00a0[HERE](https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-users-lookup)\u00a0for looking up numeric Twitter Account IDs.  \nto:  \nMatches any Tweet that is in reply to a particular user.  \nExample:\n(to:2244994945 OR to:twitterapi OR to:twittereng) -to:jack  \nThe value must be the user\u2019s numeric Account ID or username (excluding the @ character).\u00a0See\u00a0[HERE](https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-users-lookup)\u00a0\u00a0for looking up numeric Twitter Account IDs.  \nurl:\nPerforms a tokenized (keyword/phrase) match on the expanded URLs of a Tweet (similar to url\\_contains).  \nExample:\n@twitterdev url:\"developer.twitter.com\"  \n**Note:** When using PowerTrack or Historical PowerTrack, this operator will match on URLs contained within the original Tweet of a Quote Tweet. For example, if your rule includes url:\"developer.twitter.com\", and a Tweet contains that URL, any Quote Tweets of that Tweet will be included in the results. This is not the case when using the Search API.\nurl\\_title:  \n_Available alias_: within\\_url\\_title:  \nPerforms a keyword/phrase match on the (new) expanded URL HTML title metadata. See\u00a0[HERE](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/expanded-and-enhanced-urls)\u00a0for more information on expanded URL enrichment.  \n**Note**: Only available with PowerTrack and Historical PowerTrack.  \nurl\\_description:  \n_Available alias_: within\\_url\\_description:  \nPerforms a keyword/phrase match on the (new) expanded page description metadata. See\u00a0[HERE](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/expanded-and-enhanced-urls)\u00a0for more information on expanded URL enrichment.  \n**Note:** Only available with PowerTrack and Historical PowerTrack.  \nurl\\_contains:  \nMatches Tweets with URLs that literally contain the given phrase or keyword. To search for patterns with punctuation in them (for example, google.com) enclose the search term in quotes.  \nExample:\n(url\\_contains:\"developer.twitter.com\" OR\u00a0url\\_contains:wildfire) -url\\_contains:reddit  \n**Note**: If you\u2019re using the\u00a0[Expanded URL](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/expanded-and-enhanced-urls)\u00a0output format, we will match against the expanded URL as well.  \nbio:  \n_Available alias_: user\\_bio:  \nMatches a keyword or phrase within the user bio of a Tweet. This is a tokenized match within the contents of the 'description' field within the\u00a0[User object](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/user).  \nExample:\n(bio:engineer OR bio:\"wordpress.com\" OR bio:\ud83d\ude80) -bio:troll  \n**Note:** Only available with PowerTrack and Historical PowerTrack.  \nbio\\_name:\nMatches a keyword within the user bio name of a Tweet. This is a tokenized match within the contents of a user\u2019s \u201cname\u201d field within the\u00a0[User object](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/user).  \n**Note:** Only available with PowerTrack and Historical PowerTrack.bio\\_location:  \n_Available alias_: user\\_bio\\_location:  \nMatches tweets where the User object's location contains the specified keyword or phrase. This operator performs a tokenized match, similar to the normal keyword rules on the message body.  \nThis location is part of the\u00a0[User object](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/user), and is the account's 'home' lcoation,\u00a0is a non-normalized, user-generated, free-form string, and is different from a Tweet's location (when available).  \n**Note:** Only available with PowerTrack and Historical PowerTrack.  \nstatuses\\_count:  \n_Available alias_: tweets\\_count:  \nMatches Tweets when the author has posted a number of statuses that falls within the given range.  \nIf a single number is specified, any number equal to or higher will match.  \nAdditionally, a range can be specified to match any number in the given range \u00a0(for example, statuses\\_count:1000..10000).  \nExample:\nto:twitterapi statuses\\_count:10  \n@twitterdev statuses\\_count:1..10  \n**Note:** Only available with PowerTrack and Historical PowerTrack.  \nfollowers\\_count:  \nMatches Tweets when the author has a followers count within the given range.  \nIf a single number is specified, any number equal to or higher will match.  \nAdditionally, a range can be specified to match any number in the given range (for example, followers\\_count:1000..10000).'  \n**Note:** Only available with PowerTrack and Historical PowerTrack.  \nfriends\\_count:  \n_Available alias_: following\\_count:  \nMatches Tweets when the author has a friends count (the number of users they follow) that falls within the given range.  \nIf a single number is specified, any number equal to or higher will match.  \nAdditionally, a range can be specified to match any number in the given range (for example, friends\\_count:1000..10000).  \n**Note:** Only available with PowerTrack and Historical PowerTrack.  \nlisted\\_count:  \n_Available alias_: user\\_in\\_lists\\_count:  \nMatches Tweets when the author has been listed within Twitter a number of times falls within the given range.  \nIf a single number is specified, any number equal to or higher will match.  \nAdditionally, a range can be specified to match any number in the given range (for example, listed\\_count:10..100).  \n**Note:** Only available with PowerTrack and Historical PowerTrack.  \n$  \nMatches any Tweet that contains the specified \u2018cashtag\u2019 entity.  \nExample:\n($TWTR OR $TSLA OR $BRK.A) -$F  \n**Note**: The cashtag operator relies on Twitter\u2019s \u2018symbols\u2019 entity extraction to match cashtags, rather than trying to extract the cashtag from the body itself.\u00a0See\u00a0[HERE](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities)\u00a0for more information on Twitter Entities JSON attributes.  \nretweets\\_of:  \n_Available alias_: retweets\\_of\\_user:  \nMatches Tweets that are Retweets of a specified user. Accepts both usernames and numeric Twitter Account IDs (NOT Tweet status IDs).  \nExample:\n(retweets\\_of:2244994945 OR retweets\\_of:twitterapi OR retweets\\_of:twittereng) -retweets\\_of:jack  \nSee\u00a0[HERE](https://dev.twitter.com/rest/reference/get/users/lookup)\u00a0for looking up numeric Twitter Account IDs.  \nretweets\\_of\\_status\\_id:  \n_Available alias_: retweets\\_of\\_tweet\\_id:  \nDeliver only explicit Retweets of the specified Tweet.\u00a0Note that the status ID used should be the ID of an original Tweet and not a Retweet.  \nExample:\nretweets\\_of\\_status\\_id:1293593516040269825  \n**Note:** Only available with PowerTrack and Historical PowerTrack.  \nin\\_reply\\_to\\_status\\_id:  \n_Available alias_: in\\_reply\\_to\\_tweet\\_id:  \nDeliver only explicit replies to the specified Tweet.  \nExample:\nin\\_reply\\_to\\_status\\_id:1293593516040269825  \n**Note:** Only available with PowerTrack and Historical PowerTrack.  \nsample:  \nReturns a random sample of Tweets that match a rule rather than the entire set of Tweets. Sample percent must be represented by an integer value between 1 and 100. This operator applies to the entire rule and requires any \u201cOR\u2019d\u201d terms be grouped.  \n**Important Note:**\u00a0The sample operator first reduces the scope of the firehose to X%, then the rule/filter is applied tio that sampled subset. If you are using, for example,\u00a0**sample:10**, each Tweet has a 10% chance of being in the sample.  \nThe sampling is deterministic, and you will get the same data sample in realtime as you would if you pulled the data historically.  \nExample:\n#happybirthday sample:5\n\"happy birthday\"~5 sample:80  \n**Note:** Only available with PowerTrack and Historical PowerTrack.  \nsource:Matches any Tweet generated by the given source application. The value must be either the name of the application, or the application\u2019s URL.\u00a0\u00a0**Cannot be used alone.\n**\nExample:\n#happybirthday source:\"Twitter for iPhone\"\n\"This is a test Tweet from my TestingApp\" source:MyTestAppName  \n**Note**: As a Twitter app developer, Tweets created programattically by your application will have the source of your application Name and Website URL set in your [app settings](https://developer.twitter.com/en/docs/apps/app-management.html). The source operator seraches on the Tweet source attribute.\u00a0 See\u00a0[HERE](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities)\u00a0for more information on Twitter Entities JSON attributes.\nlang:  \nMatches Tweets that have been classified by Twitter as being of a particular language (if, and only if, the tweet has been classified). It is important to note that each Tweet is currently only classified as being of one language, so AND\u2019ing together multiple languages will yield no results.\u00a0This operator is not recommended to be used alone, matching volume will be very high.  \nThe list below represents the current supported languages and their corresponding BCP 47 language indentifier:  \n|     |     |     |     |\n| --- | --- | --- | --- |\n| Amharic: am | German: de | Malayalam: ml | Slovak: sk |\n| Arabic: ar | Greek: el | Maldivian: dv | Slovenian: sl |\n| Armenian: hy | Gujarati: gu | Marathi: mr | Sorani Kurdish: ckb |\n| Basque: eu | Haitian Creole: ht | Nepali: ne | Spanish: es |\n| Bengali: bn | Hebrew: iw | Norwegian: no | Swedish: sv |\n| Bosnian: bs | Hindi: hi | Oriya: or | Tagalog: tl |\n| Bulgarian: bg | Latinized Hindi: hi-Latn | Panjabi: pa | Tamil: ta |\n| Burmese: my | Hungarian: hu | Pashto: ps | Telugu: te |\n| Croatian: hr | Icelandic: is | Persian: fa | Thai: th |\n| Catalan: ca | Indonesian: in | Polish: pl | Tibetan: bo |\n| Czech: cs | Italian: it | Portuguese: pt | Traditional Chinese: zh-TW |\n| Danish: da | Japanese: ja | Romanian: ro | Turkish: tr |\n| Dutch: nl | Kannada: kn | Russian: ru | Ukrainian: uk |\n| English: en | Khmer: km | Serbian: sr | Urdu: ur |\n| Estonian: et | Korean: ko | Simplified Chinese: zh-CN | Uyghur: ug |\n| Finnish: fi | Lao: lo | Sindhi: sd | Vietnamese: vi |\n| French: fr | Latvian: lv | Sinhala: si | Welsh: cy |\n| Georgian: ka | Lithuanian: lt |     |  \nExample:  \n(@twitterdev OR to:twitterdev) lang:es  \n**Note:**\u00a0The language operator matches on the specific Tweet language determined by Twitter and set as the lang Tweet attribute.\u00a0 See\u00a0[HERE](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities)\u00a0for more information on Twitter Entities JSON attributes.\u00a0 If no language classification can be made for a Tweet, the Tweet lang will be set as \u2018und\u2019 (for undefined).  \nplace:  \nMatches Tweets tagged with the specified location\u00a0_or_\u00a0Twitter place ID (see examples). Multi-word place names (\u201cNew York City\u201d, \u201cPalo Alto\u201d) should be enclosed in quotes.  \nExample:\n(place:London OR place:\"Great Britain\") -place:USA\nplace:fd70c22040963ac7  \n**Note:**\u00a0See the\u00a0[GET geo/search](https://developer.twitter.com/en/docs/geo/places-near-location/api-reference/get-geo-search)\u00a0public API endpoint for how to obtain Twitter place IDs.  \n**Note:** This operator will not match on Retweets, since Retweet's places are attached to the original Tweet. It will also not match on places attached to the original Tweet of a Quote Tweet.  \nplace\\_country:  \nMatches Tweets where the country code associated with a tagged\u00a0[place/location](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo)\u00a0matches the given ISO alpha-2 character code.  \nExample:\nplace\\_country:GB OR place\\_country:AU OR place\\_country:CA  \nValid ISO codes can be found here:\u00a0[http://en.wikipedia.org/wiki/ISO\\_3166-1\\_alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)  \n**Note:** This operator will not match on Retweets, since Retweet's places are attached to the original Tweet. It will also not match on places attached to the original Tweet of a Quote Tweet.  \npoint\\_radius:\\[lon lat radius\\]  \nMatches against the Exact Location (x,y) of the Tweet when present, and in Twitter, against a \u201cPlace\u201d geo polygon, where the Place is fully contained within the defined region.  \n* Radius must be less than 25mi.\n* Units of radius supported are miles (mi) and kilometers (km).\n* Longitude is in the range of \u00b1180\n* Latitude is in the range of \u00b190\n* All coordinates are in decimal degrees.\n* Rule arguments are contained with brackets, space delimited.  \nExample:\npoint\\_radius:\\[-105.27346517 40.01924738 0.5mi\\]  \npoint\\_radius:\\[2.355128 48.861118 16km\\]  \n**Note:** This operator will not match on Retweets, since Retweet's places are attached to the original Tweet. It will also not match on places attached to the original Tweet of a Quote Tweet.  \nbounding\\_box:\\[west\\_long south\\_lat east\\_long north\\_lat\\]  \n_Available alias_: geo\\_bounding\\_box:  \nMatches against the Exact Location (long, lat) of the Tweet when present, and in Twitter, against a \u201cPlace\u201d geo polygon, where the Place is fully contained within the defined region.  \n* west\\_long south\\_lat represent the southwest corner of the bounding box where west-long is the longitude of that point, and south\\_lat is the latitude.\n* east\\_long and north\\_lat represent the northeast corner of the bounding box, where east\\_long is the longitude of that point, and north\\_lat is the latitude.\n* Width and height of the bounding box must be less than 25mi\n* Longitude is in the range of \u00b1180\n* Latitude is in the range of \u00b190\n* All coordinates are in decimal degrees.\n* Rule arguments are contained with brackets, space delimited.  \nExample:\nbounding\\_box:\\[-105.301758 39.964069 -105.178505 40.09455\\]  \n**Note:** This operator will not match on Retweets, since Retweet's places are attached to the original Tweet. It will also not match on places attached to the original Tweet of a Quote Tweet.  \nprofile\\_country:  \nExact match on the \u201ccountryCode\u201d field from the \u201caddress\u201d object in the Profile Geo enrichment.  \nUses a normalized set of two-letter country codes, based on ISO-3166-1-alpha-2 specification. This operator is provided in lieu of an operator for \u201ccountry\u201d field from the \u201caddress\u201d object to be concise.  \nprofile\\_region:  \nMatches on the \u201cregion\u201d field from the \u201caddress\u201d object in the Profile Geo enrichment.  \nThis is an exact full string match. It is not necessary to escape characters with a backslash. For example, if matching something with a slash, use \u201cone/two\u201d, not \u201cone\\\\/two\u201d. Use double quotes to match substrings that contain whitespace or punctuation.  \nprofile\\_locality:  \nMatches on the \u201clocality\u201d field from the \u201caddress\u201d object in the Profile Geo enrichment.  \nThis is an exact full string match. It is not necessary to escape characters with a backslash. For example, if matching something with a slash, use \u201cone/two\u201d, not \u201cone\\\\/two\u201d. Use double quotes to match substrings that contain whitespace or punctuation.  \nprofile\\_subregion:  \nMatches on the \u201csubRegion\u201d field from the \u201caddress\u201d object in the\u00a0[Profile Geo](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/profile-geo)\u00a0enrichment. In addition to targeting specific counties, these operators can be helpful to filter on a metro area without defining filters for every city and town within the region.  \nThis is an exact full string match. It is not necessary to escape characters with a backslash. For example, if matching something with a slash, use \u201cone/two\u201d, not \u201cone\\\\/two\u201d. Use double quotes to match substrings that contain whitespace or punctuation.  \nhas:geo  \nMatches Tweets that have Tweet-specific geo location data provided from Twitter. This can be either \u201cgeo\u201d lat-long coordinate, or a \u201clocation\u201d in the form of a Twitter\u00a0[\u201cPlace\u201d](https://dev.twitter.com/overview/api/places), with corresponding display name, geo polygon, and other fields.  \n**Note**: When using the Search API, this operator must be used in conjunction with other operators that don't include `is:` or `has:`. You can include this as a standalone operator when using PowerTrack and Historical PowerTrack.  \nhas:profile\\_geo  \n_Available alias_: has:derived\\_user\\_geo  \nMatches Tweets that have any\u00a0[Profile Geo](https://developer.twitter.com/en/docs/twitter-api/enterprise/enrichments/overview/profile-geo)\u00a0metadata, regardless of the actual value.  \n**Note**: When using the Search API, this operator must be used in conjunction with other operators that don't include `is:` or `has:`. You can include this as a standalone operator when using PowerTrack and Historical PowerTrack.  \nhas:links  \nThis operator matches Tweets that contain a link or referenced media in the \"text\" object of the payload.  \n**Note:** In addition to this operator matching Tweets with a link in their text, it also matches Tweets with media (image, video, gif), and Quote Tweets.  \n**Note:** When using the Search API, this operator must be used in conjunction with other operators that don't include `is:` or `has:`. You can include this as a standalone operator when using PowerTrack and Historical PowerTrack.  \nis:retweet  \nDeliver only explicit retweets that match a rule. Can also be negated to exclude retweets that match a rule from delivery and only original content is delivered.  \nThis operator looks only for true Retweets. Quoted Tweets which do not use Twitter\u2019s Retweet functionality will not be matched by this operator.  \n**Note:** When using the Search API, this operator must be used in conjunction with other operators that don't include `is:` or `has:`. You can include this as a standalone operator when using PowerTrack and Historical PowerTrack.  \nis:reply\nDelivers only explicit replies that match a rule. Can also be negated to exclude replies that match a rule from delivery (see example request below).  \nWhen used with PowerTrack, this operator matches on replies to an original Tweet, replies in quoted Tweets and replies in Retweets. When used with the Search API, this operator only matches on replies to an original Tweet and excludes replies in quoted Tweets and replies in Retweets.  \nExample:\n#contest123 is:reply\n@twitterdev -is:reply  \n**Note**: When using the Search API, this operator must be used in conjunction with other operators that don't include `is:` or `has:`. You can include this as a standalone operator when using PowerTrack and Historical PowerTrack.  \nis:quote  \nDelivers only Quote Tweets, or Tweets that reference another Tweet, as identified by the \"is\\_quote\\_status\":true in Tweet payloads. Can also be negated to exclude Quote Tweets.  \nExample:\n@twitterdev is:quote  \n**Note:** When using the Search API, this operator must be used in conjunction with other operators that don't include `is:` or `has:`. You can include this as a standalone operator when using PowerTrack and Historical PowerTrack.  \nis:verified\nDeliver only Tweets where the author is \u201cverified\u201d by Twitter. Can also be negated to exclude Tweets where the author is verified.  \nExample:\n@twitterdev is:verified  \n**Note:** When using the Search API, this operator must be used in conjunction with other operators that don't include `is:` or `has:`. You can include this as a standalone operator when using PowerTrack and Historical PowerTrack.  \nhas:mentions\nMatches Tweets that mention another Twitter user.  \n**Note:** When using the Search API, this operator must be used in conjunction with other operators that don't include `is:` or `has:`. You can include this as a standalone operator when using PowerTrack and Historical PowerTrack.  \nhas:hashtags\nMatches Tweets that contain a hashtag.  \n**Note:** When using the Search API, this operator must be used in conjunction with other operators that don't include `is:` or `has:`. You can include this as a standalone operator when using PowerTrack and Historical PowerTrack.  \nhas:media  \n_Available alias_: has:media\\_link  \nMatches Tweets that contain a media url classified by Twitter. For example, pic.twitter.com.  \n**Note:** When using the Search API, this operator must be used in conjunction with other operators that don't include `is:` or `has:`. You can include this as a standalone operator when using PowerTrack and Historical PowerTrack.  \nhas:images\nMatches Tweets that contain a media url classified by Twitter. For example, pic.twitter.com.  \n**Note:** When using the Search API, this operator must be used in conjunction with other operators that don't include `is:` or `has:`. You can include this as a standalone operator when using PowerTrack and Historical PowerTrack.  \nhas:videos  \n_Available alias_: has:video\\_link  \nMatches Tweets that contain native Twitter videos, uploaded directly to Twitter. This will not match on videos created with YouTube, Periscope, or Tweets with links to other video hosting sites.  \n**Note:** When using the Search API, this operator must be used in conjunction with other operators that don't include `is:` or `has:`. You can include this as a standalone operator when using PowerTrack and Historical PowerTrack.  \nhas:symbols  \nMatches Tweets that contain a cashtag symbol (with a leading \u2018$\u2019 character. For example, $tag).  \n**Note:** When using the Search API, this operator must be used in conjunction with other operators that don't include `is:` or `has:`. You can include this as a standalone operator when using PowerTrack and Historical PowerTrack.  \nOperators by product  \nAll enterprise operators are available with PowerTrack and Historical PowerTrack APIs. However, only a subset of operators are available to the enterprise Search APIs, as noted on this page.  \nThe dark blue tags note which operators are available to different enterprise products:  \nPowerTrack Search  \nWe've also noted which operators are also available to the premium Search APIs. The darker blue represents paid premium tiers, while the lighter represents the free Sandbox tier:  \nPremium Sandbox  \n| Operator | Product | Description | Matches on payload element |\n| --- | --- | --- | --- |\n| \"exact phrase match\" | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | Matches an exact phrase within the body of a Tweet.<br><br>Components that can translate into a search operators will be treated as words. In other words:<br><br>* `\"#hashtag\"`\u00a0will match `hashtag` but not `#hashtag` (use the [hashtag operator](#hashtag-operator) without quotes to match on actual hashtags)\u00a0<br>* `\"$TWTR\"`\u00a0will match the word `TWTR` but not the cashtag `$TWTR` (use the [cashtag operator](#cashtag-operator) without quotes to match on actual cashtags)<br><br>**Note:**\u00a0in 30 Day Search and Full Archive Search (Enterprise and Premium), punctuation is not tokenized and is instead treated as whitespace. | `text` |\n| @   | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | Matches any Tweet that mentions the given username.\u00a0The value can be either the username (excluding the `@` character) or the user\u2019s numeric ID or (obtained for example via the\u00a0[GET users/lookup](https://developer.twitter.com/content/developer-twitter/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-users-lookup)\u00a0endpoint). | `entities.user_mentions` |\n| #   | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | Matches any Tweet with the given hashtag.<br><br>This operator performs an exact match. For example meaning the rule `#1989` will match Tweets containing the exact hashtag `#1989`, but not those with the hashtag `#TaylorSwift1989`.<br><br>**Note:** this operator relies on Twitter\u2019s entity extraction to match hashtags, rather than extracting the hashtag from the body itself.\u00a0For more details on JSON attributes from entities, refer to\u00a0[Twitter Entities](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities). | `entities.hashtags` |\n| $   | PowerTrack<br><br>Search | Matches any Tweet that contains the specified cashtag (where the leading character of the token is `$`).<br><br>**Note:**\u00a0this operator relies on Twitter\u2019s entity extraction to match links, rather than extracting the link from the body itself.\u00a0For more details on JSON attributes from entities, refer to\u00a0[Twitter Entities](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities). | `entities.symbols` |\n| bio: | PowerTrack | _Available alias_: user\\_bio:<br><br>Matches a keyword (using tokenized match) or a phrase within the user bio of a Tweet. Use double quotes to match a phrase. In other words:<br><br>* `bio:software engineer` will match Tweets with the keyword `engineer` from users with the word `software` in their bio<br>* `bio:\"software engineer\"` will match any Tweet posted by users with the phrase `software engineer` in their bio | `user``.description` |\n| bio\\_location: | PowerTrack | _Available alias_: user\\_bio\\_location:<br><br>Matches Tweets where the\u00a0[User object](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/user)'s location contains the specified keyword (using tokenized match) or phrase.<br><br>This location is a non-normalized, user-generated, free-form string, and is different from a Tweet's location (when available). | `user.location` |\n| bio\\_name: | PowerTrack | Matches Tweets where the\u00a0[User object](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities/user)'s name contains the specified keyword (using tokenized match) or phrase. | `user.name` |\n| bounding\\_box: | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | _Available alias_: geo\\_bounding\\_box:<br><br>Matches against the exact location (long, lat) of the Tweet (when present), and against a geo polygon (where the Place is fully contained within the defined region).<br><br>* west\\_long south\\_lat represent the southwest corner of the bounding box where west-long is the longitude of that point, and south\\_lat is the latitude.<br>* east\\_long and north\\_lat represent the northeast corner of the bounding box, where east\\_long is the longitude of that point, and north\\_lat is the latitude.<br>* Width and height of the bounding box must be less than 25mi<br>* Longitude is in the range of \u00b1180<br>* Latitude is in the range of \u00b190<br>* All coordinates are in decimal degrees.<br>* Rule arguments are contained within brackets, space delimited.<br><br>**Note:**\u00a0operators matching on\u00a0place\u00a0(Tweet geo) will only include matches from original Tweets. Retweets do not contain any place data. | `place`\u00a0(original Tweets only) |\n| contains: | PowerTrack | Substring match for Tweets that have the given substring in the body, regardless of tokenization. In other words, this does a pure substring match and does not consider word boundaries.<br><br>Use double quotes to match substrings that contain whitespace or punctuation. | `text` |\n| <emoji> | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | Matches an emoji within the body of a Tweet.<br><br>This is a tokenized match, so your emoji will be matched against the tokenized text of the Tweet body. Tokenization is based on punctuation, symbol/emoji, and separator Unicode basic plane characters. For example, a Tweet with the text \u201cI like \ud83c\udf55\u201d would be split into the following tokens: I, like, \ud83c\udf55. These tokens would then be compared to the emoji used in your rule.<br><br>**Note:**\u00a0if an emoji has a variant, you must use double quotes to add to a rule. | `text` |\n| followers\\_count: | PowerTrack | Matches Tweets when the author has a followers count within the given range.<br><br>* A single number (e.g. `followers_count:42`) will match any number equal to or greater than the value specified.<br>* A range (e.g. `followers_count:42..1337`) will match any number in the given range. | `user.followers_count` |\n| friends\\_count: | PowerTrack | _Available alias_: following\\_count:<br><br>Matches Tweets when the author has a friends count (the number of users they follow) that falls within the given range.<br><br>* A single number (e.g. `followers_count:42`) will match any number equal to or greater than the value specified.<br>* A range (e.g. `followers_count:42..1337`) will match any number in the given range. | `user.friends_count` |\n| from: | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | Matches any Tweet from a specific user. The value can be either the username (excluding the `@` character) or the user\u2019s numeric ID or (obtained for example via the\u00a0[GET users/lookup](https://developer.twitter.com/content/developer-twitter/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-users-lookup)\u00a0endpoint). | `user.id`,\u00a0`user.id_str` (if using User ID)<br><br>`user.screen_name`\u00a0(if using username) |\n| has:geo | PowerTrack<br><br>Search<br><br>Premium | Matches Tweets that have Tweet-specific geolocation data provided from Twitter. This can be either \u201cgeo\u201d lat-long coordinate, or a \u201clocation\u201d in the form of a Twitter\u00a0[Place](https://dev.twitter.com/overview/api/places), with the corresponding display name, geo polygon, and other fields.<br><br>Cannot be used as a standalone operator.<br><br>**Note:**\u00a0operators matching on\u00a0place\u00a0(Tweet geo) will only include matches from original tweets. Retweets do not contain any place data. | `place`\u00a0(original Tweets only) |\n| has:hashtags | PowerTrack<br><br>Search<br><br>Premium | Matches Tweets that contain at least one hashtag.<br><br>Cannot be used as a standalone operator. | `entities.hashtags` |\n| has:images | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | Matches Tweets that contain at least one classified image URL.<br><br>Cannot be used as a standalone operator. | `entities.media` |\n| has:lang | PowerTrack | Matches Tweets that have been classified by Twitter as being of a particular language.<br><br>If a Tweet has not been classified, the operator will not match. Each Tweet is currently only classified as being of one language, so AND\u2019ing together multiple languages will yield no results.<br><br>Cannot be used as a standalone operator. | `lang`\u00a0when value is not `und` |\n| has:links | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | This operator matches Tweets which contain links in the Tweet body.<br><br>Cannot be used as a standalone operator.<br><br>**Note:** this operator relies on Twitter\u2019s entity extraction to match links, rather than extracting the link from the body itself.\u00a0For more details on JSON attributes from entities, refer to\u00a0[Twitter Entities](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities). | `entities.urls` |\n| has:media | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | _Available alias_: has:media\\_link<br><br>Matches Tweets that contain at least one classified media URL.<br><br>Cannot be used as a standalone operator. | `entities.media` |\n| has:mentions | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | Matches Tweets that mention another Twitter user.<br><br>Cannot be used as a standalone operator. | `entities.user_mentions` |\n| has:profile\\_geo | PowerTrack<br><br>Search<br><br>Premium | _Available alias_: has:derived\\_user\\_geo<br><br>Matches Tweets that have any\u00a0[Profile Geo](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/enrichments/overview/profile-geo)\u00a0metadata, regardless of the actual value.<br><br>Cannot be used as a standalone operator. | `user.location` |\n| has:symbols | PowerTrack<br><br>Enterprise | Matches Tweets that contain a cashtag symbol (e.g. `$TWTR`).<br><br>Cannot be used as a standalone operator. | `entities.symbols` |\n| has:videos | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | _Available alias_: has:video\\_link<br><br>Matches Tweets that contain at least one classified media URL.<br><br>Cannot be used as a standalone operator. | `entities.media` |\n| in\\_reply\\_to\\_status\\_id: | PowerTrack | _Available alias_: in\\_reply\\_to\\_tweet\\_id:<br><br>Deliver only explicit replies to the specified Tweet. | `id`, `id_str` of the target Tweet |\n| is:quote | PowerTrack | Deliver explicit Quote Tweets that match a rule.<br><br>It can also be negated\u00a0(`-is:quote`) to exclude Quote Tweets that match a rule from delivery.<br><br>Cannot be used as a standalone operator. | `is_quote_status` (if\u00a0`true`) |\n| is:reply | PowerTrack<br><br>Search<br><br>Premium | Deliver only replies that match a rule.<br><br>It can also be negated\u00a0(`-is:reply`) to exclude delivery of replies that match the specified rule.<br><br>With PowerTrack, this operator matches on:<br><br>* Replies to an original Tweet<br>* Replies in quoted Tweets<br>* Replies in Retweets<br><br>  <br>When used with the Search API, this operator matches on replies to an original Tweet, but excludes replies in quoted Tweets and replies in Retweets.<br><br>You can use this operators in conjunction with `is:retweet` and `is:quote` to only deliver replies to original Tweets.<br><br>Cannot be used as a standalone operator with the Search API.<br><br>**Note**: with Premium, this operator is not available in Sandbox dev environments. | Reply elements, e.g.\u00a0`in_reply_to_status_id` |\n| is:retweet | PowerTrack<br><br>Search<br><br>Premium | Deliver only explicit Retweets that match a rule.<br><br>It can also be negated (`-is:retweet`) to exclude Retweets that match a rule from delivery and only original content is delivered.<br><br>This operator looks only for true Retweets (i.e. Retweets posted using the Retweet button). Quoted Tweets and modified Tweets which do not use Twitter\u2019s Retweet functionality will not be matched by this operator.<br><br>Cannot be used as a standalone operator. | Retweet elements, e.g.\u00a0`retweeted_status` |\n| is:verified | PowerTrack<br><br>Search<br><br>Premium | Deliver only Tweets where the author is verified by Twitter.<br><br>It can also be negated to exclude Tweets where the author is verified.<br><br>Cannot be used as a standalone operator. | `user.verified` |\n| keyword | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | Matches a keyword within the body of a Tweet.<br><br>This is a tokenized match, meaning that your keyword string will be matched against the tokenized text of the Tweet body. Tokenization is based on punctuation, symbol/emoji, and separator Unicode basic plane characters. For example, a Tweet with the text \u201cI like coca-cola\u201d would be split into the following tokens: `I`, `like`, `coca`, `cola`. These tokens would then be compared to the keyword string used in your rule. To match strings containing punctuation (e.g. coca-cola), symbol, or separator characters, you must use an [exact phrase match](#exact-match) operator. | `text` |\n| lang: | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | Matches Tweets that have been classified by Twitter as being of a particular language (if, and only if, the tweet has been classified). Each Tweet will be classified with only one language, so AND\u2019ing together multiple languages will yield no results.<br><br>**Note:**\u00a0if no language classification can be made the provided result is `und` (for undefined).<br><br>This operator will only match against supported languages. Providing any other value (including `und`) will result in the operator being ignored (in other words, Tweets will not be filtered by this operator). The list below represents the currently supported languages and their corresponding BCP 47 language identifier:<br><br>`am` Amharic<br><br>`hu` Hungarian<br><br>`pt` Portuguese<br><br>`ar` Arabic<br><br>`is` Icelandic<br><br>`ro` Romanian<br><br>`hy` Armenian<br><br>`in` Indonesian<br><br>`ru` Russian<br><br>`bn` Bengali<br><br>`it` Italian<br><br>`sr` Serbian<br><br>`bg` Bulgarian<br><br>`ja` Japanese<br><br>`sd` Sindhi<br><br>`my` Burmese<br><br>`kn` Kannada<br><br>`si` Sinhala<br><br>`zh` Chinese<br><br>`km` Khmer<br><br>`sk` Slovak<br><br>`cs` Czech<br><br>`ko` Korean<br><br>`sl` Slovenian<br><br>`da` Danish<br><br>`lo` Lao<br><br>`ckb` Sorani Kurdish<br><br>`nl` Dutch<br><br>`lv` Latvian<br><br>`es` Spanish<br><br>`en` English<br><br>`lt` Lithuanian<br><br>`sv` Swedish<br><br>`et` Estonian<br><br>`ml` Malayalam<br><br>`tl` Tagalog<br><br>`fi` Finnish<br><br>`dv` Maldivian<br><br>`ta` Tamil<br><br>`fr` French<br><br>`mr` Marathi<br><br>`te` Telugu<br><br>`ka` Georgian<br><br>`ne` Nepali<br><br>`th` Thai<br><br>`de` German<br><br>`no` Norwegian<br><br>`bo` Tibetan<br><br>`el` Greek<br><br>`or` Oriya<br><br>`tr` Turkish<br><br>`gu` Gujarati<br><br>`pa` Panjabi<br><br>`uk` Ukrainian<br><br>`ht` Haitian<br><br>`ps` Pashto<br><br>`ur` Urdu<br><br>`iw` Hebrew<br><br>`fa` Persian<br><br>`ug` Uyghur<br><br>`hi` Hindi<br><br>`pl` Polish<br><br>`vi` Vietnamese<br><br>`cy` Welsh | `lang`\u00a0when value is not `und` |\n| listed\\_count: | PowerTrack | _Available alias_: user\\_in\\_lists\\_count:<br><br>Matches Tweets when the author has been listed on Twitter a number of times falls within the given range.<br><br>* A single number (e.g. `listed_count:42`) will match any number equal to or greater than the value specified.<br>* A range (e.g. `listed_count:42..1337`) will match any number in the given range. | `user.listed_count` |\n| place\\_country: | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | Matches Tweets where the country code associated with a tagged\u00a0[place/location](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo)\u00a0matches the given [ISO alpha-2 character code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).<br><br>**Note:**\u00a0operators matching on place (Tweet geo) will only include matches from original tweets. Retweets do not contain any place data. | `place`\u00a0(original Tweets only) |\n| place: | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | Matches Tweets tagged with specified location or\u00a0[Twitter place ID](https://developer.twitter.com/content/developer-twitter/en/docs/geo/places-near-location/api-reference/get-geo-search). Multi-word place names should be enclosed in quotes (e.g. `place:\"San Francisco\"`)<br><br>**Note:**\u00a0operators matching on\u00a0place\u00a0(Tweet geo) will only include matches from original tweets. Retweets do not contain any place data. | `place`\u00a0(original Tweets only) |\n| point\\_radius: | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | **Note:** operators matching on\u00a0place\u00a0(Tweet geo) will only include matches from original tweets. Retweets do not contain any place data. | `place`\u00a0(original Tweets only) |\n| profile\\_bounding\\_box:\\[west\\_long south\\_lat east\\_long north\\_lat\\] | PowerTrack | Matches against the user's exact Location (long, lat) in the [Profile Geo enrichment](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/enrichments/overview) where the Place is fully contained within the defined region.<br><br>* west\\_long south\\_lat represent the southwest corner of the bounding box where west-long is the longitude of that point, and south\\_lat is the latitude.<br>* east\\_long and north\\_lat represent the northeast corner of the bounding box, where east\\_long is the longitude of that point, and north\\_lat is the latitude.<br>* Width and height of the bounding box must be less than 25mi<br>* Longitude is in the range of \u00b1180<br>* Latitude is in the range of \u00b190<br>* All coordinates are in decimal degrees.<br>* Rule arguments are contained within brackets, space delimited.<br><br>**Note:**\u00a0operators matching on\u00a0place\u00a0(Tweet geo) will only include matches from original tweets. Retweets do not contain any place data. | `user.derived.locations.geo.coordinates` |\n| profile\\_country: | PowerTrack<br><br>Search<br><br>Premium | Exact match on the country code from the [Profile Geo enrichment](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/enrichments/overview).<br><br>Uses a normalized set of two-letter country codes, based on [ISO-3166-1-alpha-2 specification](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).<br><br>To be concise, this operator is provided in lieu of an operator for the country field from the address object.<br><br>**Note:**\u00a0operators matching on\u00a0place\u00a0(Tweet geo) will only include matches from original tweets. Retweets do not contain any place data. | `user.derived.locations.country_code` |\n| profile\\_locality: | PowerTrack<br><br>Search<br><br>Premium | Exact match on the Locality field from the\u00a0[Profile Geo enrichment](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/enrichments/overview).<br><br>This is an exact full string match.<br><br>It is not necessary to escape characters with a backslash. For example, if matching something with a slash, use `one/two`.<br><br>Use double quotes to match substrings that contain whitespace or punctuation, e.g. `profile_locality:\"Lower East Side\"`. | `user.derived.locations.locality` |\n| profile\\_point\\_radius:\\[lon lat radius\\] | PowerTrack | Matches against the Exact Location (x,y) of the user's\u00a0[Profile Geo enrichment](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/enrichments/overview).<br><br>* Units of radius supported are miles (mi) and kilometers (km).<br>* Radius must be less than 25mi.<br>* Longitude is in the range of \u00b1180<br>* Latitude is in the range of \u00b190<br>* All coordinates are in decimal degrees.<br>* Rule arguments are contained within brackets, space delimited.<br><br>**Note:**\u00a0operators matching on\u00a0place\u00a0(Tweet geo) will only include matches from original tweets. Retweets do not contain any place data. | `user.derived.locations.geo` |\n| profile\\_region: | PowerTrack<br><br>Search<br><br>Premium | Exact match on the Region field from the\u00a0[Profile Geo enrichment](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/enrichments/overview).<br><br>This is an exact full string match.<br><br>It is not necessary to escape characters with a backslash. For example, if matching something with a slash, use `one/two`.<br><br>Use double quotes to match substrings that contain whitespace or punctuation, e.g. `profile_locality:\"New York\"`. | `user.derived.locations.region` |\n| profile\\_subregion: | PowerTrack | Exact match on the Subregion field from the\u00a0[Profile Geo enrichment](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/enrichments/overview).<br><br>This is an exact full string match.<br><br>It is not necessary to escape characters with a backslash. For example, if matching something with a slash, use `one/two`.<br><br>Use double quotes to match substrings that contain whitespace or punctuation, e.g. `profile_locality:\"Kings County\"`. | `user.derived.locations.sub_region` |\n| \"keyword1 keyword2\"~N | PowerTrack<br><br>Search | Commonly referred to as a proximity operator, this matches a Tweet where the keywords are no more than N tokens from each other.<br><br>If the keywords are in the opposite order, they can not be more than N-2 tokens from each other.<br><br>Can have any number of keywords in quotes.<br><br>N cannot be greater than 6. | `text` |\n| retweets\\_of\\_status\\_id: | PowerTrack | _Available alias_: retweets\\_of\\_tweet\\_id:<br><br>Deliver only explicit Retweets of the specified original Tweet. | `retweeted_status.id`, `retweeted_status.id_str` |\n| retweets\\_of: | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | _Available alias_: retweets\\_of\\_user:<br><br>Matches any Tweet that are Retweets of the given user.\u00a0The value can be either the username (excluding the `@` character) or the user\u2019s numeric ID or (obtained for example via the\u00a0[GET users/lookup](https://developer.twitter.com/content/developer-twitter/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-users-lookup)\u00a0endpoint). | `retweeted_status.id` (if present) |\n| sample: | PowerTrack | Returns a random percent sample of Tweets that match a rule rather than the entire set of Tweets. The percent value must be represented by an integer between 1 and 100.<br><br>This operator applies to the entire rule and requires all OR'd terms to be grouped.<br><br>**Note:**\u00a0the sample operator first reduces the scope of the firehose to X%, then the rule/filter is applied to that sampled subset. If you are using, for example,\u00a0`sample:10`, each Tweet has a 10% chance of being in the sample.\u00a0<br><br>**Note:** the sampling is deterministic, and you will get the same data sample in realtime as you would if you pulled the data historically. |     |\n| source: | PowerTrack | Matches any Tweet generated by the given source application. The value must be either the name of the application or the application\u2019s URL.<br><br>Cannot be used as a standalone operator. | `source` |\n| statuses\\_count: | PowerTrack | _Available alias_: tweets\\_count:<br><br>Matches Tweets when the author has posted a number of statuses that falls within the given range.<br><br>* A single number (e.g. `statuses_count:42`) will match any number equal to or greater than the value specified.<br>* A range (e.g. `statuses_count:42..1337`) will match any number in the given range. | `user``.statuses_count` |\n| to: | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | Matches any Tweet that is in reply to a particular user.\u00a0The value can be either the username (excluding the `@` character) or the user\u2019s numeric ID or (obtained for example via the\u00a0[GET users/lookup](https://developer.twitter.com/content/developer-twitter/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-users-lookup)\u00a0endpoint). | `text` |\n| url: | PowerTrack<br><br>Search<br><br>Premium<br><br>Sandbox | Performs a tokenized match on the expanded URLs of a Tweet. Tokens and phrases containing punctuation or special characters should be double-quoted (e.g. `url:\"/developer\"`).<br><br>While generally not recommended, the operator can also match on a specific protocol, enclosed in double-quotes (e.g. `url:\"https://developer.twitter.com\"`). | `entities.urls.expanded_url` |\n| url\\_contains: | PowerTrack | Performs a keyword/phrase match on the (new) [expanded URL title metadata enrichment](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/enrichments/overview/expanded-and-enhanced-urls). | `entities.urls.expanded_url` |\n| url\\_description: | PowerTrack | _Available alias_: within\\_url\\_description:<br><br>Performs a keyword/phrase match on the (new) [expanded page description metadata enrichment](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/enrichments/overview/expanded-and-enhanced-urls). | `entities.urls.unwound.description` |\n| url\\_title: | PowerTrack | _Available alias_: within\\_url\\_title:<br><br>Performs a keyword/phrase match on the (new) [expanded URL title metadata enrichment](https://developer.twitter.com/content/developer-twitter/en/docs/twitter-api/enterprise/enrichments/overview/expanded-and-enhanced-urls). | `entities.urls.title` |  \nRate limits: Enterprise\n",
        "line_start": 2367,
        "line_end": 2685
    },
    "120": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\t\n\tOverview\n\nContent: \n## Overview  \nEvery day many thousands of developers make requests to the Twitter API. To help manage the sheer volume of these requests, limits are placed on the number of requests that can be made. These limits help us provide the reliable and scalable API that our developer community relies on.  \nThe maximum number of requests that are allowed is based on a time interval, some specified period or window of time. If an endpoint has a rate limit of 900 requests/15-minutes, then up to 900 requests over any 15-minute interval is allowed.\n",
        "line_start": 2,
        "line_end": 5
    },
    "121": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\t\n\tOverview\n\t\n\nContent: \n###\nEnterprise rate limits per window  \n| Product | Endpoint | Rate limit |\n| --- | --- | --- |\n| PowerTrack API | Streaming endpoint | 60 requests per minute |\n| Rules endpoint | 60 requests per minute aggregated across all /rules endpoints |\n| Replay endpoint | 5 requests per 5 minutes |\n| Historical PowerTrack API |     | 60 Jobs can be created per (UTC) day. |\n|     | 30 Jobs can be created per hour. |\n|     | 2 Jobs can be estimating concurrently. |\n|     | 2 Jobs can be running concurrently. |\n| Decahose API |     | 10 requests per minute |\n| Streaming likes API |     | 10 requests per minute |\n| Firehose API |     | 10 requests per minute |\n| Account Activity API | POST account\\_activity/webhooks | 15 requests per 15 minutes |\n| GET account\\_activity/webhooks | 15 requests per 15 minutes |\n| PUT account\\_activity/webhooks/:webhook\\_id | 15 requests per 15 minutes |\n| POST account\\_activity/webhooks/:webhook\\_id/subscriptions/all | 500 requests per 15 minutes |\n| GET account\\_activity/subscriptions/count | 15 requests per 15 minutes |\n| GET account\\_activity/webhooks/:webhook\\_id/subscriptions/all | 500 requests per 15 minutes |\n| GET account\\_activity/webhooks/:webhook\\_id/subscriptions/all/list | 50 requests per 15 minutes |\n| DELETE account\\_activity/webhooks/:webhook\\_id | 15 requests per 15 minutes |\n| DELETE /account\\_activity/webhooks/:webhook\\_id/subscriptions/:user\\_id/all.json | 500 requests per 15 minutes |\n| Replay | 5 requests per 15 minutes |\n| Search API |     | Per minute rate limit will vary by contract |\n|     | 20 requests per second aggregated across either the 30 day data and counts endpoints, or across the full-archive data and counts endpoints |\n| Engagement API |     | Per minute rate limit will vary by contract |\n| Compliance Firehose API |     | 10 requests per minute |\n| Usage API |     | 2 requests per minute |  \nEdit Tweets\n",
        "line_start": 405,
        "line_end": 435
    },
    "122": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\t\n\tIntroduction\n\nContent: \n## Introduction  \nEnterprise endpoints have been updated to provide edited Tweet metadata. The _Edit Tweets_ feature was first introduced for testing among Twitter employees on September 1, 2022. Starting on that date, eligible Tweets were editable for 30 minutes and up to 5 times.\u00a0_All objects for Tweets created since September 29, 2022_\u00a0include Tweet edit metadata, even if the Tweet was never edited. Each time a Tweet is edited, a new Tweet ID is created. A Tweet's edit history can be described by chaining these IDs together, starting with the original ID.\u00a0Additionally, if any Tweet in the edit chain is deleted, all Tweets in that chain are deleted as well.  \nThese metadata details are included automatically. No request parameters are needed to include available edit history as part of the Tweet object.  \nWith these new metadata, a developer can find out:  \n* If a Tweet was edit eligible at the time of creation. Some Tweets, such as those with polls or scheduled Tweets, cannot be edited.\n* Tweets are editable for 30 minutes, and can be edited up to 5 times. For editable Tweets, you can see if time for editing remains and how many more edits are possible.\n* If you are viewing an edited version of a Tweet. In most cases, the API will return the most recent version of a Tweet, unless a specific past version is requested by Tweet ID.  \nThree new Tweet attributes have been added at the root level:  \n* **edit\\_history**\u00a0 - Provides all Tweet IDs associated with the edit history of the Tweet. The \"initial\\_tweet\\_id\" attribute indicates the original Tweet and the \"edit\\_tweet\\_ids\" attribute is an array that provides all IDs associated with its edit history. If the Tweet has not been edited, this array will contain a single ID.  \n\"edit\\_history\": {\n\"initial\\_tweet\\_id\": \"1283764123\"\n\"edit\\_tweet\\_ids\": \\[\"1283764123\"\\]\n}  \n* **edit\\_controls** - Provides attributes that indicate when the 30-minute edit window ends and how many potential edits remain.  \n\"edit\\_controls\": {\n\"editable\\_until\\_ms\": 1660155761384\n\"edits\\_remaining\": 3\n}  \n* **editable** - Indicates whether a Tweet was eligible for editing when created.  \n\"editable\": true  \nMost Tweets are eligible. However, the following types of Tweets are not:  \n* Tweet is promoted\n* Tweet has a poll\n* Tweet is a non-self-thread reply\n* Tweet is a Retweet (note that Quote Tweets are eligible for edit)\n* Tweet is nullcast\n* Community Tweet\n* Superfollow Tweet\n* Collaborative Tweet  \nExample attributes for unedited Tweet  \n----------------------------------------  \nThe JSON below highlights edit metadata that is included for a Tweet posted after the edit Tweet feature was added. This example is for a Tweet that has no edit history.  \nNote that the \"edit\\_tweet\\_ids\" array has a single ID.  \n`{   \"created_at\": \"Wed Aug 16 18:29:02 +0000 2022\",   \"id\": 1557433858676740098,   \"id_str\": \"1557433858676740098\",   \"text\": \"I wonder if I will every use teh edit button\",   \"edit_history\": {     \"initial_tweet_id\": \"1557433858676740098\",     \"edit_tweet_ids\": [\"1557433858676740098\"]   },   \"edit_controls\": {     \"editable_until_ms\": 1660155761384,     \"edits_remaining\": 5   },   \"editable\": true }`\n",
        "line_start": 178,
        "line_end": 212
    },
    "123": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\t\n\tExample attributes for an edited Tweet\n\nContent: \n## Example attributes for an edited Tweet  \nThe JSON below highlights edit metadata that is included for a Tweet posted after the edit Tweet feature was added. This example is for a Tweet that has had a single edit.  \nNote that the \"edit\\_tweet\\_ids\" array has two IDs, one for the original Tweet and one for the edited update.  \n`{   \"created_at\": \"Wed Aug 16 18:35:42 +0000 2022\",   \"id\": 1557445923210514432,   \"id_str\": \"1557445923210514432\",   \"text\": \"I wonder if I will ever use the edit button\",   \"edit_history\": {     \"initial_tweet_id\": \"1557433858676740098\",     \"edit_tweet_ids\": [\"1557433858676740098\", \"1557445923210514432\"]   },   \"edit_controls\": {     \"editable_until_ms\": 1660155761384,     \"edits_remaining\": 4   },   \"editable\": true }`\n",
        "line_start": 2989,
        "line_end": 2993
    },
    "124": {
        "content": "Source document: data/platform-docs-versions-english/X_Twitter-API-Enterprise/Fundamentals.md\nParagraph location: \n\t\n\tCompliance support\n\nContent: \n## Compliance support  \nThe\u00a0[Compliance Firehose](https://developer-staging.twitter.com/en/docs/twitter-api/enterprise/compliance-firehose-api/overview)\u00a0and the v2\u00a0[batch compliance endpoint](https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance)\u00a0have both been updated to provide edit Tweet support:  \nA new \"tweet\\_edit\" event type has been added to the Compliance Firehose.  \n`{   \"tweet_edit\": {     \"id\": <tweetId>,     \"initial_tweet_id\": <tweetId>,     \"edit_tweet_ids\": [<tweetId1>, <tweetId2>, <tweetId3> ...],     \"timestamp_ms\": \"<timestampMsStr>\"   } }`\n",
        "line_start": 2998,
        "line_end": 3002
    }
}